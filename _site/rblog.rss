<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
 <title>R Blog en RSS</title>
 <description>RSS feed</description>
 <link>http://colinfay.me/categories/#r-blog-en</link>
 <lastBuildDate>Mon, 06 Sep 2010 00:01:00 +0000 </lastBuildDate>
 <pubDate>Sun, 06 Sep 2009 16:20:00 +0000</pubDate>
 <ttl>1800</ttl>

 
 <item>
  <title>{attempt} is now on CRAN</title>
  <description></description>
  <link>/attempt-cran/</link>
  <guid isPermaLink="true">http://localhost:4000/attempt-cran/</guid>
  <pubDate>2018-01-03 00:00:00 +0100</pubDate>
  <content><p>2018 new year resolution: <a href="https://twitter.com/_ColinFay/status/945916988433543168">writing one package a
month</a> üéâ</p>

<p>Let‚Äôs launch this with {attempt}, a package which extends and
facilitates condition handling.</p>

<!--more-->

<p>{attempt} is designed to handle the cases when something / someone
attempts to do something it shouldn‚Äôt.</p>

<p>For example :</p>

<ul>
  <li>an attempt to run a <code class="highlighter-rouge">log("a")</code> (error)</li>
  <li>an attempt to connect to a web API without an internet connexion
running (error)</li>
  <li>an attempt to <code class="highlighter-rouge">paste()</code> <code class="highlighter-rouge">"good morning</code> and <code class="highlighter-rouge">iris</code> (message/warning)</li>
  <li>‚Ä¶</li>
</ul>

<p>{attempt} provides several condition handlers, from try catch to simple
message printing.</p>

<p>{attempt} only depends on {rlang} and focuses on speed, making it easy
to implement in other functions, packages and data analysis.</p>

<h1 id="install">Install</h1>

<p>For official release:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"attempt"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>For dev version</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ColinFay/attempt"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h1 id="reference">Reference</h1>

<h2 id="attempt">attempt</h2>

<p><code class="highlighter-rouge">attempt</code> is a wrapper around base <code class="highlighter-rouge">try</code> that allows you to insert a
custom messsage on error.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">attempt</span><span class="p">)</span><span class="w">
</span><span class="n">attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">))</span><span class="w">
</span><span class="c1"># Error: argument non num√©rique pour une fonction math√©matique</span><span class="w">

</span><span class="n">attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Nop !"</span><span class="p">)</span><span class="w">
</span><span class="c1"># Error: Nop !</span><span class="w">
</span></code></pre></div></div>

<p>You can make it verbose (i.e.¬†returning the expression):</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Nop !"</span><span class="p">,</span><span class="w"> </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="c1"># Error in log("a"): Nop !</span><span class="w">
</span></code></pre></div></div>

<p>Of course the result is returned if there is no error/warning:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Nop !"</span><span class="p">,</span><span class="w"> </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="c1"># [1] 0</span><span class="w">
</span></code></pre></div></div>

<p>As with <code class="highlighter-rouge">try</code>, the result cant be saved as an error object :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Nop !"</span><span class="p">,</span><span class="w"> </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">a</span><span class="w">
</span><span class="c1"># [1] "Error in log(\"a\"): Nop !\n"</span><span class="w">
</span><span class="c1"># attr(,"class")</span><span class="w">
</span><span class="c1"># [1] "try-error"</span><span class="w">
</span><span class="c1"># attr(,"condition")</span><span class="w">
</span><span class="c1"># &lt;simpleError in log("a"): Nop !&gt;</span><span class="w">
</span></code></pre></div></div>

<h2 id="silent_attempt">silent_attempt</h2>

<p><code class="highlighter-rouge">silent_attempt</code> is a wrapper around <code class="highlighter-rouge">silently</code> (see further down for
more info) and <code class="highlighter-rouge">attempt</code>. It attempts to run the expression, stays
silent if the expression succeeds, and returns error or warning if any.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">silent_attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">))</span><span class="w">
</span><span class="c1"># Error: argument non num√©rique pour une fonction math√©matique</span><span class="w">
</span><span class="n">silent_attempt</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="m">1</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h2 id="try-catch">try catch</h2>

<p>You can write a try catch with these params :</p>

<ul>
  <li><code class="highlighter-rouge">expr</code> the expression to be evaluated</li>
  <li><code class="highlighter-rouge">.e</code> a one side formula or a function evaluated when an error occurs</li>
  <li><code class="highlighter-rouge">.w</code> a one side formula or a function evaluated when a warning
occurs</li>
  <li><code class="highlighter-rouge">.f</code> a one side formula or an expression which is always evaluated
before returning or exiting</li>
</ul>

<h3 id="with-mappers">With mappers</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"There is an error: "</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.w</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"This is a warning: "</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w">
</span><span class="c1">#[1] "There is an error: Error in log(\"a\"): argument non num√©rique pour une fonction math√©matique\n"</span><span class="w">

</span><span class="n">try_catch</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">stop</span><span class="p">(</span><span class="n">.x</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.w</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">warning</span><span class="p">(</span><span class="n">.x</span><span class="p">))</span><span class="w">
</span><span class="c1"># Error in log("a") : argument non num√©rique pour une fonction math√©matique</span><span class="w">

</span><span class="n">try_catch</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">.x</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.w</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">.x</span><span class="p">))</span><span class="w">
</span><span class="c1">#&lt;simpleWarning in matrix(1:3, nrow = 2): la longueur des donn√©es [3] n'est pas un diviseur ni un multiple du nombre de lignes [2]&gt;</span><span class="w">

</span><span class="n">try_catch</span><span class="p">(</span><span class="m">2</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="p">,</span><span class="w"> 
          </span><span class="n">.f</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"Using R for addition... ok I'm out!"</span><span class="p">))</span><span class="w">
</span><span class="c1"># [1] "Using R for addition... ok I'm out!"</span><span class="w">
</span><span class="c1"># [1] 4</span><span class="w">
</span></code></pre></div></div>

<p>As usual, the handlers are set only if you call them :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"error"</span><span class="p">))</span><span class="w">
</span><span class="c1">#      [,1] [,2]</span><span class="w">
</span><span class="c1"># [1,]    1    3</span><span class="w">
</span><span class="c1"># [2,]    2    1</span><span class="w">
</span><span class="c1"># Warning message:</span><span class="w">
</span><span class="c1"># In matrix(1:3, nrow = 2) :</span><span class="w">
</span><span class="c1">#   la longueur des donn√©es [3] n'est pas un diviseur ni un multiple du nombre de lignes [2]</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w"> </span><span class="n">.w</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"warning"</span><span class="p">))</span><span class="w">
</span><span class="c1"># [1] "warning"</span><span class="w">
</span></code></pre></div></div>

<h3 id="traditionnal-way">Traditionnal way</h3>

<p>{attempt} is flexible in how you can specify your arguments.</p>

<p>You can, as you do with {base} <code class="highlighter-rouge">tryCatch</code>, use a plain old function:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">e</span><span class="p">){</span><span class="w">
            </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"There is an error: "</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">))</span><span class="w">
            </span><span class="n">print</span><span class="p">(</span><span class="s2">"Ok, let's save this"</span><span class="p">)</span><span class="w">
            </span><span class="n">time</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()</span><span class="w">
            </span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"+ At"</span><span class="p">,</span><span class="n">time</span><span class="p">,</span><span class="w"> </span><span class="s2">", \nError:"</span><span class="p">,</span><span class="n">e</span><span class="p">)</span><span class="w">
            </span><span class="c1"># write(a, "log.txt", append = TRUE) # commented to prevent log.txt creation </span><span class="w">
            </span><span class="n">print</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"log saved on log.txt at"</span><span class="p">,</span><span class="w"> </span><span class="n">time</span><span class="p">))</span><span class="w">
            </span><span class="n">print</span><span class="p">(</span><span class="s2">"let's move on now"</span><span class="p">)</span><span class="w">
          </span><span class="p">})</span><span class="w">

</span><span class="c1"># [1] "There is an error: Error in log(\"a\"): argument non num√©rique pour une fonction math√©matique\n"</span><span class="w">
</span><span class="c1"># [1] "Ok, let's save this"</span><span class="w">
</span><span class="c1"># [1] "log saved on log.txt at 2017-12-20 18:24:05"</span><span class="w">
</span><span class="c1"># [1] "let's move on now"</span><span class="w">
</span></code></pre></div></div>

<p>You can even mix both:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> 
          </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">e</span><span class="p">){</span><span class="w">
            </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"There is an error: "</span><span class="p">,</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w">
          </span><span class="p">},</span><span class="w">
          </span><span class="n">.f</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"I'm not sure you can do that pal !"</span><span class="p">))</span><span class="w">
</span><span class="c1"># [1] "I'm not sure you can do that pal !"</span><span class="w">
</span><span class="c1"># [1] "There is an error: Error in log(\"a\"): argument non num√©rique pour une fonction math√©matique\n"</span><span class="w">
</span></code></pre></div></div>

<h3 id="try_catch_df">try_catch_df</h3>

<p><code class="highlighter-rouge">try_catch_df</code> returns a tibble with the call, the error message if any,
the warning message if any, and the value of the evaluated expression or
‚Äúerror‚Äù. The values will always be contained in a list-column.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res_log</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">try_catch_df</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in try_catch_df(log("a")): impossible de trouver la fonction "try_catch_df"</span><span class="w">
</span><span class="n">res_log</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_log' introuvable</span><span class="w">
</span><span class="n">res_log</span><span class="o">$</span><span class="n">value</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_log' introuvable</span><span class="w">

</span><span class="n">res_matrix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">try_catch_df</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in try_catch_df(matrix(1:3, nrow = 2)): impossible de trouver la fonction "try_catch_df"</span><span class="w">
</span><span class="n">res_matrix</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_matrix' introuvable</span><span class="w">
</span><span class="n">res_matrix</span><span class="o">$</span><span class="n">value</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_matrix' introuvable</span><span class="w">

</span><span class="n">res_success</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">try_catch_df</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in try_catch_df(log(1)): impossible de trouver la fonction "try_catch_df"</span><span class="w">
</span><span class="n">res_success</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_success' introuvable</span><span class="w">
</span><span class="n">res_success</span><span class="o">$</span><span class="n">value</span><span class="w">
</span><span class="c1">#&gt; Error in eval(expr, envir, enclos): objet 'res_success' introuvable</span><span class="w">
</span></code></pre></div></div>

<h3 id="map-try_catch">map try_catch</h3>

<p><code class="highlighter-rouge">map_try_catch</code> and <code class="highlighter-rouge">map_try_catch_df</code> allow you to map on a list of
arguments <code class="highlighter-rouge">l</code>, to be evaluated by the function in <code class="highlighter-rouge">fun</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_try_catch</span><span class="p">(</span><span class="n">l</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">log</span><span class="p">,</span><span class="w"> </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in map_try_catch(l = list(1, 3, "a"), fun = log, .e = ~.x): impossible de trouver la fonction "map_try_catch"</span><span class="w">

</span><span class="n">map_try_catch_df</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">log</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in map_try_catch_df(list(1, 3, "a"), log): impossible de trouver la fonction "map_try_catch_df"</span><span class="w">
</span></code></pre></div></div>

<h2 id="silently">silently</h2>

<p><code class="highlighter-rouge">silently</code> transforms a function so that when you call this new
function, it returns nothing unless there is an error or a warning
(contrary to <code class="highlighter-rouge">attempt</code> that returns the result if any). In a sense, the
new function stays silent unless error or warning occurs.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">silent_log</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">silently</span><span class="p">(</span><span class="n">log</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in silently(log): impossible de trouver la fonction "silently"</span><span class="w">
</span><span class="n">silent_log</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in silent_log(1): impossible de trouver la fonction "silent_log"</span><span class="w">
</span><span class="n">silent_log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in silent_log("a"): impossible de trouver la fonction "silent_log"</span><span class="w">
</span><span class="c1"># Error: argument non num√©rique pour une fonction math√©matique</span><span class="w">
</span></code></pre></div></div>

<p>With <code class="highlighter-rouge">silently</code>, the result is never returned.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">silent_matrix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">silently</span><span class="p">(</span><span class="n">matrix</span><span class="p">)</span><span class="w">
</span><span class="n">silent_matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="c1"># simpleWarning: la longueur des donn√©es [3] n'est pas un diviseur ni un multiple du nombre de lignes [2]</span><span class="w">
</span></code></pre></div></div>

<h2 id="surely">surely</h2>

<p><code class="highlighter-rouge">surely</code> transforms a function so that when you call this new function,
it calls <code class="highlighter-rouge">attempt()</code> - i.e.¬†in the code below, calling <code class="highlighter-rouge">sure_log(1)</code> is
the same as calling <code class="highlighter-rouge">attempt(log(1))</code>. In a sense, you‚Äôre sure this new
function will always work.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sure_log</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">surely</span><span class="p">(</span><span class="n">log</span><span class="p">)</span><span class="w">
</span><span class="n">sure_log</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="c1"># [1] 0</span><span class="w">
</span><span class="n">sure_log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">)</span><span class="w">
</span><span class="c1"># Error: argument non num√©rique pour une fonction math√©matique</span><span class="w">
</span></code></pre></div></div>

<h2 id="if_-conditions"><code class="highlighter-rouge">if_</code> conditions</h2>

<p><code class="highlighter-rouge">if_none</code>, <code class="highlighter-rouge">if_any</code> and <code class="highlighter-rouge">if_all</code> test the elements of the list.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">if_all</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">11</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">return</span><span class="p">(</span><span class="nb">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]))</span><span class="w">
</span><span class="c1">#&gt; Error in if_all(1:10, ~.x &lt; 11, ~return(letters[1:10])): impossible de trouver la fonction "if_all"</span><span class="w">

</span><span class="n">if_any</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"Yay!"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in if_any(1:10, is.numeric, ~print("Yay!")): impossible de trouver la fonction "if_any"</span><span class="w">

</span><span class="n">if_none</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">is.character</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="m">10</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in if_none(1:10, is.character, ~rnorm(10)): impossible de trouver la fonction "if_none"</span><span class="w">
</span></code></pre></div></div>

<p>The defaut for all <code class="highlighter-rouge">.p</code> is <code class="highlighter-rouge">isTRUE</code>. So you can:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="n">if_any</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">.f</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="s2">"nop!"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in if_any(a, .f = ~print("nop!")): impossible de trouver la fonction "if_any"</span><span class="w">
</span></code></pre></div></div>

<p><code class="highlighter-rouge">if_then</code> performs a simple ‚Äúif this then do that‚Äù:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">if_then</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">return</span><span class="p">(</span><span class="s2">"nop!"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in if_then(1, is.numeric, ~return("nop!")): impossible de trouver la fonction "if_then"</span><span class="w">
</span></code></pre></div></div>

<p>And <code class="highlighter-rouge">if_else</code> is a wrapper around <code class="highlighter-rouge">base::ifelse()</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">if_else</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">return</span><span class="p">(</span><span class="s2">"Yay"</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">return</span><span class="p">(</span><span class="s2">"Nay"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; Error in if_else(1, is.numeric, ~return("Yay"), ~return("Nay")): impossible de trouver la fonction "if_else"</span><span class="w">
</span><span class="n">a</span><span class="w">
</span><span class="c1">#&gt; [1] FALSE  TRUE  TRUE  TRUE</span><span class="w">
</span></code></pre></div></div>

<h2 id="warnings-and-messages">warnings and messages</h2>

<p>The <code class="highlighter-rouge">stop_if</code>, <code class="highlighter-rouge">warn_if</code> and <code class="highlighter-rouge">message_if</code> are easy to use functions that
send an error, a warning or a message if a condition is met. Each
function has its counterpart with <code class="highlighter-rouge">_not</code>, which returns a message if the
condition is not met.</p>

<p><code class="highlighter-rouge">stop_if_not</code> is quite the same as <code class="highlighter-rouge">assert_that</code> from the {assertthat}
package, except that it can takes mappers. It is not the same as base
<code class="highlighter-rouge">stopifnot()</code>, as it doesn‚Äôt take a list of expression.</p>

<p>These functions are also flexible as you can pass base predicate
functions (is.numeric, is.character‚Ä¶), a custom mapper, or even your own
testing function.</p>

<p>You can either choose a custom message or just let the built-in message
be printed:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">12</span><span class="w">
</span><span class="c1"># Stop if .x is numeric</span><span class="w">
</span><span class="n">stop_if</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> 
        </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">)</span><span class="w">

</span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"20"</span><span class="w">
</span><span class="c1"># stop if .x is not numeric</span><span class="w">
</span><span class="n">stop_if_not</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> 
            </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> 
            </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"y should be numeric"</span><span class="p">)</span><span class="w">
</span><span class="n">a</span><span class="w">  </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"this is not numeric"</span><span class="w">
</span><span class="c1"># Warn if .x is charcter</span><span class="w">
</span><span class="n">warn_if</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="p">,</span><span class="w"> 
        </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">is.character</span><span class="p">)</span><span class="w">

</span><span class="n">b</span><span class="w">  </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">20</span><span class="w">
</span><span class="c1"># Warn if .x is not equal to 10</span><span class="w">
</span><span class="n">warn_if_not</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">b</span><span class="p">,</span><span class="w"> 
        </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">10</span><span class="w"> </span><span class="p">,</span><span class="w"> 
        </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"b should be 10"</span><span class="p">)</span><span class="w">

</span><span class="n">c</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"a"</span><span class="w">
</span><span class="c1"># Message if c is a character</span><span class="w">
</span><span class="n">message_if</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">c</span><span class="p">,</span><span class="w"> 
           </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">is.character</span><span class="p">,</span><span class="w"> 
           </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"You entered a character element"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Build more complex predicates</span><span class="w">
</span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">100</span><span class="w">
</span><span class="n">message_if</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">d</span><span class="p">,</span><span class="w"> 
           </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">sqrt</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">42</span><span class="p">,</span><span class="w"> 
           </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"The square root of your element must be more than 42"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Or, if you're kind of old school, you can still pass classic functions</span><span class="w">

</span><span class="n">e</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">30</span><span class="w">
</span><span class="n">message_if</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="w"> 
           </span><span class="n">.p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
             </span><span class="nf">return</span><span class="p">(</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">42</span><span class="p">)</span><span class="w">
           </span><span class="p">},</span><span class="w"> 
           </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"The square root of your element must be more than 42"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>If you have a function with no arguments, you can pass a dot <code class="highlighter-rouge">.</code> as
first argument
:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stop_if</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">curl</span><span class="o">::</span><span class="n">has_internet</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"You shouldn't have internet to do that"</span><span class="p">)</span><span class="w">

</span><span class="n">warn_if</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">curl</span><span class="o">::</span><span class="n">has_internet</span><span class="p">,</span><span class="w"> 
            </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"You shouldn't have internet to do that"</span><span class="p">)</span><span class="w">

</span><span class="n">message_if</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">curl</span><span class="o">::</span><span class="n">has_internet</span><span class="p">,</span><span class="w"> 
            </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Huray, you have internet \\o/"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>If you don‚Äôt specify a <code class="highlighter-rouge">.p</code>, the default test is <code class="highlighter-rouge">isTRUE</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">is.na</span><span class="p">(</span><span class="n">airquality</span><span class="o">$</span><span class="n">Ozone</span><span class="p">)</span><span class="w">
</span><span class="n">message_if_any</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"NA found"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="in-function">In function</h3>

<p>That can come really handy inside a function :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">my_fun</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">){</span><span class="w">
  </span><span class="n">stop_if_not</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> 
              </span><span class="n">curl</span><span class="o">::</span><span class="n">has_internet</span><span class="p">,</span><span class="w"> 
              </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"You should have internet to do that"</span><span class="p">)</span><span class="w">
  </span><span class="n">warn_if</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> 
          </span><span class="o">~</span><span class="w"> </span><span class="o">!</span><span class="w"> </span><span class="nf">is.character</span><span class="p">(</span><span class="n">.x</span><span class="p">),</span><span class="w"> 
          </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="s2">"x is not a character vector. The output may not be what you're expecting."</span><span class="p">)</span><span class="w">
  </span><span class="n">paste</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="s2">"is the value."</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">my_fun</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">iris</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h3 id="none-all-any">none, all, any</h3>

<p><code class="highlighter-rouge">stop_if</code>, <code class="highlighter-rouge">warn_if</code> and <code class="highlighter-rouge">message_if</code> all have complementary tests with
<code class="highlighter-rouge">_all</code>, <code class="highlighter-rouge">_any</code> and <code class="highlighter-rouge">_none</code>, which combine the <code class="highlighter-rouge">if_*</code> and the <code class="highlighter-rouge">warn_*</code>,
<code class="highlighter-rouge">stop_*</code> and <code class="highlighter-rouge">message_*</code> seen before. They take a list as first
argument, and a predicate. They test if any, all or none of the elements
validate the
predicate.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stop_if_any</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">is.factor</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Factors here. This might be due to stringsAsFactors."</span><span class="p">)</span><span class="w">

</span><span class="n">warn_if_none</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"You need to have at least one number under zero."</span><span class="p">)</span><span class="w">

</span><span class="n">message_if_all</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"That makes a lot of numbers."</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h1 id="misc">Misc</h1>

<h2 id="contact">Contact</h2>

<p>Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a>!</p>

<p>You want to contribute ? Open a
<a href="https://github.com/ColinFay/attempt/pulls">PR</a> :) If you encounter a
bug or want to suggest an enhancement, please <a href="https://github.com/ColinFay/attempt/issues">open an
issue</a>.</p>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 6 : doing statistics</title>
  <description></description>
  <link>/purrr-statistics/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-statistics/</guid>
  <pubDate>2017-12-28 00:00:00 +0100</pubDate>
  <content><p>This is gonna be the last time I make this Queen reference in 2017.</p>

<!--more-->

<p>I‚Äôve been sharing some ‚Äústats with {purrr}‚Äù recipes on my <a href="https://twitter.com/_ColinFay">Twitter
account</a> lately. Twitter being what it is
(a source of infinite temporary content), here‚Äôs the post gathering some
statistics tricks you can do with {purrr}.</p>

<h2 id="looking-for-normality">Looking for normality</h2>

<p>If your data are in a data.frame, you can simply map a shapiro.test on
all the columns, keeping the one with a <code class="highlighter-rouge">p.value</code> &gt; to 0.05 (remember,
the shapiro tests for non-normality) :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">
</span><span class="n">map</span><span class="p">(</span><span class="n">airquality</span><span class="p">,</span><span class="w"> </span><span class="n">shapiro.test</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">p.value</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $Wind
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.98575, p-value = 0.1178
</code></pre></div></div>

<p>Of course, you can do the same on a non-tabular list:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># rdunif is from purrr</span><span class="w">
</span><span class="n">l</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rdunif</span><span class="p">(</span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">))</span><span class="w">
</span><span class="n">map</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="w"> </span><span class="n">shapiro.test</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">p.value</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $a
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.91275, p-value = 0.3004
</code></pre></div></div>

<p>Also, <code class="highlighter-rouge">map_if</code> allows you to map only on numeric variables in your
data.frame:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_if</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="n">shapiro.test</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $Sepal.Length
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.97609, p-value = 0.01018
## 
## 
## $Sepal.Width
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.98492, p-value = 0.1012
## 
## 
## $Petal.Length
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.87627, p-value = 7.412e-10
## 
## 
## $Petal.Width
## 
##  Shapiro-Wilk normality test
## 
## data:  .x[[i]]
## W = 0.90183, p-value = 1.68e-08
## 
## 
## $Species
##   [1] setosa     setosa     setosa     setosa     setosa     setosa    
##   [7] setosa     setosa     setosa     setosa     setosa     setosa    
##  [13] setosa     setosa     setosa     setosa     setosa     setosa    
##  [19] setosa     setosa     setosa     setosa     setosa     setosa    
##  [25] setosa     setosa     setosa     setosa     setosa     setosa    
##  [31] setosa     setosa     setosa     setosa     setosa     setosa    
##  [37] setosa     setosa     setosa     setosa     setosa     setosa    
##  [43] setosa     setosa     setosa     setosa     setosa     setosa    
##  [49] setosa     setosa     versicolor versicolor versicolor versicolor
##  [55] versicolor versicolor versicolor versicolor versicolor versicolor
##  [61] versicolor versicolor versicolor versicolor versicolor versicolor
##  [67] versicolor versicolor versicolor versicolor versicolor versicolor
##  [73] versicolor versicolor versicolor versicolor versicolor versicolor
##  [79] versicolor versicolor versicolor versicolor versicolor versicolor
##  [85] versicolor versicolor versicolor versicolor versicolor versicolor
##  [91] versicolor versicolor versicolor versicolor versicolor versicolor
##  [97] versicolor versicolor versicolor versicolor virginica  virginica 
## [103] virginica  virginica  virginica  virginica  virginica  virginica 
## [109] virginica  virginica  virginica  virginica  virginica  virginica 
## [115] virginica  virginica  virginica  virginica  virginica  virginica 
## [121] virginica  virginica  virginica  virginica  virginica  virginica 
## [127] virginica  virginica  virginica  virginica  virginica  virginica 
## [133] virginica  virginica  virginica  virginica  virginica  virginica 
## [139] virginica  virginica  virginica  virginica  virginica  virginica 
## [145] virginica  virginica  virginica  virginica  virginica  virginica 
## Levels: setosa versicolor virginica
</code></pre></div></div>

<h2 id="bulk-cortest">Bulk cor.test</h2>

<p>As said on Twitter, this might be
<a href="https://twitter.com/HBossier/status/943480783288889344">p.hacking</a>, but
here‚Äôs how you can do a <code class="highlighter-rouge">cor.test</code> for all columns in a data.frame, with
a little help from <code class="highlighter-rouge">tidystringdist</code> and <code class="highlighter-rouge">broom</code> :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidystringdist</span><span class="p">)</span><span class="w"> </span><span class="c1"># Works since v0.1.2 </span><span class="w">
</span><span class="n">comb</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tidy_comb_all</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">airquality</span><span class="p">))</span><span class="w">
</span><span class="n">knitr</span><span class="o">::</span><span class="n">kable</span><span class="p">(</span><span class="n">comb</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: left">V1</th>
      <th style="text-align: left">V2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Solar.R</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Wind</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Temp</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Month</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Day</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Wind</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Temp</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Month</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Day</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Temp</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Month</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Day</td>
    </tr>
    <tr>
      <td style="text-align: left">Temp</td>
      <td style="text-align: left">Month</td>
    </tr>
    <tr>
      <td style="text-align: left">Temp</td>
      <td style="text-align: left">Day</td>
    </tr>
    <tr>
      <td style="text-align: left">Month</td>
      <td style="text-align: left">Day</td>
    </tr>
  </tbody>
</table>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bulk_cor</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pmap</span><span class="p">(</span><span class="n">comb</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">cor.test</span><span class="p">(</span><span class="n">airquality</span><span class="p">[[</span><span class="n">.x</span><span class="p">]],</span><span class="w"> </span><span class="n">airquality</span><span class="p">[[</span><span class="n">.y</span><span class="p">]]))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">map_df</span><span class="p">(</span><span class="n">broom</span><span class="o">::</span><span class="n">tidy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">cbind</span><span class="p">(</span><span class="n">comb</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w">

</span><span class="n">knitr</span><span class="o">::</span><span class="n">kable</span><span class="p">(</span><span class="n">bulk_cor</span><span class="p">,</span><span class="w"> </span><span class="n">digits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: left">V1</th>
      <th style="text-align: left">V2</th>
      <th style="text-align: right">estimate</th>
      <th style="text-align: right">statistic</th>
      <th style="text-align: right">p.value</th>
      <th style="text-align: right">parameter</th>
      <th style="text-align: right">conf.low</th>
      <th style="text-align: right">conf.high</th>
      <th style="text-align: left">method</th>
      <th style="text-align: left">alternative</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: right">0.348</td>
      <td style="text-align: right">3.880</td>
      <td style="text-align: right">0.000</td>
      <td style="text-align: right">109</td>
      <td style="text-align: right">0.173</td>
      <td style="text-align: right">0.502</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Wind</td>
      <td style="text-align: right">-0.602</td>
      <td style="text-align: right">-8.040</td>
      <td style="text-align: right">0.000</td>
      <td style="text-align: right">114</td>
      <td style="text-align: right">-0.706</td>
      <td style="text-align: right">-0.471</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Temp</td>
      <td style="text-align: right">0.698</td>
      <td style="text-align: right">10.418</td>
      <td style="text-align: right">0.000</td>
      <td style="text-align: right">114</td>
      <td style="text-align: right">0.591</td>
      <td style="text-align: right">0.781</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Month</td>
      <td style="text-align: right">0.165</td>
      <td style="text-align: right">1.781</td>
      <td style="text-align: right">0.078</td>
      <td style="text-align: right">114</td>
      <td style="text-align: right">-0.018</td>
      <td style="text-align: right">0.337</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Ozone</td>
      <td style="text-align: left">Day</td>
      <td style="text-align: right">-0.013</td>
      <td style="text-align: right">-0.141</td>
      <td style="text-align: right">0.888</td>
      <td style="text-align: right">114</td>
      <td style="text-align: right">-0.195</td>
      <td style="text-align: right">0.169</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Wind</td>
      <td style="text-align: right">-0.057</td>
      <td style="text-align: right">-0.683</td>
      <td style="text-align: right">0.496</td>
      <td style="text-align: right">144</td>
      <td style="text-align: right">-0.217</td>
      <td style="text-align: right">0.107</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Temp</td>
      <td style="text-align: right">0.276</td>
      <td style="text-align: right">3.444</td>
      <td style="text-align: right">0.001</td>
      <td style="text-align: right">144</td>
      <td style="text-align: right">0.119</td>
      <td style="text-align: right">0.419</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Month</td>
      <td style="text-align: right">-0.075</td>
      <td style="text-align: right">-0.906</td>
      <td style="text-align: right">0.366</td>
      <td style="text-align: right">144</td>
      <td style="text-align: right">-0.235</td>
      <td style="text-align: right">0.088</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Solar.R</td>
      <td style="text-align: left">Day</td>
      <td style="text-align: right">-0.150</td>
      <td style="text-align: right">-1.824</td>
      <td style="text-align: right">0.070</td>
      <td style="text-align: right">144</td>
      <td style="text-align: right">-0.305</td>
      <td style="text-align: right">0.012</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Temp</td>
      <td style="text-align: right">-0.458</td>
      <td style="text-align: right">-6.331</td>
      <td style="text-align: right">0.000</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">-0.575</td>
      <td style="text-align: right">-0.323</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Month</td>
      <td style="text-align: right">-0.178</td>
      <td style="text-align: right">-2.227</td>
      <td style="text-align: right">0.027</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">-0.328</td>
      <td style="text-align: right">-0.020</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Wind</td>
      <td style="text-align: left">Day</td>
      <td style="text-align: right">0.027</td>
      <td style="text-align: right">0.334</td>
      <td style="text-align: right">0.739</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">-0.132</td>
      <td style="text-align: right">0.185</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Temp</td>
      <td style="text-align: left">Month</td>
      <td style="text-align: right">0.421</td>
      <td style="text-align: right">5.703</td>
      <td style="text-align: right">0.000</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">0.281</td>
      <td style="text-align: right">0.543</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Temp</td>
      <td style="text-align: left">Day</td>
      <td style="text-align: right">-0.131</td>
      <td style="text-align: right">-1.619</td>
      <td style="text-align: right">0.108</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">-0.283</td>
      <td style="text-align: right">0.029</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
    <tr>
      <td style="text-align: left">Month</td>
      <td style="text-align: left">Day</td>
      <td style="text-align: right">-0.008</td>
      <td style="text-align: right">-0.098</td>
      <td style="text-align: right">0.922</td>
      <td style="text-align: right">151</td>
      <td style="text-align: right">-0.166</td>
      <td style="text-align: right">0.151</td>
      <td style="text-align: left">Pearson‚Äôs product-moment correlation</td>
      <td style="text-align: left">two.sided</td>
    </tr>
  </tbody>
</table>

<h2 id="some-machine-learning">Some Machine Learning</h2>

<h3 id="lm">lm</h3>

<p>Let‚Äôs build a linear model of all possible iris combinations:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pmap</span><span class="p">(</span><span class="n">comb</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">airquality</span><span class="p">[[</span><span class="n">.x</span><span class="p">]]</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">airquality</span><span class="p">[[</span><span class="n">.y</span><span class="p">]]))</span><span class="w">
</span><span class="n">get_rsquared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">compose</span><span class="p">(</span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">r.squared</span><span class="p">),</span><span class="w"> </span><span class="n">summary</span><span class="p">)</span><span class="w">
</span><span class="n">map_dbl</span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">get_rsquared</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] 1.213419e-01 3.618582e-01 4.877072e-01 2.706660e-02 1.749177e-04
##  [6] 3.225293e-03 7.608786e-02 5.670205e-03 2.258257e-02 2.097529e-01
## [11] 3.178824e-02 7.388015e-04 1.771966e-01 1.705458e-02 6.338966e-05
</code></pre></div></div>

<p>Any chance there‚Äôs a r.squared above 0.5 ?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="p">(</span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="n">get_rsquared</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">some</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.5</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] FALSE
</code></pre></div></div>

<h3 id="rpart">rpart</h3>

<p>We‚Äôll build 20 <code class="highlighter-rouge">rpart</code> to find the better model. Yes, this will be
better to do it with a random forest, but we‚Äôre here for the example :)</p>

<h4 id="training-and-validation">Training and validation</h4>

<p>Let‚Äôs do the train / validation.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">readr</span><span class="p">)</span><span class="w">
</span><span class="n">titanic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"http://biostat.mc.vanderbilt.edu/wiki/pub/Main/DataSets/titanic3.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">train</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rerun</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="w"> </span><span class="n">sample_frac</span><span class="p">(</span><span class="n">titanic</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.8</span><span class="p">))</span><span class="w">
</span><span class="n">validation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="p">(</span><span class="n">train</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">anti_join</span><span class="p">(</span><span class="n">titanic</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Check if the sizes of all validation datasets are the same:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_int</span><span class="p">(</span><span class="n">validation</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">every</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">262</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] TRUE
</code></pre></div></div>

<h3 id="create-a-model-builder">Create a model builder</h3>

<p>We‚Äôll create a simple model to predict survival based on sex.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">rpart</span><span class="p">)</span><span class="w">
</span><span class="n">rpart_pimped</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">partial</span><span class="p">(</span><span class="n">rpart</span><span class="p">,</span><span class="w"> </span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">survived</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">sex</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"class"</span><span class="p">)</span><span class="w">
</span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="p">(</span><span class="n">train</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">rpart_pimped</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h3 id="make-prediction">Make prediction</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prediction</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map2</span><span class="p">(</span><span class="n">validation</span><span class="p">,</span><span class="w"> </span><span class="n">res</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">predict</span><span class="p">(</span><span class="n">.y</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"class"</span><span class="p">))</span><span class="w">
</span><span class="n">w_prediction</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map2</span><span class="p">(</span><span class="n">validation</span><span class="p">,</span><span class="w"> </span><span class="n">prediction</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">prediction</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.y</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h3 id="confusion-matrix">Confusion matrix</h3>

<p>Now let‚Äôs map a conf matrix on all these results:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">caret</span><span class="p">)</span><span class="w">
</span><span class="n">conf_mats</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="p">(</span><span class="n">w_prediction</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">confusionMatrix</span><span class="p">(</span><span class="n">.x</span><span class="o">$</span><span class="n">prediction</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">survived</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Is the ‚ÄúSensivity‚Äù for all models above 0.8?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Sensitivity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">every</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.8</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] TRUE
</code></pre></div></div>

<p>Is the ‚ÄúSpecificity‚Äù for all models above 0.8?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Specificity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">every</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.8</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] FALSE
</code></pre></div></div>

<h3 id="keep_index">keep_index</h3>

<p>Let‚Äôs modify <code class="highlighter-rouge">keep</code> a little bit so we can extract the models we need:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Here's the keep source code</span><span class="w">
</span><span class="n">keep</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function(.x, .p, ...) {
##   sel &lt;- probe(.x, .p, ...)
##   .x[!is.na(sel) &amp; sel]
## }
## &lt;environment: namespace:purrr&gt;
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Let's tweak it a little bit</span><span class="w">
</span><span class="n">keep_index</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">sel</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">purrr</span><span class="o">:::</span><span class="n">probe</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w">
  </span><span class="n">which</span><span class="p">(</span><span class="n">sel</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>So, which are the models with a sensitivity superior to
0.85?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Sensitivity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep_index</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1]  1  3  4  6 11 13 14 15 16 18 19
</code></pre></div></div>

<p>And the models with a specificity superior to
0.7?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Specificity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep_index</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.7</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1]  2  7 13 14 17
</code></pre></div></div>

<p>Which models are in
both?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sens</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Sensitivity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep_index</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.85</span><span class="p">)</span><span class="w">
</span><span class="n">spec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_dbl</span><span class="p">(</span><span class="n">conf_mats</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="o">$</span><span class="n">byClass</span><span class="p">[</span><span class="s2">"Specificity"</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">keep_index</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.7</span><span class="p">)</span><span class="w">
</span><span class="n">keep</span><span class="p">(</span><span class="n">sens</span><span class="p">,</span><span class="w"> </span><span class="n">map_lgl</span><span class="p">(</span><span class="n">sens</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">spec</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 13 14
</code></pre></div></div>

<p>So, I guess we‚Äôll go for model(s) number 13, 14!</p>

<p><img src="https://media.giphy.com/media/ohdY5OaQmUmVW/giphy.gif" alt="" /></p>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 5: code optimization</title>
  <description></description>
  <link>/purrr-code-optim/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-code-optim/</guid>
  <pubDate>2017-12-20 00:00:00 +0100</pubDate>
  <content><p>This might not be the last time I make this Queen reference.</p>

<!--more-->

<p>There‚Äôs a general saying in programming that you should try to write as
less code as possible. Spoiler: this is not because developers are lazy.
On the contrary, concise code takes a lot of time to write. But it can
save a massive amount of time on the long run, as it creates fewer bugs,
and make the code easier to maintain.</p>

<p>As you know, I love {purrr}. Most tutorials on the web focus on the
iteration part (don‚Äôt make me say what I didn‚Äôt say: the iteration tools
are incredibly poweful), yet forgetting the ‚Äúprogramming‚Äù part of
{purrr} would make you miss a lot of cool features from this package. I
hope my series of posts has convince you to dive into this ‚Äúprogramming
with {purrr}‚Äù world :)</p>

<p>So, today, we‚Äôre gonna have a look at what you can do with {purrr} to
write more efficient R.</p>

<h2 id="repeat-after-me-dont-repeat-yourself">Repeat after me: don‚Äôt repeat yourself</h2>

<p>It has been said countless time: if you copy and paste a piece of code
more than two times, you need a function. Well, I know, it‚Äôs not always
that easy to find the perfect function and RStudio makes it so easy to
just copy down the line you‚Äôve just typed. But everytime you wish to do
that, remember that this is just ‚Äúadding more fuel to the bug fire‚Äù.</p>

<p>(Ok, that might not be important if you‚Äôre just randomly trying stuffs,
but let‚Äôs stay focused and imagine we‚Äôre responsable adults building
packages, or doing reproducible research‚Ä¶)</p>

<h2 id="functions-returning-functions">Functions returning functions</h2>

<p>R is an amazingly flexible language. Everything that exists in R is an
object, and everything that happens is due to a function. So yes,
functions are objects that can turn objects into other objects.</p>

<p>And if a function can take objects and return an object, there‚Äôs no
reason these objects can‚Äôt be functions. That‚Äôs exactly what <code class="highlighter-rouge">safely</code>
(seen in the first part of this series) and friends do. But today I‚Äôm
here to talk about some other functions, <code class="highlighter-rouge">compose</code> and <code class="highlighter-rouge">partial</code>.</p>

<h3 id="compose">Compose</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">broom</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Have you ever been in a situation when you wrote this kind of
code?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lm</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">tidy</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span><span class="n">lm</span><span class="p">(</span><span class="n">Pepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">tidy</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span><span class="n">lm</span><span class="p">(</span><span class="n">Sepal.Width</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">tidy</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span><span class="n">lm</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">tidy</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">ilter</span><span class="p">(</span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Yes, we‚Äôve all done that. The thing is, with this kind of code, our eyes
are focused on what stays the same, instead of focusing of what‚Äôs
changing. And, most of all, there‚Äôs a high probability you didn‚Äôt
noticed I made a typo on line 2 (example inspired by
<a href="http://r4ds.had.co.nz/iteration.html">http://r4ds.had.co.nz/iteration.html</a>).</p>

<p>And there‚Äôs also one on line 4.</p>

<p>So here comes <code class="highlighter-rouge">compose()</code>. This function takes as arguments a series of
functions, and returns a function that will perform the series of
function successively. So here, we can turn :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tidy</span><span class="p">(</span><span class="n">lm</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>into</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tidy_lm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">compose</span><span class="p">(</span><span class="n">tidy</span><span class="p">,</span><span class="w"> </span><span class="n">lm</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_lm</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##                term estimate  std.error statistic       p.value
## 1       (Intercept)    5.006 0.07280222 68.761639 1.134286e-113
## 2 Speciesversicolor    0.930 0.10295789  9.032819  8.770194e-16
## 3  Speciesvirginica    1.582 0.10295789 15.365506  2.214821e-32
</code></pre></div></div>

<p>So yes, this is a small improvement you could say. But the thing is, on
this kind of code :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tidy_fancy_calculus</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">compose</span><span class="p">(</span><span class="n">tidy</span><span class="p">,</span><span class="w"> </span><span class="n">lm</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_fancy_calculus</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_fancy_calculus</span><span class="p">(</span><span class="n">Petal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_fancy_calculus</span><span class="p">(</span><span class="n">Sepal.Width</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_fancy_calculus</span><span class="p">(</span><span class="n">Petal.Width</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>I‚Äôll just have to make a change at one spot if I need to use another
<code class="highlighter-rouge">lm</code>-like function.</p>

<p>*Note that the order of the function is not the a magrittr order, but a
‚Äúclassic‚Äù order, i.e.¬†functions passed to <code class="highlighter-rouge">compose</code> are executed from
right to left. *</p>

<p>And of course, you can always pass mappers in a <code class="highlighter-rouge">compose</code> :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">clean_lm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">compose</span><span class="p">(</span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">arrange</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">desc</span><span class="p">(</span><span class="n">p.value</span><span class="p">))),</span><span class="w"> 
                    </span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)),</span><span class="w">
                    </span><span class="n">tidy</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">lm</span><span class="p">)</span><span class="w">
</span><span class="n">clean_lm</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Sepal.Width</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##          term estimate std.error statistic      p.value
## 1 (Intercept) 6.526223 0.4788963  13.62763 6.469702e-28
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># and etc</span><span class="w">
</span><span class="c1">#clean_lm(Sepal.Length ~ Sepal.Width, data = iris)</span><span class="w">
</span><span class="c1">#clean_lm(Sepal.Length ~ Sepal.Width, data = iris)</span><span class="w">
</span><span class="c1">#clean_lm(Sepal.Length ~ Sepal.Width, data = iris)</span><span class="w">
</span></code></pre></div></div>

<p>For now formulas are not accepted as such (you need to call
<code class="highlighter-rouge">as_mapper</code>), but you now, this is just a PR away ;)</p>

<h3 id="less-code-more-rokk">Less code, more rokk</h3>

<p><a href="https://www.youtube.com/watch?v=q2eBtnxA8SA">(Guitar Hero 2 reference)</a></p>

<p>So now, we need even less code. Yes, that‚Äôs possible, thanks to
<code class="highlighter-rouge">partial</code>. As its name states, this function returns a partially filled
function. That is to say that :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mean_na_rm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">partial</span><span class="p">(</span><span class="n">mean</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">mean_na_rm</span><span class="p">(</span><span class="n">airquality</span><span class="o">$</span><span class="n">Ozone</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 42.12931
</code></pre></div></div>

<p>is the same as:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mean</span><span class="p">(</span><span class="n">airquality</span><span class="o">$</span><span class="n">Ozone</span><span class="p">,</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 42.12931
</code></pre></div></div>

<p>Ok, that‚Äôs not that usefull on that example, but you get the idea :)</p>

<h3 id="lets-wrap-up">Let‚Äôs wrap up</h3>

<p>To sum up, we need a function that will do a lm on iris, broom::tidy the
result, filter the p.value, and arrange following the p.value column.
So, here it is!</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">clean_lm_iris</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">compose</span><span class="p">(</span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">arrange</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">desc</span><span class="p">(</span><span class="n">p.value</span><span class="p">))),</span><span class="w"> 
                    </span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">p.value</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)),</span><span class="w">
                    </span><span class="n">tidy</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">partial</span><span class="p">(</span><span class="n">lm</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">))</span><span class="w">

</span><span class="n">clean_lm_iris</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">Sepal.Width</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##          term estimate std.error statistic      p.value
## 1 (Intercept) 6.526223 0.4788963  13.62763 6.469702e-28
</code></pre></div></div>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 4: mappers</title>
  <description></description>
  <link>/purrr-mappers/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-mappers/</guid>
  <pubDate>2017-12-12 00:00:00 +0100</pubDate>
  <content><p>I won‚Äôt talk about the Queen reference anymore.</p>

<!--more-->

<p>I‚Äôve been working lately on a new package called {trycatchthis}, which
is an attempt at making try catch and condition handling in R a little
bit friendlier. If you have some time to spare, I‚Äôll be glad if you can
give me some feedbacks about it: positive, negative, PR, improvement
suggestions <a href="https://github.com/ColinFay/trycatchthis">https://github.com/ColinFay/trycatchthis</a>‚Ä¶ Feel free!</p>

<p>This package relies a lot on {purrr} mappers (and on {rlang} but I won‚Äôt
be talking about {rlang} today‚Ä¶ maybe in another series of posts). Today
I‚Äôm gonna talk briefly about this cool stuff in {purrr} called mappers.
(Well, these mappers are forwarded to {rlang} so this is a cool stuff
from {rlang}, yet the mappers constructor <code class="highlighter-rouge">as_mapper</code> is a {purrr}
function).</p>

<h2 id="what-on-earth-are-mappers">What on earth are mappers</h2>

<p>You‚Äôve been using mappers a lot if, like me, you‚Äôve been using {purrr} a
lot. These are the one sided formulas which are created as such :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">
</span><span class="n">map_dbl</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 10 20 30
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># or </span><span class="w">
</span><span class="n">map_dbl</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 10 20 30
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># or </span><span class="w">
</span><span class="n">map2_dbl</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="o">:</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">.y</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 4 6 8
</code></pre></div></div>

<p>Here, you‚Äôre creating a lambda function on the fly: the first and second
multiplying each element by 10, and the third adding each <code class="highlighter-rouge">x</code> and <code class="highlighter-rouge">y</code>
together.</p>

<h2 id="whats-happening-behind">What‚Äôs happening behind?</h2>

<p>The first thing that <code class="highlighter-rouge">map</code> (and other map_*) do is turning a the <code class="highlighter-rouge">~ .x
\* 10</code> into a mapper with <code class="highlighter-rouge">as_mapper</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function(.x, .f, ...) {
##   .f &lt;- as_mapper(.f, ...)
##   .Call(map_impl, environment(), ".x", ".f", "list")
## }
## &lt;environment: namespace:purrr&gt;
</code></pre></div></div>

<p>In the background, mappers are created with {rlang} <code class="highlighter-rouge">as_function</code>: so,
as you could have guessed, this turns formulas into functions.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">addition</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as_mapper</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">.y</span><span class="p">)</span><span class="w">
</span><span class="n">addition</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function (..., .x = ..1, .y = ..2, . = ..1) 
## .x + .y
</code></pre></div></div>

<p>As you can see, the function is created with the .x matching the first
argument, the .y matching the second, and the . alone matching the
first. It‚Äôs that simple, you now have a good old R function:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">addition</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 4
</code></pre></div></div>

<h2 id="how-is-that-useful">How is that useful?</h2>

<h3 id="dont-repeat-yourself">Don‚Äôt repeat yourself</h3>

<p>This first comes handy when you have a lot of mapping to do:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map2_int</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="o">:</span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">addition</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 5 7 9
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map2_int</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">21</span><span class="o">:</span><span class="m">30</span><span class="p">,</span><span class="w"> </span><span class="n">addition</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] 22 24 26 28 30 32 34 36 38 40
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map2_int</span><span class="p">(</span><span class="m">2</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="o">:</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">addition</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 6 8
</code></pre></div></div>

<h3 id="flexible-mappers">Flexible mappers</h3>

<p>Mappers are what allow {purrr} flexibility with mapping, as it alows you
to use a defaut R functions inside map:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as_mapper</span><span class="p">(</span><span class="n">is.numeric</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function (x) 
## is.numeric(x = x)
## &lt;environment: base&gt;
</code></pre></div></div>

<p>or characters and numbers that creates calls to <code class="highlighter-rouge">pluck</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as_mapper</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function (x, ...) 
## pluck(x, list(1), .default = NULL)
## &lt;environment: 0x7fb2cb62a950&gt;
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as_mapper</span><span class="p">(</span><span class="s2">"this"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function (x, ...) 
## pluck(x, list("this"), .default = NULL)
## &lt;environment: 0x7fb2cd9fb158&gt;
</code></pre></div></div>

<p>or even another lambda function :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as_mapper</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">}</span><span class="w"> </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## function(x, y) {x+y}
</code></pre></div></div>

<h3 id="mappers-with-more-than-two-arguments">mappers with more than two arguments</h3>

<p>So, here‚Äôs the trick if you want to create mappers with more than two
arguments: use <code class="highlighter-rouge">..1</code>, <code class="highlighter-rouge">..2</code>, <code class="highlighter-rouge">..3</code>, etc. Here‚Äôs an example with <code class="highlighter-rouge">pmap</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">l</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="m">10</span><span class="p">),</span><span class="w">
          </span><span class="n">rnorm</span><span class="p">(</span><span class="m">100</span><span class="p">),</span><span class="w"> 
          </span><span class="n">rnorm</span><span class="p">(</span><span class="m">1000</span><span class="p">))</span><span class="w">
</span><span class="n">pmap_dbl</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="w"> </span><span class="m">20</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">.</span><span class="m">.1</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="m">.2</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="m">.3</span><span class="p">))</span><span class="w"> 
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] -0.431030092  0.007889214 -0.051816152
</code></pre></div></div>

<h2 id="using-mapper-inside-trycatchthis">Using mapper inside {trycatchthis}</h2>

<h3 id="try_catch">try_catch</h3>

<p>These are also what allows {trycatchthis} to be flexible when building
trycatch calls and condition handlers.</p>

<p>As you may know, <code class="highlighter-rouge">tryCatch</code> takes four arguments :</p>

<ul>
  <li>The expression to evaluate (mandatory)</li>
  <li>A <strong>function</strong> to be run on error</li>
  <li>A <strong>function</strong> to be run on warning</li>
  <li>A <strong>function</strong> to be run on exit</li>
</ul>

<p>So if you‚Äôve followed along, you now know that I can use mappers here as
arguments of a <code class="highlighter-rouge">tryCatch</code> call. This is exactly what <code class="highlighter-rouge">try_catch</code>, from
{trycatchthis}, does.</p>

<p>Here‚Äôs a shorten example (and slightly different from the one in
{trycatchthis} as <code class="highlighter-rouge">try_that</code> is built with {rlang} <code class="highlighter-rouge">lang</code>) :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">try_catch</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">expr</span><span class="p">,</span><span class="w"> </span><span class="n">.e</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">tryCatch</span><span class="p">(</span><span class="w"> </span><span class="n">expr</span><span class="p">,</span><span class="w">
    </span><span class="n">error</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as_mapper</span><span class="p">(</span><span class="n">.e</span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">try_catch</span><span class="p">(</span><span class="nf">log</span><span class="p">(</span><span class="s2">"a"</span><span class="p">),</span><span class="w"> </span><span class="n">.e</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"There was an error:"</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "There was an error: Error in log(\"a\"): argument non num√©rique pour une fonction math√©matique\n"
</code></pre></div></div>

<h3 id="stop_if">stop_if</h3>

<p>As package developers, we need to keep in mind that everything is
possible when it comes to functions being used in the wild (characters
in place of number is just an example).</p>

<p>So the first lines of a function are usually used to verify the inputs.
Like :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pimped_sum</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">){</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="w"> </span><span class="nf">is.numeric</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="o">!</span><span class="w"> </span><span class="nf">is.numeric</span><span class="p">(</span><span class="n">y</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">stop</span><span class="p">(</span><span class="s2">"x and y must be numeric"</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">y</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">pimped_sum</span><span class="p">(</span><span class="s2">"1"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in pimped_sum("1", 2): x and y must be numeric
</code></pre></div></div>

<p>But that‚Äôs a lot of duplicated code, a lot of if if there are lot of
checks to do, and not that much functions stating clearly what they do.</p>

<p>So here comes
    {trycatchthis}:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">trycatchthis</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in library(trycatchthis): there is no package called 'trycatchthis'
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pimped_sum</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">){</span><span class="w">
  </span><span class="n">stop_if_any</span><span class="p">(</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">),</span><span class="w"> 
               </span><span class="o">~</span><span class="w"> </span><span class="o">!</span><span class="w"> </span><span class="nf">is.numeric</span><span class="p">(</span><span class="n">.x</span><span class="p">),</span><span class="w"> 
               </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"your args should be numeric"</span><span class="p">)</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">y</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">pimped_sum</span><span class="p">(</span><span class="s2">"1"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in stop_if_any(c(x, y), ~!is.numeric(.x), msg = "your args should be numeric"): impossible de trouver la fonction "stop_if_any"
</code></pre></div></div>

<p>You can have a look at what {trycatchthis} does on the <a href="https://github.com/ColinFay/trycatchthis">GitHub
repo</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Simpler example</span><span class="w">
</span><span class="n">small_by_ten</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">){</span><span class="w">
  </span><span class="n">stop_if</span><span class="p">(</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> 
           </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> 
           </span><span class="n">msg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"x should be less than ten"</span><span class="w"> </span><span class="p">)</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">10</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">small_by_ten</span><span class="p">(</span><span class="m">11</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in stop_if(x, ~.x &gt; 10, msg = "x should be less than ten"): impossible de trouver la fonction "stop_if"
</code></pre></div></div>

<p>So here, you can see that we are using a formula inside <code class="highlighter-rouge">stop_if</code>. How
does if work ? The second argument is turned into a mapper, and then
used to test x. Here‚Äôs a simplified version of this function:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stop_if</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">){</span><span class="w">
  </span><span class="n">.p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as_mapper</span><span class="p">(</span><span class="n">.p</span><span class="p">)</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">.p</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w">
      </span><span class="n">stop</span><span class="p">(</span><span class="s2">"Error!"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">stop_if</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">11</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in stop_if(10, ~.x &lt; 11): Error!
</code></pre></div></div>

<p>The flexibily of the mapper system allows you to pass base and classical
function, because as we‚Äôve seen, they are all turned to the same
function template :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stop_if</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">is.numeric</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in stop_if(10, is.numeric): Error!
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stop_if</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="nf">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">100</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in stop_if(10, function(x) sqrt(x) &lt; 100): Error!
</code></pre></div></div>

<p>Aaaaaand that‚Äôs it for today :)</p>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 3 : Setting NA</title>
  <description></description>
  <link>/purrr-set-na/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-set-na/</guid>
  <pubDate>2017-12-06 00:00:00 +0100</pubDate>
  <content><p>Ok, you‚Äôve got the Queen reference by now.</p>

<!--more-->

<p>I think I‚Äôve never been that assiduous on my blog.</p>

<blockquote>
  <p>Note: this blogpost is inspired by a recent discussion on the {naniar} Github repo</p>
</blockquote>

<p>Here‚Äôs the one million dollar question: how can we replace some values with NAs in a data.frame? And of course, how can we do that with a ‚Äútidyverse‚Äù mindset: that is to say with something like ‚Äúreplace_to_na_at‚Äù or ‚Äúreplace_to_na_if‚Äù?</p>

<p>In this blog post, I‚Äôll show you how to create these functions with {purrr} :</p>

<ul>
  <li>
    <p><code class="highlighter-rouge">replace_to_na_when</code> : takes the dataframe, and replace to NA everywhere the condition is met in the data.frame.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">replace_to_na_at</code> : replace at specific columns, where the condition is met.</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">replace_to_na_if</code> : replace if the column meets the condition and where the value meets the second condition.</p>
  </li>
</ul>

<p>As you know, data.frames are list of same-length vectors. Let‚Äôs decompose our process by starting with a simple question: how to change an element to NA under a certain condition in a vector.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rlang</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>{purrr} has this amazing feature that allow to simply modify an element by creating a <code class="highlighter-rouge">~ val</code> mapper. So you can basically :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nb">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">]</span><span class="w">
</span><span class="n">map_chr</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"z"</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"z"</span><span class="w"> </span><span class="s2">"z"</span><span class="w"> </span><span class="s2">"z"</span><span class="w"> </span><span class="s2">"z"</span><span class="w"> </span><span class="s2">"z"</span><span class="w">
</span></code></pre></div></div>

<p>So maybe we should?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_chr</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w">
</span></code></pre></div></div>

<p>Yes, we should. But we‚Äôve said we just want to change a value if a condition is met.</p>

<p>So, with <code class="highlighter-rouge">modify_if()</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">c</span><span class="p">(</span><span class="n">modify_if</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"a"</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA</span><span class="p">),</span><span class="w"> </span><span class="n">recursive</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">NA</span><span class="w">  </span><span class="s2">"b"</span><span class="w"> </span><span class="s2">"c"</span><span class="w"> </span><span class="s2">"d"</span><span class="w"> </span><span class="s2">"e"</span><span class="w">
</span></code></pre></div></div>

<p>Ok, seems to be good. But as you may be thinking, this can‚Äôt be that easy. If you‚Äôre wondering : ‚Äúwhat if there are already a NA in the vector?‚Äù, that‚Äôs exacty where I‚Äôm going for:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">b</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="nb">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">])</span><span class="w">
</span><span class="nf">c</span><span class="p">(</span><span class="n">modify_if</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"a"</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA</span><span class="p">),</span><span class="w"> </span><span class="n">recursive</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">.x</span><span class="p">[</span><span class="n">sel</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="p">(</span><span class="n">.x</span><span class="p">[</span><span class="n">sel</span><span class="p">],</span><span class="w"> </span><span class="n">.f</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">NAs</span><span class="w"> </span><span class="n">forbidden</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">indexed</span><span class="w"> </span><span class="n">affectations</span><span class="w">
</span></code></pre></div></div>

<p>Yep, an error. So, we want to change the mapper, of course:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">b</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="nb">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">])</span><span class="w">
</span><span class="n">modify_if</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"a"</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">.x</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reduce</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">NA</span><span class="w">  </span><span class="kc">NA</span><span class="w">  </span><span class="s2">"b"</span><span class="w"> </span><span class="s2">"c"</span><span class="w"> </span><span class="s2">"d"</span><span class="w"> </span><span class="s2">"e"</span><span class="w">
</span></code></pre></div></div>

<p>So here, if the condition is met, and if the value is not a NA, a NA is assigned. Sounds simple, right? Yet the thing is I don‚Äôt want my end function to ask for a ‚Äúcustom mapper + a <code class="highlighter-rouge">&amp; !is.na(.x)</code>‚Äù. Cause you know, error prone, and ‚Äúanything that can be automated, should be automated. Do as little as possible by hand‚Äù <a href="http://r-pkgs.had.co.nz/intro.html">source</a> and all that.</p>

<p>To sum up, I need a mapper composer that can take a user given mapper, and return this custom mapper with ‚Äú<code class="highlighter-rouge">&amp; !is.na(.x)</code>‚Äù at the end of it. For this, I‚Äôll use a little helper from {rlang}, <code class="highlighter-rouge">f_text()</code>, that extracts the right hand side of a formulat. Then, we‚Äôll glue this, turn it into a formulation, then into a mapper.</p>

<p>So here it is:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">create_mapper_na</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">.p</span><span class="p">){</span><span class="w">
  </span><span class="n">glue</span><span class="o">::</span><span class="n">glue</span><span class="p">(</span><span class="s2">"~ ({f_text(.p)}) &amp; !is.na(.)"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">as.formula</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">as_mapper</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">create_mapper_na</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w">

</span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">...</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="m">.1</span><span class="p">,</span><span class="w"> </span><span class="n">.y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="m">.2</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="m">.1</span><span class="p">)</span><span class="w"> 
</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">.</span><span class="p">)</span><span class="w">

</span><span class="nf">class</span><span class="p">(</span><span class="n">create_mapper_na</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">))</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"function"</span><span class="w">

</span></code></pre></div></div>

<p>Yey üéâ !!</p>

<p>Now we need a <code class="highlighter-rouge">na_set()</code> that will take a predicate, and turn to NA if the <code class="highlighter-rouge">.p</code> condition is met.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">na_set</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">modify_if</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">create_mapper_na</span><span class="p">(</span><span class="n">.p</span><span class="p">)</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">reduce</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">small</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">airquality</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">slice</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">
  
</span><span class="n">na_set</span><span class="p">(</span><span class="n">small</span><span class="o">$</span><span class="n">Ozone</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">41</span><span class="w"> </span><span class="m">36</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="m">28</span><span class="w"> </span><span class="m">23</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="kc">NA</span><span class="w">
</span></code></pre></div></div>

<blockquote>
  <p>Note bis: here‚Äôs another (cleaner) version proposed by Romain for na_set: <a href="https://gist.github.com/romainfrancois/c9406cc7b9776706dd1c11269c0d1965">napalm</a></p>
</blockquote>

<p>k, so now that‚Äôs quite easy: <code class="highlighter-rouge">replace_to_na_where</code> map over all the columns from a data.frame, and sets values to <code class="highlighter-rouge">NA</code> globally.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">replace_to_na_when</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">map_df</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">na_set</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w"> 

</span><span class="n">replace_to_na_when</span><span class="p">(</span><span class="n">small</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w">  
</span><span class="c1"># A tibble: 10 x 6</span><span class="w">
   </span><span class="n">Ozone</span><span class="w"> </span><span class="n">Solar.R</span><span class="w">  </span><span class="n">Wind</span><span class="w">  </span><span class="n">Temp</span><span class="w"> </span><span class="n">Month</span><span class="w">   </span><span class="n">Day</span><span class="w">
   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">    </span><span class="m">41</span><span class="w">     </span><span class="m">190</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">67</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="m">36</span><span class="w">     </span><span class="m">118</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">72</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">3</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">149</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">74</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">4</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">313</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">62</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">56</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">6</span><span class="w">    </span><span class="m">28</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">66</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">7</span><span class="w">    </span><span class="m">23</span><span class="w">     </span><span class="m">299</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">65</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">8</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">99</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">59</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">9</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">20.1</span><span class="w">    </span><span class="m">61</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">10</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">194</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">69</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span></code></pre></div></div>

<p><code class="highlighter-rouge">replace_to_na_at</code> is just a wrapper around <code class="highlighter-rouge">modify_at</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">replace_to_na_at</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="n">.at</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">modify_at</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="n">.at</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">na_set</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w"> 

</span><span class="n">replace_to_na_at</span><span class="p">(</span><span class="n">tbl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">small</span><span class="p">,</span><span class="w"> </span><span class="n">.at</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Wind"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Ozone"</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w"> 
</span><span class="c1"># A tibble: 10 x 6</span><span class="w">
   </span><span class="n">Ozone</span><span class="w"> </span><span class="n">Solar.R</span><span class="w">  </span><span class="n">Wind</span><span class="w">  </span><span class="n">Temp</span><span class="w"> </span><span class="n">Month</span><span class="w">   </span><span class="n">Day</span><span class="w">
   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">    </span><span class="m">41</span><span class="w">     </span><span class="m">190</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">67</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="m">36</span><span class="w">     </span><span class="m">118</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">72</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">2</span><span class="w">
 </span><span class="m">3</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">149</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">74</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">3</span><span class="w">
 </span><span class="m">4</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">313</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">62</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">4</span><span class="w">
 </span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">56</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">5</span><span class="w">
 </span><span class="m">6</span><span class="w">    </span><span class="m">28</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">66</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">6</span><span class="w">
 </span><span class="m">7</span><span class="w">    </span><span class="m">23</span><span class="w">     </span><span class="m">299</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">65</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">7</span><span class="w">
 </span><span class="m">8</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">99</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">59</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">8</span><span class="w">
 </span><span class="m">9</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">19</span><span class="w">  </span><span class="m">20.1</span><span class="w">    </span><span class="m">61</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">9</span><span class="w">
</span><span class="m">10</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">194</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">69</span><span class="w">     </span><span class="m">5</span><span class="w">    </span><span class="m">10</span><span class="w">
</span></code></pre></div></div>

<p>And <code class="highlighter-rouge">replace_to_na_if</code> a wrapper around <code class="highlighter-rouge">modify_if()</code>:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">replace_to_na_if</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">,</span><span class="w"> </span><span class="n">.pp</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">modify_if</span><span class="p">(</span><span class="n">tbl</span><span class="p">,</span><span class="w"> </span><span class="n">.p</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">na_set</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.pp</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w"> 

</span><span class="n">small</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">Day</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">small</span><span class="o">$</span><span class="n">Day</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">replace_to_na_if</span><span class="p">(</span><span class="n">is.numeric</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w"> 

</span><span class="c1"># A tibble: 10 x 6</span><span class="w">
   </span><span class="n">Ozone</span><span class="w"> </span><span class="n">Solar.R</span><span class="w">  </span><span class="n">Wind</span><span class="w">  </span><span class="n">Temp</span><span class="w"> </span><span class="n">Month</span><span class="w">    </span><span class="n">Day</span><span class="w">
   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">fctr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">    </span><span class="m">41</span><span class="w">     </span><span class="m">190</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">67</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">1</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="m">36</span><span class="w">     </span><span class="m">118</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">72</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">2</span><span class="w">
 </span><span class="m">3</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">149</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">74</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">3</span><span class="w">
 </span><span class="m">4</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">313</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">62</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">4</span><span class="w">
 </span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">56</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">5</span><span class="w">
 </span><span class="m">6</span><span class="w">    </span><span class="m">28</span><span class="w">      </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">66</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">6</span><span class="w">
 </span><span class="m">7</span><span class="w">    </span><span class="m">23</span><span class="w">     </span><span class="m">299</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">65</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">7</span><span class="w">
 </span><span class="m">8</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">99</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">59</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">8</span><span class="w">
 </span><span class="m">9</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">20.1</span><span class="w">    </span><span class="m">61</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="m">9</span><span class="w">
</span><span class="m">10</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">194</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="m">69</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">10</span><span class="w">
</span></code></pre></div></div>

<p>Cool stuff is you can build complexe predicates for replacing to NA :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">replace_to_na_when</span><span class="p">(</span><span class="n">small</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="nf">sqrt</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">5</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="c1"># A tibble: 10 x 6</span><span class="w">
   </span><span class="n">Ozone</span><span class="w"> </span><span class="n">Solar.R</span><span class="w">  </span><span class="n">Wind</span><span class="w">  </span><span class="n">Temp</span><span class="w"> </span><span class="n">Month</span><span class="w">   </span><span class="n">Day</span><span class="w">
   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">   </span><span class="m">7.4</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">   </span><span class="m">8.0</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">
 </span><span class="m">3</span><span class="w">    </span><span class="m">12</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">12.6</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">3</span><span class="w">
 </span><span class="m">4</span><span class="w">    </span><span class="m">18</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">11.5</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">4</span><span class="w">
 </span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">14.3</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">5</span><span class="w">
 </span><span class="m">6</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">14.9</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">6</span><span class="w">
 </span><span class="m">7</span><span class="w">    </span><span class="m">23</span><span class="w">      </span><span class="kc">NA</span><span class="w">   </span><span class="m">8.6</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">7</span><span class="w">
 </span><span class="m">8</span><span class="w">    </span><span class="m">19</span><span class="w">      </span><span class="kc">NA</span><span class="w">  </span><span class="m">13.8</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">8</span><span class="w">
 </span><span class="m">9</span><span class="w">     </span><span class="m">8</span><span class="w">      </span><span class="m">19</span><span class="w">  </span><span class="m">20.1</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">     </span><span class="m">9</span><span class="w">
</span><span class="m">10</span><span class="w">    </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">   </span><span class="m">8.6</span><span class="w">    </span><span class="kc">NA</span><span class="w">     </span><span class="m">5</span><span class="w">    </span><span class="m">10</span><span class="w">
</span></code></pre></div></div>
<blockquote>
  <p>Note ter: as said by Romain on <a href="https://twitter.com/romain_francois/status/938764972003414021">twitter</a>, replacing to NA in a data.frame is more of a {dplyr} than a {purrr} job. Yet, the solution with {purrr} is more general, and can be used for all kinds of lists</p>
</blockquote>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 2 : Text Wrangling</title>
  <description></description>
  <link>/purrr-text-wrangling/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-text-wrangling/</guid>
  <pubDate>2017-11-29 00:00:00 +0100</pubDate>
  <content><p>Yes, this title is still a Queen reference.</p>

<!--more-->

<p>I‚Äôve recently been exchanging DM with R√©mi (who writes cool stuffs about data science and SEO on his blog, so here‚Äôs some <a href="https://remibacha.com/">Google Juice</a> for him) who was looking for a way to turn this kind of dataframe:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Keywords</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">articlexyz for sale</td>
    </tr>
    <tr>
      <td style="text-align: left">cheap articlexyz</td>
    </tr>
    <tr>
      <td style="text-align: left">razor articlexyz</td>
    </tr>
    <tr>
      <td style="text-align: left">articlexyz walmart</td>
    </tr>
    <tr>
      <td style="text-align: left">articlexyz games</td>
    </tr>
    <tr>
      <td style="text-align: left">articlexyz amazon</td>
    </tr>
    <tr>
      <td style="text-align: left">bluetooth articlexyz</td>
    </tr>
    <tr>
      <td style="text-align: left">how much is a articlexyz</td>
    </tr>
    <tr>
      <td style="text-align: left">articlexyz for sale cheap</td>
    </tr>
  </tbody>
</table>

<p>Into something like :</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Keywords</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">for sale</td>
    </tr>
    <tr>
      <td style="text-align: left">cheap</td>
    </tr>
    <tr>
      <td style="text-align: left">razor</td>
    </tr>
    <tr>
      <td style="text-align: left">walmart</td>
    </tr>
    <tr>
      <td style="text-align: left">games</td>
    </tr>
    <tr>
      <td style="text-align: left">amazon</td>
    </tr>
    <tr>
      <td style="text-align: left">bluetooth</td>
    </tr>
    <tr>
      <td style="text-align: left">how much is a</td>
    </tr>
    <tr>
      <td style="text-align: left">for sale cheap</td>
    </tr>
  </tbody>
</table>

<p>If ever you‚Äôve been playing with adwords, this may look like something you‚Äôre familiar with (I guess this is what R√©mi has been playing with).</p>

<p>Anyway, the question then is how to write a function that can remove the n most common words out of this data.frame. As you know, I love {purrr}, and this is the kind of exercise I just can‚Äôt resist to solve.</p>

<p>So basically, here‚Äôs the how-to.</p>

<h2 id="a-little-bit-of-context">A little bit of context</h2>

<p>The first thing that came to my mind there (there might be some more straightforward ways to do this, feel free to comment at the bottom of this article if you have another approach) is to build a regex and <code class="highlighter-rouge">str_replace</code> the matching patterns (i.e. the top words) with a blank.</p>

<p>This is kind of easy if you‚Äôve just want to remove the most common one. But I wanted to have a more flexible function which could remove as many common words as I wanted. More or less, something that takes a n arg and remove the n most commons.</p>

<p>Basically, in this example, the most common word is articlexyz, so I want a function that can remove just this one, or articlexyz and the second most common, etc.</p>

<p>Oh, and of course, with tidy eval.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">
</span><span class="c1"># Here's my example data.frame</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tribble</span><span class="p">(</span><span class="w">
  </span><span class="o">~</span><span class="n">Keywords</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"articlexyz for sale"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"cheap articlexyz for sale"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"amazon articlexyz"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"articlexyz walmart cheap"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"articlexyz games"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"articlexyz amazon"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"bluetooth articlexyz"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"how much is a articlexyz on amazon"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"articlexyz for sale cheap"</span><span class="w"> 
</span><span class="p">)</span><span class="w">

</span></code></pre></div></div>

<h2 id="the-regex-builder">The regex builder</h2>

<p>So, here‚Äôs how to build a regex builder of the most common words with {purrr}, {dplyr} and {tidytext}.</p>

<h3 id="first-of-all-extract-the-most-common">First of all, extract the most common</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">concat_commons</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="p">){</span><span class="w">
  </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="o">!!</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">col</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">anti_join</span><span class="p">(</span><span class="n">stop_words</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">slice</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">levels</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">pull</span><span class="p">(</span><span class="n">word</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div></div>

<p>Nothing fancy here, just a common words extractor :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"articlexyz"</span><span class="w"> </span><span class="s2">"amazon"</span><span class="w"> 
</span></code></pre></div></div>

<h3 id="the-regex-builder-1">The regex builder</h3>

<p>The most complex thing here is that my end result should match only words, not letter inside a word: i.e. if ‚Äúa‚Äù is the most common word, <code class="highlighter-rouge">articlexyz</code> should be turned into <code class="highlighter-rouge">rticlexyz</code>, but ‚Äò<code class="highlighter-rouge"> a </code>‚Äô (space-a-space) should be removed. Here, you can‚Äôt go for for space-pattern-space matching, cause ‚Äúarticlexyz bla bla bla‚Äù won‚Äôt match because there is no blank at the beginning. ^articlexyz$ won‚Äôt match ‚Äúbla articlexyz bla bla‚Äù either, as this is a blank-word-blank pattern.</p>

<p>So let‚Äôs be this xkcd guy :</p>

<p><img src="https://imgs.xkcd.com/comics/regular_expressions.png" alt="" /></p>

<p>Here‚Äôs the regex put at the beginning and the end of the pattern : <code class="highlighter-rouge">\\barticlexyz\\b</code>, as <code class="highlighter-rouge">\b</code>  will match a word bundary.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">regex_build</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">list</span><span class="p">){</span><span class="w">
  </span><span class="c1"># Make sure only the words are matched</span><span class="w">
  </span><span class="n">map</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"\\b"</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="s2">"\\b"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="c1"># Reduce everything</span><span class="w">
    </span><span class="n">reduce</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.y</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"|"</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>So we‚Äôve got our regex with:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">regex_build</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"\\barticlexyz\\b|\\bamazon\\b"</span><span class="w">
</span></code></pre></div></div>
<p>Let‚Äôs bulk replace</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bulk_replace</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">regex</span><span class="p">,</span><span class="w"> </span><span class="n">vec</span><span class="p">){</span><span class="w">
    </span><span class="n">map</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">regex</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="c1"># Prevent the "too many spaces" to come</span><span class="w">
    </span><span class="n">map</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" {2,}"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">reg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">regex_build</span><span class="p">()</span><span class="w"> 
</span><span class="n">bulk_replace</span><span class="p">(</span><span class="n">reg</span><span class="p">,</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">Keywords</span><span class="p">)</span><span class="w">

</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" for sale"</span><span class="w">

</span><span class="p">[[</span><span class="m">2</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"cheap for sale"</span><span class="w">

</span><span class="p">[[</span><span class="m">3</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" "</span><span class="w">

</span><span class="p">[[</span><span class="m">4</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" walmart cheap"</span><span class="w">

</span><span class="n">....</span><span class="w">

</span></code></pre></div></div>

<h3 id="the-not-so-regex-solution">The not-so-regex solution</h3>

<p>If you‚Äôre not that into regex (nobody‚Äôs perfect), let‚Äôs do something with less regex and more {purrr}: string split, map, reduce.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">regex_build</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">list</span><span class="p">){</span><span class="w">
    </span><span class="n">reduce</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.y</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"|"</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>Simple regex here:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">regex_build</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"articlexyz|amazon"</span><span class="err">"</span><span class="w">
</span></code></pre></div></div>

<h3 id="bulk-replace-this-with-stringsplit">Bulk replace this with stringsplit</h3>

<p>Here the trick to forget this ‚Äúbeginning end whitespace‚Äù nightmare (not a nightmare, really) is to split and test every element against the regex, so split, replace, unsplit.</p>

<p>To do the ‚Äúunsplit‚Äù, as the result is a list of depth one, we need to <code class="highlighter-rouge">modify_depth</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bulk_replace</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">regex</span><span class="p">,</span><span class="w"> </span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">str_split</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">map</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">regex</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="c1"># We need to modify at the first level </span><span class="w">
    </span><span class="n">modify_depth</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">reduce</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">.y</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="c1"># Prevent the "too many spaces" to come</span><span class="w">
    </span><span class="n">map</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" {2,}"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">reg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">regex_build</span><span class="p">()</span><span class="w"> 
</span><span class="n">bulk_replace</span><span class="p">(</span><span class="n">reg</span><span class="p">,</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">Keywords</span><span class="p">)</span><span class="w">

</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" for sale"</span><span class="w">

</span><span class="p">[[</span><span class="m">2</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"cheap for sale"</span><span class="w">

</span><span class="p">[[</span><span class="m">3</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" "</span><span class="w">

</span><span class="p">[[</span><span class="m">4</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">" walmart cheap"</span><span class="w">

</span><span class="n">....</span><span class="w">

</span></code></pre></div></div>

<p>Yes. The very same result.</p>

<h3 id="remove-commons">Remove commons</h3>

<p>Ok let‚Äôs wrap this in a function :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">remove_commons</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">input</span><span class="p">,</span><span class="w"> </span><span class="n">output</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="p">){</span><span class="w">
  </span><span class="n">input</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">input</span><span class="p">)</span><span class="w">
  </span><span class="n">output</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">quo_name</span><span class="p">(</span><span class="n">enquo</span><span class="p">(</span><span class="n">output</span><span class="p">))</span><span class="w">
  </span><span class="n">most_common</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="o">!!</span><span class="w"> </span><span class="n">input</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">mutate</span><span class="p">(</span><span class="o">!!</span><span class="w"> </span><span class="n">output</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="n">bulk_replace</span><span class="p">(</span><span class="w"> </span><span class="n">regex_build</span><span class="p">(</span><span class="n">most_common</span><span class="p">),</span><span class="w"> </span><span class="o">!!</span><span class="w"> </span><span class="n">input</span><span class="w"> </span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">unnest</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>So here, we‚Äôve got a function that takes a data.frame, the name of the input and output columns, and the number of common words to remove. Let‚Äôs try this:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">remove_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="c1"># A tibble: 9 x 2</span><span class="w">
                            </span><span class="n">Keywords</span><span class="w">             </span><span class="n">group</span><span class="w">
                               </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">             </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">                </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">          </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">
</span><span class="m">2</span><span class="w">          </span><span class="n">cheap</span><span class="w"> </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">    </span><span class="n">cheap</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">
</span><span class="m">3</span><span class="w">                  </span><span class="n">amazon</span><span class="w"> </span><span class="n">articlexyz</span><span class="w">                  
</span><span class="m">4</span><span class="w">           </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">walmart</span><span class="w"> </span><span class="n">cheap</span><span class="w">     </span><span class="n">walmart</span><span class="w"> </span><span class="n">cheap</span><span class="w">
</span><span class="m">5</span><span class="w">                   </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">games</span><span class="w">             </span><span class="n">games</span><span class="w">
</span><span class="m">6</span><span class="w">                  </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">amazon</span><span class="w">                  
</span><span class="m">7</span><span class="w">               </span><span class="n">bluetooth</span><span class="w"> </span><span class="n">articlexyz</span><span class="w">        </span><span class="n">bluetooth</span><span class="w"> 
</span><span class="m">8</span><span class="w"> </span><span class="n">how</span><span class="w"> </span><span class="n">much</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">on</span><span class="w"> </span><span class="n">amazon</span><span class="w"> </span><span class="n">how</span><span class="w"> </span><span class="n">much</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">on</span><span class="w"> 
</span><span class="m">9</span><span class="w">          </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w"> </span><span class="n">cheap</span><span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w"> </span><span class="n">cheap</span><span class="w">
</span></code></pre></div></div>

<p>üéâ !!</p>

<p>Of course we‚Äôve got some blank shere, as two observations are composed of the most common words
. Let‚Äôs count:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">remove_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">anti_join</span><span class="p">(</span><span class="n">stop_words</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">sort</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
 </span><span class="n">A</span><span class="w"> </span><span class="n">tibble</span><span class="o">:</span><span class="w"> </span><span class="m">6</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="m">2</span><span class="w">
       </span><span class="n">word</span><span class="w">     </span><span class="n">n</span><span class="w">
      </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">    </span><span class="n">amazon</span><span class="w">     </span><span class="m">3</span><span class="w">
</span><span class="m">2</span><span class="w">     </span><span class="n">cheap</span><span class="w">     </span><span class="m">3</span><span class="w">
</span><span class="m">3</span><span class="w">      </span><span class="n">sale</span><span class="w">     </span><span class="m">3</span><span class="w">
</span><span class="m">4</span><span class="w"> </span><span class="n">bluetooth</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="m">5</span><span class="w">     </span><span class="n">games</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="m">6</span><span class="w">   </span><span class="n">walmart</span><span class="w">     </span><span class="m">1</span><span class="w">
</span></code></pre></div></div>

<h3 id="labels">Labels</h3>

<p>So now, maybe we want to assign each observation to its ‚Äúmost common label but not the n first‚Äù, that is to say, I want ‚Äúarticlexyz for sale on amazon‚Äù to be assigned a label ‚Äúsale‚Äù if this is the most common after the n, or amazon, etc.</p>

<p>So here comes <code class="highlighter-rouge">detect()</code> :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">which_label</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">list</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">detect</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">grepl</span><span class="p">(</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">vec</span><span class="p">))</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="w"> 
</span><span class="p">}</span><span class="w">

</span><span class="c1"># List of common words :</span><span class="w">
</span><span class="n">commons_words</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">concat_commons</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">Keywords</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">map_chr</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Keywords</span><span class="p">,</span><span class="w"> 
                         </span><span class="o">~</span><span class="w"> </span><span class="n">which_label</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="w"> </span><span class="n">common_words</span><span class="o">$</span><span class="n">group</span><span class="p">)))</span><span class="w"> 
</span><span class="c1"># A tibble: 9 x 2</span><span class="w">
                            </span><span class="n">Keywords</span><span class="w">     </span><span class="n">group</span><span class="w">
                               </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">     </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">                </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">      </span><span class="n">sale</span><span class="w">
</span><span class="m">2</span><span class="w">          </span><span class="n">cheap</span><span class="w"> </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w">     </span><span class="n">cheap</span><span class="w">
</span><span class="m">3</span><span class="w">                  </span><span class="n">amazon</span><span class="w"> </span><span class="n">articlexyz</span><span class="w">    </span><span class="n">amazon</span><span class="w">
</span><span class="m">4</span><span class="w">           </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">walmart</span><span class="w"> </span><span class="n">cheap</span><span class="w">     </span><span class="n">cheap</span><span class="w">
</span><span class="m">5</span><span class="w">                   </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">games</span><span class="w">     </span><span class="n">games</span><span class="w">
</span><span class="m">6</span><span class="w">                  </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">amazon</span><span class="w">    </span><span class="n">amazon</span><span class="w">
</span><span class="m">7</span><span class="w">               </span><span class="n">bluetooth</span><span class="w"> </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">bluetooth</span><span class="w">
</span><span class="m">8</span><span class="w"> </span><span class="n">how</span><span class="w"> </span><span class="n">much</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">articlexyz</span><span class="w"> </span><span class="n">on</span><span class="w"> </span><span class="n">amazon</span><span class="w">    </span><span class="n">amazon</span><span class="w">
</span><span class="m">9</span><span class="w">          </span><span class="n">articlexyz</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">sale</span><span class="w"> </span><span class="n">cheap</span><span class="w">     </span><span class="n">cheap</span><span class="w">
</span></code></pre></div></div>

<p>And now, let‚Äôs sell some Google Ads!</p>

<p><img src="https://i.giphy.com/media/VTxmwaCEwSlZm/200.gif" alt="" /></p>
 </content>
 </item>
 
 <item>
  <title>A Crazy Little Thing Called {purrr} - Part 1 : Web Mining </title>
  <description></description>
  <link>/purrr-web-mining/</link>
  <guid isPermaLink="true">http://localhost:4000/purrr-web-mining/</guid>
  <pubDate>2017-11-24 00:00:00 +0100</pubDate>
  <content><p>Yes, this title is a Queen reference.</p>

<!--more-->

<p>Yesterday, I presented a talk called ‚ÄúLe Text Mining expliqu√© √† ma grand-m√®re‚Äù at the Breizh Data Club Meetup. As the title suggests (‚ÄúText Mining explained to my Grand Mother‚Äù), this talk was about explaining text mining to someone that doesn‚Äôt understand anything about data science. If you want to check the slides, they are <a href="https://github.com/ColinFay/conf/blob/master/2017-11-breizh-data-club/fay_colin_tm_explique_grand_mere.pdf">on this GitHub repo</a>.</p>

<p>As I was searching for a ‚Äúlight‚Äù subject to do text-mining on, and something appealing for my grand-mother, I thought about mining Michel Sardou‚Äôs lyrics (if you don‚Äôt know him, he‚Äôs a famous french singer, who wrote quite a lot of cheesy songs, and was really popular around the 80‚Äôs - you should look for him on YouTube or Spotify if you want to hear more about him (but honestly, don‚Äôt do that)). As there are no available dataset with the lyrics, I needed to scrap the data from the web.</p>

<p>But I‚Äôm not here to talk about what‚Äôs in the slides, but more to share some tricks to use {purrr} for doing web scraping.</p>

<h2 id="scraping-the-web-with-purrr-and-rvest">Scraping the web with {purrr} and {rvest}</h2>

<blockquote>
  <p>Disclaimer: this post is neither an {rvest} nor a {stringr} tutorial. There‚Äôs plenty of available great tutorials out there, feel free to look for them if you‚Äôre not familiar with theses packages.</p>
</blockquote>

<p>So, the first step was to gather the data. I found <a href="http://paroles2chansons.lemonde.fr">this website</a> which seemed to be containing everything I needed.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">get_album_list</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">url</span><span class="p">){</span><span class="w">
  </span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">".col-md-12"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">)</span><span class="w">
    
</span><span class="p">}</span><span class="w">

</span><span class="n">url_album</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_album_list</span><span class="p">(</span><span class="s2">"http://paroles2chansons.lemonde.fr/paroles-michel-sardou/discographie.html"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>No {purrr} there, let‚Äôs move to the next function, which get all the infos from an album list :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get_album_info</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">url</span><span class="p">){</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w"> 
  </span><span class="n">date</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"small"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Date de Sortie : "</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">lubridate</span><span class="o">::</span><span class="n">dmy</span><span class="p">()</span><span class="w">
  </span><span class="n">song_list</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">".font-small"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">discard</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Plan de site"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Mention l√©gale"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Chansons de mariage"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Chansons d'enterrement"</span><span class="w"> </span><span class="p">)</span><span class="w">
  
  </span><span class="n">url_list</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">".font-small"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">discard</span><span class="p">(</span><span class="o">~</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"/plan-du-site.html"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"/mentions-legales.html"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"/paroles-chansons-de-messe-d-enterrement/"</span><span class="o">|</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"/paroles-chansons-de-messe-de-mariage/"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">album_name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">".breadcrumb"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_extract</span><span class="p">(</span><span class="s2">"\t.*$"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"\t"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  
  </span><span class="n">tibble</span><span class="p">(</span><span class="n">chanson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">song_list</span><span class="p">,</span><span class="w"> 
         </span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url_list</span><span class="p">,</span><span class="w"> 
         </span><span class="n">nom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="p">,</span><span class="w"> 
         </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">date</span><span class="p">)</span><span class="w">

</span><span class="p">}</span><span class="w">

</span></code></pre></div></div>

<p>When doing web mining, there are sometimes stuffs you want to discard: here, for example, every pages of the website has four links I don‚Äôt want to keep. For that, I used the <code class="highlighter-rouge">discard</code> function from {purrr}, which is a function that remove everything that matches the predicate it receives.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">albums_infos</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_df</span><span class="p">(</span><span class="n">url_album</span><span class="p">,</span><span class="w"> </span><span class="n">get_album_info</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">grepl</span><span class="p">(</span><span class="s2">"sardou"</span><span class="p">,</span><span class="w"> </span><span class="n">url</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Here, a simple <code class="highlighter-rouge">map_df</code>, which iterates over the list of url, applies the function <code class="highlighter-rouge">get_album_info</code>, and always returns a data.frame. Out of security, I filtered the urls to be sure to match the name of the artist.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get_lyrics</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">){</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">
  </span><span class="n">lyrics</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">".text-center"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"div"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"[\t+\r+\n+]"</span><span class="p">,</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"[ ]{2}"</span><span class="p">,</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"googletag.cmd.push\\(function\\(\\) \\{ googletag.display\\('container-middle-lyrics'\\)\\; \\}\\)\\;"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"\\/\\* ringtone - Below Lyrics \\*\\/.*"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">discard</span><span class="p">(</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">grepl</span><span class="p">(</span><span class="s2">"Corriger les paroles"</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">discard</span><span class="p">(</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">grepl</span><span class="p">(</span><span class="s2">"Paroles2Chansons"</span><span class="p">,</span><span class="w"> </span><span class="n">.x</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">discard</span><span class="p">(</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">nchar</span><span class="p">(</span><span class="n">.x</span><span class="p">)</span><span class="w">  </span><span class="o">&lt;</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> 
  </span><span class="n">tibble</span><span class="p">(</span><span class="n">parole</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lyrics</span><span class="p">,</span><span class="w"> 
         </span><span class="n">song</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">safe_lyr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">safely</span><span class="p">(</span><span class="n">get_lyrics</span><span class="p">)</span><span class="w">

</span><span class="n">lyrics_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map2</span><span class="p">(</span><span class="n">albums_infos</span><span class="o">$</span><span class="n">url</span><span class="p">,</span><span class="w"> 
                     </span><span class="n">albums_infos</span><span class="o">$</span><span class="n">chanson</span><span class="p">,</span><span class="w"> 
                     </span><span class="o">~</span><span class="w"> </span><span class="n">safe_lyr</span><span class="p">(</span><span class="n">.x</span><span class="p">,</span><span class="n">.y</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">map</span><span class="p">(</span><span class="s2">"result"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">compact</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">reduce</span><span class="p">(</span><span class="n">bind_rows</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="w"> </span><span class="n">grepl</span><span class="p">(</span><span class="s2">"Soumettre une chanson"</span><span class="p">,</span><span class="w"> </span><span class="n">parole</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>This part is more interesting (in my humble opinion) and quite relevant for web mining. Nothing new in the <code class="highlighter-rouge">get_lyrics</code> function, but it turns out that <code class="highlighter-rouge">safely</code> can be an amazingly usefull tool for web scraping. What this function does is taking a function A, returning another function B which will run A and returns a list containing two element: <code class="highlighter-rouge">result</code> and <code class="highlighter-rouge">error</code>, one being <code class="highlighter-rouge">NULL</code> depending on the output of the function A.</p>

<p>So the point is that <strong>this function always works</strong> üéâ. If you‚Äôve been doing some bulk web scraping, you know how frustrating it can be when your iteration stops because one out of your 500 urls is a 404. So, safely is here to help you prevent that: even if you iterate over 500 urls which are 404, your process won‚Äôt stop: you‚Äôll always get an answer.</p>

<p>That‚Äôs what I‚Äôm doing here with <code class="highlighter-rouge">safe_lyr</code>. Once I get the results, I <code class="highlighter-rouge">map("result")</code> in order to keep only the result elements of the lists, and <code class="highlighter-rouge">compact()</code> to remove the <code class="highlighter-rouge">NULL</code> elements (i.e the url that returned a 404). As all my result elements are tibbles, I end with a <code class="highlighter-rouge">reduce(bind_rows)</code> [*], which iterates over the list binding two elements at a time.</p>

<p>So here we are, let‚Äôs join everyting up in a big dataframe !</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">albums_infos</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">albums_infos</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">lyrics_df</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">chanson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"song"</span><span class="p">))</span><span class="w"> 
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/11/sardou.gif" alt="" /></p>

<p>[*] As stated in the comment section, <code class="highlighter-rouge">bind_rows()</code> can take a list of data.frames as argument: I chose here to use <code class="highlighter-rouge">reduce</code> as an example of how this function works, yet this will not be, in practice, the best way to bind a list of data.frames.</p>
 </content>
 </item>
 
 <item>
  <title>Back from Budapest</title>
  <description></description>
  <link>/back-budapest/</link>
  <guid isPermaLink="true">http://localhost:4000/back-budapest/</guid>
  <pubDate>2017-11-17 00:00:00 +0100</pubDate>
  <content><p>Back from Budapest!</p>

<!--more-->

<p>This week, I had the chance to travel to Budapest to talk about R (obviously), dataviz, networks and text mining at the BudapestBI conference, and during the Budapest Users of R Network meetup.</p>

<p>If you weren‚Äôt there, or if you were but want to check my slides again, you can get them below.</p>

<h2 id="2017-11-15">2017-11-15</h2>

<h3 id="visualising-text-data-with-ggplot2">Visualising text data with ggplot2</h3>

<blockquote>
  <p>Budapest R Meetup</p>
</blockquote>

<p>The slides: <a href="https://github.com/ColinFay/conf/blob/master/2017-11-budapest/fay_colin_text_data_ggplot2.pdf">https://github.com/ColinFay/conf/blob/master/2017-11-budapest/fay_colin_text_data_ggplot2.pdf</a></p>

<p>More info about the meetup: <a href="https://www.meetup.com/Budapest-Users-of-R-Network/events/244319651/">https://www.meetup.com/Budapest-Users-of-R-Network/events/244319651/</a></p>

<h2 id="2017-11-16-">2017-11-16 :</h2>

<h3 id="a-gentle-introduction-to-network-visualisation">A Gentle Introduction to Network Visualisation</h3>

<blockquote>
  <p>BudapestBI 2017</p>
</blockquote>

<p>The slides: <a href="https://github.com/ColinFay/conf/blob/master/2017-11-budapest/fay_colin_visualise_network.pdf">https://github.com/ColinFay/conf/blob/master/2017-11-budapest/fay_colin_visualise_network.pdf</a></p>

<p>More about that: <a href="http://budapestbiforum.hu/2017/hu/eloadasok/a-gentle-introduction-to-network-visualisation-colin-fay-thinkr/">http://budapestbiforum.hu/2017/hu/eloadasok/a-gentle-introduction-to-network-visualisation-colin-fay-thinkr/</a></p>

<h2 id="cheers-budapest">Cheers Budapest</h2>

<p>Special thanks to the team of BudapestBI for inviting me, and to the local meetup team for inviting me to me talk there.</p>

<p>Thanks also to everybody there, we had such a good time. Hope to see you guys again soon.</p>
 </content>
 </item>
 
 <item>
  <title>Budapest Here I Come</title>
  <description></description>
  <link>/coming-budapest/</link>
  <guid isPermaLink="true">http://localhost:4000/coming-budapest/</guid>
  <pubDate>2017-11-09 00:00:00 +0100</pubDate>
  <content><p>See you next week in Budapest!</p>

<!--more-->

<p>Next week, I have the pleasure to travel to Budapest to talk about R at the Budapest BI conference 2018 and at the Budapest Users of R Network.</p>

<h2 id="2017-11-15">2017-11-15</h2>

<h3 id="visualising-text-data-with-ggplot2">Visualising text data with ggplot2</h3>

<blockquote>
  <p>Budapest R Meetup</p>
</blockquote>

<p>From raw text data to ggplot visualisations.</p>

<p>More info : <a href="https://www.meetup.com/Budapest-Users-of-R-Network/events/244319651/">https://www.meetup.com/Budapest-Users-of-R-Network/events/244319651/</a></p>

<h2 id="2017-11-16-">2017-11-16 :</h2>

<h3 id="a-gentle-introduction-to-network-visualisation">A Gentle Introduction to Network Visualisation</h3>

<blockquote>
  <p>Budapest BI 2017</p>
</blockquote>

<p>A brief reminder of what is graph theory, a methodology to create your first network visualisation, and some packages developed for network visualisation in R ‚Äî first of all packages built on top of ggplot2, but also other packages especially designed for representing this special type of data.</p>

<p>More about that: <a href="http://budapestbiforum.hu/2017/hu/eloadasok/a-gentle-introduction-to-network-visualisation-colin-fay-thinkr/">http://budapestbiforum.hu/2017/hu/eloadasok/a-gentle-introduction-to-network-visualisation-colin-fay-thinkr/</a></p>
 </content>
 </item>
 
 <item>
  <title>Collecting tweets with R and {rtweet}</title>
  <description></description>
  <link>/collect-rtweet/</link>
  <guid isPermaLink="true">http://localhost:4000/collect-rtweet/</guid>
  <pubDate>2017-11-01 00:00:00 +0100</pubDate>
  <content><p>Some arguments in favor of <a href="https://CRAN.R-project.org/package=rtweet">{rtweet}</a>, an amazing package by Michael W. Kearney.</p>

<!--more-->

<p>For what I remember, I have been scraping web data for as long as I‚Äôve been using R. This, of course, includes Google Analytics, Facebook, raw web pages, and so on and so forth ‚Äî but most of all, I‚Äôve always loved playing with Twitter data. I‚Äôve been on Twitter for <a href="https://twitter.com/_ColinFay/status/922304944971173888">8 years now</a>, and I know what an insightful place it can be, and also, it‚Äôs full of data, so you know, why not going down that rabbit hole!</p>

<h2 id="a-long-time-ago-in-a-far-away-land">A long time ago, in a far away land</h2>

<p>My first encounter with tweet collecting in R has been through the {twitteR} package, which, despite its (sometimes) weird interface and strange functions, has been really useful in many past projects.</p>

<p>So, before {rtweet}, the common practice was to mine Twitter with {twitteR}, which was designed as an object oriented package (so not tidy): calls on the API create environments, in which you can use methods for further investigation. Also, results were not in a data.frame format (even if there is a funtion to turn twitter lists to df).</p>

<p>Searching for tweets was quite straightforward: setting up oauth, search twitter, convert result to dataframe, dealing with dates‚Ä¶ but a drawback was when doing text mining: you had to look for hashtags by subsetting the raw text messages of tweets. That could be kind of a headache. Not to mention when you needed to retrieve followers, timelines, and everything that makes Twitter a richful place to mine for data.</p>

<h2 id="why-i-used-rtweet">Why I used rtweet?</h2>

<p>I‚Äôve been using rtweet for several projects now, the more recent being:</p>

<ul>
  <li><a href="http://breizhdataclub.org/breizhdataday-revue-de-tweets/">#BreizhDataDay, revue de Tweets</a></li>
</ul>

<p>which I wrote just after the first <a href="https://breizhdataday.github.io/">Breizh Data Day</a>.</p>

<p>So, {rtweet} is a (relatively) young package, as it was first published on CRAN around a year ago (august 2016). It provides a tidy approach to collecting Twitter data: main functions return a data.frame following the <a href="http://vita.had.co.nz/papers/tidy-data.html">tidy data</a> principles.</p>

<p>A cool thing also, is that you don‚Äôt need to set up a Twitter app in order to search for tweets.</p>

<h2 id="rtweet-worklow">{rtweet} worklow</h2>

<p>So, let‚Äôs try searching for 1000 tweets with the hashtag Rennes with {rtweet}.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">rtweet</span><span class="p">)</span><span class="w">
</span><span class="n">srch</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">search_tweets</span><span class="p">(</span><span class="s2">"#Rennes"</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">)</span><span class="w">
</span><span class="n">Searching</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">tweets...</span><span class="w">
</span><span class="n">Finished</span><span class="w"> </span><span class="n">collecting</span><span class="w"> </span><span class="n">tweets</span><span class="o">!</span><span class="w">
  
</span><span class="n">dplyr</span><span class="o">::</span><span class="n">glimpse</span><span class="p">(</span><span class="n">srch</span><span class="p">)</span><span class="w">
</span><span class="n">Observations</span><span class="o">:</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="m">000</span><span class="w">
</span><span class="n">Variables</span><span class="o">:</span><span class="w"> </span><span class="m">35</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">screen_name</span><span class="w">                    </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="s2">"LaurentBerthet1"</span><span class="p">,</span><span class="w"> </span><span class="s2">"LoudL"</span><span class="p">,</span><span class="w"> </span><span class="s2">"AnneRH_"</span><span class="p">,</span><span class="w"> </span><span class="s2">"SAddictfr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Girondins...
$ user_id                        &lt;chr&gt; "</span><span class="m">1718082409</span><span class="s2">", "</span><span class="m">127659284</span><span class="s2">", "</span><span class="m">878929995602821121</span><span class="s2">", "</span><span class="m">869930134391</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">created_at</span><span class="w">                     </span><span class="o">&lt;</span><span class="n">dttm</span><span class="o">&gt;</span><span class="w"> </span><span class="m">2017-11-01</span><span class="w"> </span><span class="m">09</span><span class="o">:</span><span class="m">11</span><span class="o">:</span><span class="m">41</span><span class="p">,</span><span class="w"> </span><span class="m">2017-11-01</span><span class="w"> </span><span class="m">09</span><span class="o">:</span><span class="m">11</span><span class="o">:</span><span class="m">23</span><span class="p">,</span><span class="w"> </span><span class="m">2017-11-01</span><span class="w"> </span><span class="m">09</span><span class="o">:</span><span class="m">10</span><span class="o">:</span><span class="m">26</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">status_id</span><span class="w">                      </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="s2">"925651548222492672"</span><span class="p">,</span><span class="w"> </span><span class="s2">"925651473035350017"</span><span class="p">,</span><span class="w"> </span><span class="s2">"92565123359099289...
$ text                           &lt;chr&gt; "</span><span class="n">RT</span><span class="w"> </span><span class="o">@</span><span class="n">GaspardGlanz</span><span class="o">:</span><span class="w"> </span><span class="n">Grand</span><span class="w"> </span><span class="n">merci</span><span class="w"> </span><span class="err">√†</span><span class="w"> </span><span class="n">Maitre</span><span class="w"> </span><span class="o">@</span><span class="n">VincentFillola</span><span class="w"> </span><span class="n">pour</span><span class="w"> </span><span class="n">s...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">retweet_count</span><span class="w">                  </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">favorite_count</span><span class="w">                 </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">is_quote_status</span><span class="w">                </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">quote_status_id</span><span class="w">                </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">is_retweet</span><span class="w">                     </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">FALS...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">retweet_status_id</span><span class="w">              </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="s2">"925649093329915905"</span><span class="p">,</span><span class="w"> </span><span class="s2">"925649093329915905"</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="s2">"92534...
$ in_reply_to_status_status_id   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "</span><span class="m">925646918</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">in_reply_to_status_user_id</span><span class="w">     </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="s2">"573995912...
$ in_reply_to_status_screen_name &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "</span><span class="n">LeclercFl...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">lang</span><span class="w">                           </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"pt"</span><span class="p">,</span><span class="w"> </span><span class="s2">"f...
$ source                         &lt;chr&gt; "</span><span class="n">Twitter</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">iPhone</span><span class="s2">", "</span><span class="n">Twitter</span><span class="w"> </span><span class="n">Lite</span><span class="s2">", "</span><span class="n">IFTTT</span><span class="s2">", "</span><span class="n">SRFC</span><span class="w"> </span><span class="n">Addict</span><span class="w"> </span><span class="m">2</span><span class="s2">"...
$ media_id                       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, "</span><span class="m">925649225068765184</span><span class="s2">", "</span><span class="m">925</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">media_url</span><span class="w">                      </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="s2">"http://pbs.twimg.com/medi...
$ media_url_expanded             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, "</span><span class="n">https</span><span class="o">://</span><span class="n">twitter.com</span><span class="o">/</span><span class="n">Laure...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">urls</span><span class="w">                           </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">urls_display</span><span class="w">                   </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="s2">"twitter.com/i/web/status/9‚Ä¶"</span><span class="p">,</span><span class="w"> </span><span class="s2">"football-addict.com/ar...
$ urls_expanded                  &lt;chr&gt; NA, NA, "</span><span class="n">https</span><span class="o">://</span><span class="n">twitter.com</span><span class="o">/</span><span class="n">i</span><span class="o">/</span><span class="n">web</span><span class="o">/</span><span class="n">status</span><span class="o">/</span><span class="m">925282923615543297</span><span class="s2">",...
$ mentions_screen_name           &lt;chr&gt; "</span><span class="n">GaspardGlanz</span><span class="w"> </span><span class="n">VincentFillola</span><span class="s2">", "</span><span class="n">GaspardGlanz</span><span class="w"> </span><span class="n">VincentFillola</span><span class="s2">", ...
$ mentions_user_id               &lt;chr&gt; "</span><span class="m">53798973</span><span class="w"> </span><span class="m">514620241</span><span class="s2">", "</span><span class="m">53798973</span><span class="w"> </span><span class="m">514620241</span><span class="s2">", NA, NA, NA, "</span><span class="m">29779</span><span class="n">...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">symbols</span><span class="w">                        </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">hashtags</span><span class="w">                       </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="s2">"Rennes"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Rennes"</span><span class="p">,</span><span class="w"> </span><span class="err">"</span><span class="n">RH</span><span class="w"> </span><span class="n">Digital</span><span class="w"> </span><span class="n">parking</span><span class="w"> </span><span class="n">Gare</span><span class="w"> </span><span class="n">Rennes</span><span class="w"> </span><span class="n">EuroRennes...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">coordinates</span><span class="w">                    </span><span class="o">&lt;</span><span class="n">lgl</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">place_id</span><span class="w">                       </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">place_type</span><span class="w">                     </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">place_name</span><span class="w">                     </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">place_full_name</span><span class="w">                </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">country_code</span><span class="w">                   </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">country</span><span class="w">                        </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">bounding_box_coordinates</span><span class="w">       </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">
</span><span class="o">$</span><span class="w"> </span><span class="n">bounding_box_type</span><span class="w">              </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">NA...</span><span class="w">


</span></code></pre></div></div>

<p>And here it is. Yes, it‚Äôs that simple: 1000 tweets in two commands (and one being <code class="highlighter-rouge">library()</code>): <strong>without specifying any oauth token</strong>.</p>

<p>So now we have a tidy data.frame with the results, hashtags are in a column we can easily parse and count, as are text, mentions, and everything needed to start mining data.</p>

<h3 id="quick-example">Quick example</h3>

<p>We can write a quick hashtag and sentiment analysis :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">proustr</span><span class="p">)</span><span class="w">

</span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">srch</span><span class="p">,</span><span class="w"> </span><span class="n">hashtags</span><span class="p">,</span><span class="w"> </span><span class="n">hashtags</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">hashtags</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">"rennes"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">hashtags</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">top_n</span><span class="p">(</span><span class="m">5</span><span class="p">)</span><span class="w">
</span><span class="n">Selecting</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="n">n</span><span class="w">
</span><span class="c1"># A tibble: 5 x 2</span><span class="w">
</span><span class="n">hashtags</span><span class="w">     </span><span class="n">n</span><span class="w">
</span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">    </span><span class="n">bretagne</span><span class="w">    </span><span class="m">53</span><span class="w">
</span><span class="m">2</span><span class="w">         </span><span class="n">cdi</span><span class="w">    </span><span class="m">50</span><span class="w">
</span><span class="m">3</span><span class="w">      </span><span class="n">emploi</span><span class="w">    </span><span class="m">36</span><span class="w">
</span><span class="m">4</span><span class="w">     </span><span class="n">quimper</span><span class="w">    </span><span class="m">44</span><span class="w">
</span><span class="m">5</span><span class="w"> </span><span class="n">visitrennes</span><span class="w">    </span><span class="m">48</span><span class="w">

</span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">srch</span><span class="p">,</span><span class="w"> </span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">word</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">proust_sentiments</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"score"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">sentiment</span><span class="p">)</span><span class="w">
</span><span class="n">Joining</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"word"</span><span class="w">
</span><span class="c1"># A tibble: 6 x 2</span><span class="w">
</span><span class="n">sentiment</span><span class="w">     </span><span class="n">n</span><span class="w">
</span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">     </span><span class="n">anger</span><span class="w">   </span><span class="m">204</span><span class="w">
</span><span class="m">2</span><span class="w">   </span><span class="n">disgust</span><span class="w">   </span><span class="m">147</span><span class="w">
</span><span class="m">3</span><span class="w">      </span><span class="n">fear</span><span class="w">   </span><span class="m">211</span><span class="w">
</span><span class="m">4</span><span class="w">       </span><span class="n">joy</span><span class="w">    </span><span class="m">89</span><span class="w">
</span><span class="m">5</span><span class="w">   </span><span class="n">sadness</span><span class="w">   </span><span class="m">145</span><span class="w">
</span><span class="m">6</span><span class="w">  </span><span class="n">surprise</span><span class="w">   </span><span class="m">208</span><span class="w">
</span></code></pre></div></div>

<p>Of course {rtweet} is full of other features you can try. But that blog post was more of an introduction, and I hope I‚Äôve convinced you to download and use this amazing package!</p>
 </content>
 </item>
 
 <item>
  <title>{proustr} 0.2.0 is on CRAN</title>
  <description></description>
  <link>/proustr-0-2-0/</link>
  <guid isPermaLink="true">http://localhost:4000/proustr-0-2-0/</guid>
  <pubDate>2017-09-27 00:00:00 +0200</pubDate>
  <content><p>{proustr} 0.2.0 just hit the CRAN yesterday. Here‚Äôs the new stuffs just waiting for you.</p>

<!--more-->

<p align="center"><img src="https://github.com/ColinFay/proustr/blob/master/proustr_hex.png?raw=true" width="250" /></p>

<h2 id="about-proustr">About {proustr}</h2>

<p>This package is designed to give you access to tools for Natural Language Processing in French, and (most importantly) to texts from Marcel Proust‚Äôs collection ‚ÄúA La Recherche Du Temps Perdu‚Äù. The idea behing {proustr} is to create an environmnet for doing text-mining in French, inside the tidyverse.</p>

<p>Here are the books in the package :</p>

<ul>
  <li>Du c√¥t√© de chez Swann (1913): <code class="highlighter-rouge">ducotedechezswann</code>.</li>
  <li>√Ä l‚Äôombre des jeunes filles en fleurs (1919): <code class="highlighter-rouge">alombredesjeunesfillesenfleurs</code>.</li>
  <li>Le C√¥t√© de Guermantes (1921): <code class="highlighter-rouge">lecotedeguermantes</code>.</li>
  <li>Sodome et Gomorrhe (1922) : <code class="highlighter-rouge">sodomeetgomorrhe</code>.</li>
  <li>La Prisonni√®re (1923) :<code class="highlighter-rouge">laprisonniere</code>.</li>
  <li>Albertine disparue (1925, also know as : La Fugitive) : <code class="highlighter-rouge">albertinedisparue</code>.</li>
  <li>Le Temps retrouv√© (1927) : <code class="highlighter-rouge">letempretrouve</code>.</li>
</ul>

<h2 id="find-your-way-into-proustr">Find your way into {proustr}</h2>

<p>{proustr} is divided into two type of functions :</p>

<ul>
  <li>
    <p><code class="highlighter-rouge">proust_*()</code> functions return data objects (books, characters, stop words, random Proust extracts‚Ä¶)</p>
  </li>
  <li>
    <p><code class="highlighter-rouge">pr_*()</code> functions perform actions on the data. <code class="highlighter-rouge">pr</code> is short for p(roust)r, pr(oust), p(rocessing f)r(ench), or anything you can think of :). This shortcode refers to functions like <code class="highlighter-rouge">pr_clean_punc()</code>.</p>
  </li>
</ul>

<h2 id="proust_-functions"><code class="highlighter-rouge">proust_*()</code> functions</h2>

<h3 id="proust_books"><code class="highlighter-rouge">proust_books()</code></h3>

<p>Get the tibble with all the books :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">proustr</span><span class="p">)</span><span class="w">
</span><span class="n">proust_books</span><span class="p">()</span><span class="w">
</span><span class="c1"># A tibble: 4,690 x 4</span><span class="w">
                                                                                         </span><span class="n">text</span><span class="w">
 </span><span class="o">*</span><span class="w">                                                                                      </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w"> </span><span class="s2">"Longtemps, je me suis couch√© de bonne heure. Parfois, √† peine ma bougie √©teinte, mes yeux
 2 J'appuyais tendrement mes joues contre les belles joues de l'oreiller qui, pleines et fra√Æ
 3 Je me rendormais, et parfois je n'avais plus que de courts r√©veils d'un instant, le temps 
 4 Quelquefois, comme √àve naquit d'une c√¥te d'Adam, une femme naissait pendant mon sommeil d'
 5 Un homme qui dort tient en cercle autour de lui le fil des heures, l'ordre des ann√©es et d
 6 "</span><span class="n">Peut</span><span class="o">-</span><span class="err">√™</span><span class="n">tre</span><span class="w"> </span><span class="n">l</span><span class="s1">'immobilit√© des choses autour de nous leur est-elle impos√©e par notre certitud
 7 Puis renaissait le souvenir d'</span><span class="n">une</span><span class="w"> </span><span class="n">nouvelle</span><span class="w"> </span><span class="n">attitude</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="n">mur</span><span class="w"> </span><span class="n">filait</span><span class="w"> </span><span class="n">dans</span><span class="w"> </span><span class="n">une</span><span class="w"> </span><span class="n">autre</span><span class="w"> </span><span class="n">directi</span><span class="w">
 </span><span class="m">8</span><span class="w"> </span><span class="n">Ces</span><span class="w"> </span><span class="err">√©</span><span class="n">vocations</span><span class="w"> </span><span class="n">tournoyantes</span><span class="w"> </span><span class="n">et</span><span class="w"> </span><span class="n">confuses</span><span class="w"> </span><span class="n">ne</span><span class="w"> </span><span class="n">duraient</span><span class="w"> </span><span class="n">jamais</span><span class="w"> </span><span class="n">que</span><span class="w"> </span><span class="n">quelques</span><span class="w"> </span><span class="n">secondes</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="n">souvent</span><span class="w">
 </span><span class="m">9</span><span class="w"> </span><span class="n">Certes</span><span class="p">,</span><span class="w"> </span><span class="n">j</span><span class="s1">'√©tais bien √©veill√© maintenant : mon corps avait vir√© une derni√®re fois et le bon
10 "√Ä Combray, tous les jours d√®s la fin de l'</span><span class="n">apr</span><span class="err">√®</span><span class="n">s</span><span class="o">-</span><span class="n">midi</span><span class="p">,</span><span class="w"> </span><span class="n">longtemps</span><span class="w"> </span><span class="n">avant</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="n">moment</span><span class="w"> </span><span class="n">o</span><span class="err">√π</span><span class="w"> </span><span class="n">il</span><span class="w"> </span><span class="n">fau</span><span class="w">
</span><span class="c1"># ... with 4,680 more rows, and 3 more variables: book &lt;chr&gt;, volume &lt;chr&gt;, year &lt;dbl&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="proust_characters"><code class="highlighter-rouge">proust_characters()</code></h3>

<p><code class="highlighter-rouge">proust_characters</code> returns a tibble with each characters from the books.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">proust_characters</span><span class="p">()</span><span class="w">
</span><span class="c1"># A tibble: 461 x 1</span><span class="w">
             </span><span class="n">perso</span><span class="w">
 </span><span class="o">*</span><span class="w">           </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">            </span><span class="n">A.J.</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="n">Acad</span><span class="err">√©</span><span class="n">micien</span><span class="w"> 
 </span><span class="m">3</span><span class="w">        </span><span class="n">Adolphe</span><span class="w"> 
 </span><span class="m">4</span><span class="w">      </span><span class="n">Agrigente</span><span class="w"> 
 </span><span class="m">5</span><span class="w">      </span><span class="n">Agrigente</span><span class="w"> 
 </span><span class="m">6</span><span class="w">            </span><span class="n">Aim</span><span class="err">√©</span><span class="w">
 </span><span class="m">7</span><span class="w"> </span><span class="n">Albaret</span><span class="w"> </span><span class="n">C</span><span class="err">√©</span><span class="n">leste</span><span class="w">
 </span><span class="m">8</span><span class="w">          </span><span class="n">Albert</span><span class="w">
 </span><span class="m">9</span><span class="w">       </span><span class="n">Albertine</span><span class="w">
</span><span class="m">10</span><span class="w">           </span><span class="n">Albon</span><span class="w">
</span><span class="c1"># ... with 451 more rows</span><span class="w">
</span></code></pre></div></div>

<h3 id="proust_random"><code class="highlighter-rouge">proust_random()</code></h3>

<p>If you need to create a quick example for your text-mining exercise, you can get your own Proust text with the <code class="highlighter-rouge">proust_random()</code> function. The number of lines you want to extract is controlled by the <code class="highlighter-rouge">count</code> argument. <code class="highlighter-rouge">collaspe</code> control wether or not you want a tibble back (default is FALSE).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">proust_random</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"M. de Norpois sourit avec un l√©ger clignement d'≈ìil, comme s'il s'agissait d'une concupiscence si naturelle qu'on ne pouvait en vouloir √† celui qui l'√©prouvait, presque d'un commencement de roman qu'il √©tait pr√™t √† absoudre, voire √† encourager, avec une indulgence perverse √† la Voisenon ou √† la Cr√©billon fils. ‚Äî Bien des mains de jeunes femmes seraient incapables de faire ce que j'ai vu l√†, dit le prince en montrant les aquarelles commenc√©es de Mme de Villeparisis."</span><span class="w">

</span><span class="n">proust_random</span><span class="p">(</span><span class="m">2</span><span class="p">)</span><span class="w">

</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"\" Et elle, quand ce m√™me soir elle avait regard√© autour d'elle : \" Dire que je ne verrai plus cette chambre, ces livres, ce pianola, toute cette maison, je ne peux pas le croire, et pourtant c'est vrai. J'ai √† causer avec lui \", ajouta-t-elle en me montrant d'un air soumis."</span><span class="w">

</span><span class="n">proust_random</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">

</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"D'autre part, les gens qui rient si fort de ce qu'ils disent, et qui n'est pas dr√¥le, nous dispensent par l√†, en prenant √† leur charge l'hilarit√©, d'y participer. ‚Äî D'autres assurent qu'il est froiss√© que je ne l'invite pas. C'est de grand c≈ìur."</span><span class="w">

</span><span class="n">proust_random</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"√Ä vrai dire, cette erreur des parents de M. Nous marcherons jusqu'√† ce que j'aie trouv√© un fiacre qui me convienne. ‚Äî Vous vouliez me parler de quelque chose, Monsieur ? ‚Äî Ah ! J'en eus presque le pressentiment en la voyant se h√¢ter d'employer, en parlant, des images si √©crites et qui me semblaient r√©serv√©es pour un autre usage plus sacr√© et que j'ignorais encore. Cela me fait grand plaisir. dis-je √† Andr√©e. ‚Äî Oh ! Or, bien qu'il ne f√ªt pas tourn√© de mon c√¥t√©, j'√©tais persuad√© qu'il m'avait vu ; tandis qu'il d√©bitait quelque histoire √† Mme Swann dont flottait jusque sur un genou du baron le magnifique manteau couleur pens√©e, les yeux errants de M. de Charlus, pareils √† ceux d'un marchand en plein vent qui craint l'arriv√©e de la Rousse, avaient certainement explor√© chaque partie du salon et d√©couvert toutes les personnes qui s'y trouvaient. Mais aussi j'avais vu que ces cellules morales qui composent un √™tre sont plus durables que lui. Je le sais par quelqu'un qui les a vues et qui m'a dit : \" Vous vous trouveriez mal si vous voyiez cela. Le grand plaisir d'√™tre servi par des √™tres rachitiques, portant binocle, dont le cas d'exemption se lit sur le visage ! Lucienne et Germaine sont dans le wagon et il y a justement encore de la place ; viens, on ira ensemble au skating \", et s'appr√™taient √† lui pr√©senter deux \" calicots \", leurs amants, qui les accompagnaient, quand, devant l'air l√©g√®rement g√™n√© de Rachel, elles lev√®rent curieusement les yeux un peu plus loin, nous aper√ßurent et s'excusant lui dirent adieu en recevant d'elle un adieu aussi, un peu embarrass√© mais amical."</span><span class="w">

</span></code></pre></div></div>

<h3 id="proust_stopwords"><code class="highlighter-rouge">proust_stopwords()</code></h3>

<p>This function returns you a list of stopwords:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">proust_stopwords</span><span class="p">()</span><span class="w">
</span><span class="c1"># A tibble: 783 x 1</span><span class="w">
        </span><span class="n">words</span><span class="w">
 </span><span class="o">*</span><span class="w">     </span><span class="o">&lt;</span><span class="n">fctr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">          </span><span class="n">a</span><span class="w">
 </span><span class="m">2</span><span class="w">      </span><span class="n">abord</span><span class="w">
 </span><span class="m">3</span><span class="w"> </span><span class="n">absolument</span><span class="w">
 </span><span class="m">4</span><span class="w">       </span><span class="n">afin</span><span class="w">
 </span><span class="m">5</span><span class="w">         </span><span class="n">ah</span><span class="w">
 </span><span class="m">6</span><span class="w">         </span><span class="n">ai</span><span class="w">
 </span><span class="m">7</span><span class="w">        </span><span class="n">aie</span><span class="w">
 </span><span class="m">8</span><span class="w">      </span><span class="n">aient</span><span class="w">
 </span><span class="m">9</span><span class="w">       </span><span class="n">aies</span><span class="w">
</span><span class="m">10</span><span class="w">   </span><span class="n">ailleurs</span><span class="w">
</span><span class="c1"># ... with 773 more rows</span><span class="w">
</span></code></pre></div></div>

<h3 id="proust_sentiments"><code class="highlighter-rouge">proust_sentiments()</code></h3>

<p>Sentiment lexicon is launched with:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">proust_sentiments</span><span class="p">()</span><span class="w">
</span><span class="c1"># A tibble: 14,127 x 2</span><span class="w">
              </span><span class="n">word</span><span class="w"> </span><span class="n">polarity</span><span class="w">
 </span><span class="o">*</span><span class="w">           </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">    </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w"> </span><span class="err">√†</span><span class="w"> </span><span class="n">ce</span><span class="w"> </span><span class="n">endroit</span><span class="w"> </span><span class="n">l</span><span class="err">√†</span><span class="w"> </span><span class="n">positive</span><span class="w">
 </span><span class="m">2</span><span class="w">       </span><span class="err">√†</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="n">h</span><span class="err">√¢</span><span class="n">te</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">3</span><span class="w">          </span><span class="err">√†</span><span class="w"> </span><span class="n">part</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">4</span><span class="w">           </span><span class="err">√†</span><span class="w"> </span><span class="n">pic</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">5</span><span class="w">      </span><span class="err">√†</span><span class="w"> </span><span class="n">rallonge</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">6</span><span class="w">      </span><span class="n">abasourdir</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">7</span><span class="w">        </span><span class="n">ablation</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">8</span><span class="w">      </span><span class="n">abominable</span><span class="w"> </span><span class="n">negative</span><span class="w">
 </span><span class="m">9</span><span class="w">          </span><span class="n">abrupt</span><span class="w"> </span><span class="n">negative</span><span class="w">
</span><span class="m">10</span><span class="w">          </span><span class="n">absent</span><span class="w"> </span><span class="n">negative</span><span class="w">
</span><span class="c1"># ... with 14,117 more rows</span><span class="w">
</span></code></pre></div></div>

<p>You can chose between polarity (positive or negative, which is the default behavior), or a score on six sentiments (joy, fear, sadness, anger, surprise, disgust) with <code class="highlighter-rouge">type = "score"</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># A tibble: 11,530 x 3</span><span class="w">
          </span><span class="n">word</span><span class="w"> </span><span class="n">sentiment</span><span class="w"> </span><span class="n">score</span><span class="w">
 </span><span class="o">*</span><span class="w">       </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">     </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w"> </span><span class="n">abaissement</span><span class="w">   </span><span class="n">sadness</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">2</span><span class="w">    </span><span class="n">abaisser</span><span class="w">   </span><span class="n">sadness</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">3</span><span class="w">     </span><span class="n">abandon</span><span class="w">      </span><span class="n">fear</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">4</span><span class="w">     </span><span class="n">abandon</span><span class="w">   </span><span class="n">sadness</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">5</span><span class="w">     </span><span class="n">abandon</span><span class="w">     </span><span class="n">anger</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">6</span><span class="w">     </span><span class="n">abandon</span><span class="w">  </span><span class="n">surprise</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">7</span><span class="w">  </span><span class="n">abandonner</span><span class="w">      </span><span class="n">fear</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">8</span><span class="w">  </span><span class="n">abandonner</span><span class="w">   </span><span class="n">sadness</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">9</span><span class="w">  </span><span class="n">abandonner</span><span class="w">     </span><span class="n">anger</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="m">10</span><span class="w">  </span><span class="n">abandonner</span><span class="w">   </span><span class="n">disgust</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="c1"># ... with 11,520 more rows</span><span class="w">
</span></code></pre></div></div>

<h2 id="pr_-functions"><code class="highlighter-rouge">pr_*()</code> functions</h2>

<p>Please bear in mind that all these functions are designed to work with a data.frame. Here‚Äôs an example with a book downloaded from the gutenberg project with {gutenbergr}</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>library(dplyr)
library(gutenbergr)
condillac &lt;- gutenberg_download(gutenberg_id = "55483")
</code></pre></div></div>

<h3 id="pr_detect_days"><code class="highlighter-rouge">pr_detect_days()</code></h3>

<p>Detects the days from a data.frame (in French).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pr_detect_days</span><span class="p">(</span><span class="n">condillac</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">n_days</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="c1"># A tibble: 3 x 4</span><span class="w">
  </span><span class="n">gutenberg_id</span><span class="w">                                                                     </span><span class="n">text</span><span class="w">      </span><span class="n">days</span><span class="w">
         </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">                                                                    </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">    </span><span class="o">&lt;</span><span class="n">list</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">        </span><span class="m">55483</span><span class="w"> </span><span class="n">jeudi</span><span class="w"> </span><span class="m">27</span><span class="w"> </span><span class="n">d</span><span class="err">√©</span><span class="n">cembre</span><span class="w"> </span><span class="m">1768</span><span class="n">.</span><span class="w"> </span><span class="n">Mais</span><span class="w"> </span><span class="n">il</span><span class="w"> </span><span class="n">n</span><span class="s1">'assistait gu√®re aux s√©ances et prenait &lt;chr [1]&gt;
2        55483    chapelle du ch√¢teau, il faisait c√©l√©brer l'</span><span class="n">office</span><span class="w"> </span><span class="n">divin</span><span class="w"> </span><span class="n">les</span><span class="w"> </span><span class="n">dimanches</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
</span><span class="m">3</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="err">¬´</span><span class="n">L</span><span class="s1">'abb√© de Condillac partira lundi, √©crivait √âlisabeth √† l'</span><span class="n">Infant</span><span class="p">,</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
</span><span class="c1"># ... with 1 more variables: n_days &lt;int&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="pr_detect_months"><code class="highlighter-rouge">pr_detect_months()</code></h3>

<p>Detects the months from a data.frame (in French).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pr_detect_months</span><span class="p">(</span><span class="n">condillac</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">n_months</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="c1"># A tibble: 57 x 4</span><span class="w">
   </span><span class="n">gutenberg_id</span><span class="w">                                                                     </span><span class="n">text</span><span class="w">    </span><span class="n">months</span><span class="w">
          </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">                                                                    </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">    </span><span class="o">&lt;</span><span class="n">list</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">        </span><span class="m">55483</span><span class="w">                                  </span><span class="err">_</span><span class="n">morte</span><span class="w"> </span><span class="err">√†</span><span class="w"> </span><span class="n">Puchesse</span><span class="p">,</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="m">30</span><span class="w"> </span><span class="n">octobre</span><span class="w"> </span><span class="m">1896</span><span class="n">._</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">2</span><span class="w">        </span><span class="m">55483</span><span class="w">      </span><span class="n">juillet</span><span class="w"> </span><span class="m">1701</span><span class="p">;</span><span class="w"> </span><span class="n">ce</span><span class="w"> </span><span class="n">sont</span><span class="w"> </span><span class="n">Gabriel</span><span class="w"> </span><span class="n">Bonnot</span><span class="p">,</span><span class="w"> </span><span class="n">capitaine</span><span class="w"> </span><span class="n">du</span><span class="w"> </span><span class="n">ch</span><span class="err">√¢</span><span class="n">teau</span><span class="w"> </span><span class="n">et</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="n">la</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">3</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">1680</span><span class="n">.</span><span class="w"> </span><span class="n">Il</span><span class="w"> </span><span class="n">acquit</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="m">28</span><span class="w"> </span><span class="n">septembre</span><span class="w"> </span><span class="m">1720</span><span class="p">,</span><span class="w"> </span><span class="n">pour</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="n">prix</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="m">120</span><span class="w"> </span><span class="m">000</span><span class="w"> </span><span class="n">livres</span><span class="p">,</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">4</span><span class="w">        </span><span class="m">55483</span><span class="w"> </span><span class="n">septembre</span><span class="w"> </span><span class="m">1714</span><span class="n">.</span><span class="w"> </span><span class="n">Son</span><span class="w"> </span><span class="n">enfance</span><span class="w"> </span><span class="n">fut</span><span class="w"> </span><span class="n">tr</span><span class="err">√®</span><span class="n">s</span><span class="w"> </span><span class="n">maladive.</span><span class="w"> </span><span class="n">Il</span><span class="w"> </span><span class="n">avait</span><span class="w"> </span><span class="n">atteint</span><span class="w"> </span><span class="n">l</span><span class="s1">'√¢ge de &lt;chr [1]&gt;
 5        55483          de Rousseau, l'</span><span class="n">une</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="n">mars</span><span class="w"> </span><span class="n">ou</span><span class="w"> </span><span class="n">avril</span><span class="w"> </span><span class="m">1740</span><span class="w"> </span><span class="err">√†</span><span class="w"> </span><span class="n">M.</span><span class="w"> </span><span class="n">d</span><span class="s1">'Eybens, l'</span><span class="n">autre</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">6</span><span class="w">        </span><span class="m">55483</span><span class="w">                  </span><span class="n">du</span><span class="w"> </span><span class="m">1</span><span class="n">er</span><span class="w"> </span><span class="n">mai</span><span class="w"> </span><span class="m">1740</span><span class="w"> </span><span class="err">√†</span><span class="w"> </span><span class="n">Mme</span><span class="w"> </span><span class="n">la</span><span class="w"> </span><span class="n">baronne</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="n">Warens</span><span class="p">,</span><span class="w"> </span><span class="n">donnent</span><span class="w"> </span><span class="n">ses</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">7</span><span class="w">        </span><span class="m">55483</span><span class="w">  </span><span class="n">Paris</span><span class="w"> </span><span class="n">en</span><span class="w"> </span><span class="n">janvier</span><span class="w"> </span><span class="m">1767</span><span class="n">.</span><span class="w"> </span><span class="n">L</span><span class="s1">'ann√©e suivante, l'</span><span class="n">abb</span><span class="err">√©</span><span class="w"> </span><span class="n">d</span><span class="s1">'Olivet √©tant mort, il &lt;chr [1]&gt;
 8        55483 jeudi 27 d√©cembre 1768. Mais il n'</span><span class="n">assistait</span><span class="w"> </span><span class="n">gu</span><span class="err">√®</span><span class="n">re</span><span class="w"> </span><span class="n">aux</span><span class="w"> </span><span class="n">s</span><span class="err">√©</span><span class="n">ances</span><span class="w"> </span><span class="n">et</span><span class="w"> </span><span class="n">prenait</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">9</span><span class="w">        </span><span class="m">55483</span><span class="w">   </span><span class="m">1771</span><span class="n">.</span><span class="w"> </span><span class="n">Le</span><span class="w"> </span><span class="m">28</span><span class="w"> </span><span class="n">avril</span><span class="w"> </span><span class="m">1773</span><span class="p">,</span><span class="w"> </span><span class="n">l</span><span class="s1">'abb√© de Condillac lui fit don d'</span><span class="n">une</span><span class="w"> </span><span class="n">somme</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
</span><span class="m">10</span><span class="w">        </span><span class="m">55483</span><span class="w">        </span><span class="n">le</span><span class="w"> </span><span class="m">31</span><span class="w"> </span><span class="n">juillet</span><span class="w"> </span><span class="n">et</span><span class="w"> </span><span class="n">se</span><span class="w"> </span><span class="n">voyant</span><span class="w"> </span><span class="n">perdu</span><span class="p">,</span><span class="w"> </span><span class="n">il</span><span class="w"> </span><span class="n">demanda</span><span class="w"> </span><span class="n">un</span><span class="w"> </span><span class="n">pr</span><span class="err">√™</span><span class="n">tre.</span><span class="w"> </span><span class="n">Ce</span><span class="w"> </span><span class="n">fut</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="o">&lt;</span><span class="n">chr</span><span class="w"> </span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">&gt;</span><span class="w">
</span><span class="c1"># ... with 47 more rows, and 1 more variables: n_months &lt;int&gt;</span><span class="w">
</span></code></pre></div></div>

<h3 id="pr_detect_pro"><code class="highlighter-rouge">pr_detect_pro()</code></h3>

<p>Detects the pronouns from a data.frame (in French). The shortcuts in the pronoun col stand for :</p>
<ul>
  <li>pps: first person singular (premi√®re personne du singulier)</li>
  <li>dps: second person singular (deuxi√®me personne du singulier)</li>
  <li>tps: third person singular (troisi√®me personne du singulier)</li>
  <li>ppp: first person plural (premi√®re personne du pluriel)</li>
  <li>dpp: second person singular (deuxi√®me personne du pluriel)</li>
  <li>tpp: third person singular (troisi√®me personne du pluriel)</li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">condillac</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">line</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">row_number</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">pr_detect_pro</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">line</span><span class="p">)</span><span class="w">
  
</span><span class="c1"># A tibble: 2,248 x 4</span><span class="w">
   </span><span class="n">gutenberg_id</span><span class="w">  </span><span class="n">line</span><span class="w"> </span><span class="n">pronoun</span><span class="w"> </span><span class="n">count</span><span class="w">
          </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">46</span><span class="w">     </span><span class="n">pps</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">2</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">61</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">3</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">62</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">4</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">63</span><span class="w">     </span><span class="n">ppp</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">5</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">64</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">2</span><span class="w">
 </span><span class="m">6</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">65</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">2</span><span class="w">
 </span><span class="m">7</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">66</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">8</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">70</span><span class="w">     </span><span class="n">pps</span><span class="w">     </span><span class="m">1</span><span class="w">
 </span><span class="m">9</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">72</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="m">10</span><span class="w">        </span><span class="m">55483</span><span class="w">    </span><span class="m">75</span><span class="w">     </span><span class="n">tps</span><span class="w">     </span><span class="m">2</span><span class="w">
</span><span class="c1"># ... with 2,238 more rows</span><span class="w">
</span></code></pre></div></div>

<h3 id="pr_normalize_punc"><code class="highlighter-rouge">pr_normalize_punc()</code></h3>

<p>French has a weird punctuation use. For example, quotes are <code class="highlighter-rouge">¬´</code> and <code class="highlighter-rouge">¬ª</code>, instead of <code class="highlighter-rouge">"</code>. Other strange characters may include <code class="highlighter-rouge">’ö</code>,<code class="highlighter-rouge">Ô∏ê</code> or <code class="highlighter-rouge">‚Äô</code> for apostrophe. This function removes most of the punctuation idiosyncracy you can find in a french text.</p>

<p>Why bother? Some text-mining tools perform a split with <code class="highlighter-rouge">'</code>, not with <code class="highlighter-rouge">’ö</code>, a behavior which can lead to some error when tokenizing a text.</p>

<h3 id="pr_stem"><code class="highlighter-rouge">pr_stem()</code></h3>

<p>Turn your text into stems. This is an implementation of the {SnowballC} package in {proustr}.Please keep in mind that punctuation and capital letters are removed by this function.</p>

<p>You can stem a data.frame with a column containing sentences with <code class="highlighter-rouge">pr_stem_sentences</code> :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pr_stem_sentences</span><span class="p">(</span><span class="n">condillac</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">nchar</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="m">0</span><span class="p">)</span><span class="w">
</span><span class="c1"># A tibble: 3,767 x 2</span><span class="w">
   </span><span class="n">gutenberg_id</span><span class="w">                                                        </span><span class="n">text</span><span class="w">
          </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">                                                       </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">        </span><span class="m">55483</span><span class="w">      </span><span class="n">not</span><span class="w"> </span><span class="n">sur</span><span class="w"> </span><span class="n">la</span><span class="w"> </span><span class="n">transcript</span><span class="w"> </span><span class="n">le</span><span class="w"> </span><span class="n">erreur</span><span class="w"> </span><span class="n">clair</span><span class="w"> </span><span class="n">introduit</span><span class="w"> </span><span class="n">par</span><span class="w"> </span><span class="n">le</span><span class="w">
 </span><span class="m">2</span><span class="w">        </span><span class="m">55483</span><span class="w">                                    </span><span class="n">typograph</span><span class="w"> </span><span class="n">ont</span><span class="w"> </span><span class="err">√©</span><span class="n">t</span><span class="err">√©</span><span class="w"> </span><span class="n">corrig</span><span class="w">
 </span><span class="m">3</span><span class="w">        </span><span class="m">55483</span><span class="w"> </span><span class="n">l</span><span class="s1">'orthograph d'</span><span class="n">origin</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="err">√©</span><span class="n">t</span><span class="err">√©</span><span class="w"> </span><span class="n">conserv</span><span class="w"> </span><span class="n">et</span><span class="w"> </span><span class="n">n</span><span class="err">'</span><span class="n">a</span><span class="w"> </span><span class="n">pas</span><span class="w"> </span><span class="err">√©</span><span class="n">t</span><span class="err">√©</span><span class="w"> </span><span class="n">harmonis</span><span class="w">
 </span><span class="m">4</span><span class="w">        </span><span class="m">55483</span><span class="w">                                                   </span><span class="n">condillac</span><span class="w">
 </span><span class="m">5</span><span class="w">        </span><span class="m">55483</span><span class="w">                                                     </span><span class="n">illustr</span><span class="w">
 </span><span class="m">6</span><span class="w">        </span><span class="m">55483</span><span class="w">                                                   </span><span class="n">condillac</span><span class="w">
 </span><span class="m">7</span><span class="w">        </span><span class="m">55483</span><span class="w">                                         </span><span class="err">_</span><span class="n">sa</span><span class="w"> </span><span class="n">vi</span><span class="w"> </span><span class="n">sa</span><span class="w"> </span><span class="n">philosoph</span><span class="w">
 </span><span class="m">8</span><span class="w">        </span><span class="m">55483</span><span class="w">                                              </span><span class="n">son</span><span class="w"> </span><span class="n">influence_</span><span class="w">
 </span><span class="m">9</span><span class="w">        </span><span class="m">55483</span><span class="w">                                                         </span><span class="n">par</span><span class="w">
</span><span class="m">10</span><span class="w">        </span><span class="m">55483</span><span class="w">                               </span><span class="n">le</span><span class="w"> </span><span class="n">comt</span><span class="w"> </span><span class="n">baguenault</span><span class="w"> </span><span class="n">de</span><span class="w"> </span><span class="n">puchess</span><span class="w">
</span><span class="c1"># ... with 3,757 more rows</span><span class="w">
</span></code></pre></div></div>

<p>You can also stem a data.frame containing a column of words with <code class="highlighter-rouge">pr_stem_words</code>.</p>

<h2 id="install-proustr">Install proustr</h2>

<p>Install this package directly in R :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"proustr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>From Github :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ColinFay/proustr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="contact">Contact</h3>

<p>Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a>!</p>

<p>You want to contribute ? Open a <a href="https://github.com/ColinFay/proustr/pulls">PR</a> :) If you encounter a bug or want to suggest an enhancement, please <a href="https://github.com/ColinFay/proustr/issues">open an issue</a>.</p>
 </content>
 </item>
 
 <item>
  <title>[New Package] {tidystringdist}</title>
  <description></description>
  <link>/tidystringdist/</link>
  <guid isPermaLink="true">http://localhost:4000/tidystringdist/</guid>
  <pubDate>2017-09-11 00:00:00 +0200</pubDate>
  <content><p>Compute string distance the tidy way. A package built on top of the {stringdist} package.</p>

<h2 id="why-tidystringdist">Why tidystringdist</h2>

<p>I‚Äôve lately been playing with string distance for my blog post about <a href="http://colinfay.me/game-of-thrones-characters-r/">Game of Thrones Characters</a>. The {stringdist} package is dope, yet its I/O do not follow the <a href="http://vita.had.co.nz/papers/tidy-data.html">tidy data</a> philosophy. Something that demands some tweaking when you need to work with tidyverse tools. That‚Äôs one of the motives behind {tidystringdist}.</p>

<h2 id="install-tidystringdist">Install tidystringdist</h2>

<p>For now, the package is only on GitHub, but I plan on releasing it to the CRAN soon. As this blogpost might not be updated in time, you should check the GitHub page for more info about the CRAN release.</p>

<p>Install from GitHub</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ColinFay/tidystringdist"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="tidystringdist-basic-workflow">tidystringdist basic workflow</h2>

<p>So, how does this work ?</p>

<h3 id="tidycomb">tidycomb</h3>

<p>First, you need to create a tibble with the combinations of words you want to compare. You can do this with the <code class="highlighter-rouge">tidy_comb</code> and <code class="highlighter-rouge">tidy_comb_all</code> functions.</p>

<ul>
  <li>The first takes a base word and combine it with each elements of a list or a column of a data.frame.</li>
  <li>The 2nd combines all the possible couples from a list or a column.</li>
</ul>

<blockquote>
  <p>If you already have a data.frame with two columns with strings to compare, you can skip this part.</p>
</blockquote>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidystringdist</span><span class="p">)</span><span class="w">

</span><span class="c1"># All the possible combinations for A, B and C.</span><span class="w">

</span><span class="n">tidy_comb_all</span><span class="p">(</span><span class="nb">LETTERS</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">])</span><span class="w">

</span><span class="c1">#&gt; # A tibble: 3 x 2</span><span class="w">
</span><span class="c1">#&gt;       V1     V2</span><span class="w">
</span><span class="c1">#&gt; * &lt;fctr&gt; &lt;fctr&gt;</span><span class="w">
</span><span class="c1">#&gt; 1      A      B</span><span class="w">
</span><span class="c1">#&gt; 2      A      C</span><span class="w">
</span><span class="c1">#&gt; 3      B      C</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Combine "Paris" (the base) with the three first elements of `state.name`. </span><span class="w">

</span><span class="n">tidy_comb</span><span class="p">(</span><span class="s2">"Paris"</span><span class="p">,</span><span class="w"> </span><span class="n">state.name</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">])</span><span class="w">

</span><span class="c1">#&gt; # A tibble: 3 x 2</span><span class="w">
</span><span class="c1">#&gt;        V1     V2</span><span class="w">
</span><span class="c1">#&gt; *  &lt;fctr&gt; &lt;fctr&gt;</span><span class="w">
</span><span class="c1">#&gt; 1 Alabama  Paris</span><span class="w">
</span><span class="c1">#&gt; 2  Alaska  Paris</span><span class="w">
</span><span class="c1">#&gt; 3 Arizona  Paris</span><span class="w">
</span></code></pre></div></div>

<h3 id="tidy_string_dist">tidy_string_dist</h3>

<p>Once you‚Äôve got this data.frame, you can use <code class="highlighter-rouge">tidy_string_dist</code> to compute string distance. This function takes a data.frame, the two columns containing the strings, and a stringdist method provided by the {stringdist} package.</p>

<p>Note that if you‚Äôve used the <code class="highlighter-rouge">tidy_comb</code> function to create you data.frame, you won‚Äôt need to set the column names.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="n">data</span><span class="p">(</span><span class="n">starwars</span><span class="p">)</span><span class="w">
</span><span class="n">tidy_comb_sw</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tidy_comb_all</span><span class="p">(</span><span class="n">starwars</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w">

</span><span class="n">tidy_stringdist</span><span class="p">(</span><span class="n">tidy_comb_sw</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"jw"</span><span class="p">)</span><span class="w">

</span><span class="c1">#&gt; # A tibble: 3,741 x 3</span><span class="w">
</span><span class="c1">#&gt;                V1                 V2 string_dist</span><span class="w">
</span><span class="c1">#&gt;  *         &lt;fctr&gt;             &lt;fctr&gt;       &lt;dbl&gt;</span><span class="w">
</span><span class="c1">#&gt;  1 Luke Skywalker              C-3PO   1.0000000</span><span class="w">
</span><span class="c1">#&gt;  2 Luke Skywalker              R2-D2   1.0000000</span><span class="w">
</span><span class="c1">#&gt;  3 Luke Skywalker        Darth Vader   0.5752165</span><span class="w">
</span><span class="c1">#&gt;  4 Luke Skywalker        Leia Organa   0.5335498</span><span class="w">
</span><span class="c1">#&gt;  5 Luke Skywalker          Owen Lars   0.4624339</span><span class="w">
</span><span class="c1">#&gt;  6 Luke Skywalker Beru Whitesun lars   0.4656085</span><span class="w">
</span><span class="c1">#&gt;  7 Luke Skywalker              R5-D4   1.0000000</span><span class="w">
</span><span class="c1">#&gt;  8 Luke Skywalker  Biggs Darklighter   0.5728291</span><span class="w">
</span><span class="c1">#&gt;  9 Luke Skywalker     Obi-Wan Kenobi   0.6349206</span><span class="w">
</span><span class="c1">#&gt; 10 Luke Skywalker   Anakin Skywalker   0.2816558</span><span class="w">
</span><span class="c1">#&gt; # ... with 3,731 more rows</span><span class="w">
</span></code></pre></div></div>

<p>The goal is to provide a convenient interface to work with other tools from the tidyverse.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tidy_stringdist</span><span class="p">(</span><span class="n">tidy_comb_sw</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="w"> </span><span class="s2">"lv"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">string_dist</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.80</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">string_dist</span><span class="p">))</span><span class="w">
  
</span><span class="c1">#&gt; # A tibble: 3,741 x 3</span><span class="w">
</span><span class="c1">#&gt;                       V1                    V2 string_dist</span><span class="w">
</span><span class="c1">#&gt;                   &lt;fctr&gt;                &lt;fctr&gt;       &lt;dbl&gt;</span><span class="w">
</span><span class="c1">#&gt;  1                 C-3PO Jabba Desilijic Tiure          21</span><span class="w">
</span><span class="c1">#&gt;  2                 C-3PO Wicket Systri Warrick          21</span><span class="w">
</span><span class="c1">#&gt;  3                 R2-D2 Wicket Systri Warrick          21</span><span class="w">
</span><span class="c1">#&gt;  4                 R5-D4 Wicket Systri Warrick          21</span><span class="w">
</span><span class="c1">#&gt;  5 Jabba Desilijic Tiure                 IG-88          21</span><span class="w">
</span><span class="c1">#&gt;  6 Jabba Desilijic Tiure                 Cord√©          21</span><span class="w">
</span><span class="c1">#&gt;  7 Jabba Desilijic Tiure                R4-P17          21</span><span class="w">
</span><span class="c1">#&gt;  8 Jabba Desilijic Tiure                   BB8          21</span><span class="w">
</span><span class="c1">#&gt;  9                 IG-88 Wicket Systri Warrick          21</span><span class="w">
</span><span class="c1">#&gt; 10 Wicket Systri Warrick                R4-P17          21</span><span class="w">
</span><span class="c1">#&gt; # ... with 3,731 more rows</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">starwars</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">species</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Droid"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tidy_comb_all</span><span class="p">(</span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tidy_stringdist</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; # A tibble: 10 x 3</span><span class="w">
</span><span class="c1">#&gt;        V1     V2 string_dist</span><span class="w">
</span><span class="c1">#&gt;  * &lt;fctr&gt; &lt;fctr&gt;       &lt;dbl&gt;</span><span class="w">
</span><span class="c1">#&gt;  1  C-3PO  R2-D2           5</span><span class="w">
</span><span class="c1">#&gt;  2  C-3PO  R5-D4           5</span><span class="w">
</span><span class="c1">#&gt;  3  C-3PO  IG-88           5</span><span class="w">
</span><span class="c1">#&gt;  4  C-3PO    BB8           5</span><span class="w">
</span><span class="c1">#&gt;  5  R2-D2  R5-D4           2</span><span class="w">
</span><span class="c1">#&gt;  6  R2-D2  IG-88           4</span><span class="w">
</span><span class="c1">#&gt;  7  R2-D2    BB8           5</span><span class="w">
</span><span class="c1">#&gt;  8  R5-D4  IG-88           4</span><span class="w">
</span><span class="c1">#&gt;  9  R5-D4    BB8           5</span><span class="w">
</span><span class="c1">#&gt; 10  IG-88    BB8           4</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">starwars</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tidy_comb_all</span><span class="p">(</span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tidy_stringdist</span><span class="p">(</span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"jw"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">string_dist</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">
  
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/09/tidystringdist.png" alt="" /></p>

<h3 id="contact">Contact</h3>

<p>I‚Äôll be glad to have some feedback about this package. Feel free to reach me out on <a href="http://www.twitter.com/_colinfay">Twitter</a>! You can also send some PR or open an issue on the <a href="https://github.com/ColinFay/tidystringdist">GitHub repo</a>.</p>

<h3 id="to-do">To do</h3>

<p>For an up-to-date to-do list about this package, please read the issue section on <a href="https://github.com/ColinFay/tidystringdist/issues">GitHub</a>!</p>
 </content>
 </item>
 
 <item>
  <title>R6 and parent exposure</title>
  <description></description>
  <link>/r6-parent-exposure/</link>
  <guid isPermaLink="true">http://localhost:4000/r6-parent-exposure/</guid>
  <pubDate>2017-08-29 00:00:00 +0200</pubDate>
  <content><p>About R6 and parent exposure.</p>

<!--more-->

<h2 id="default-inheritance">Default inheritance</h2>

<p>By default, R6 objects can only herit from their direct parent. But you may need to create an inheritance which goes along the family tree.</p>

<p>For example, we need to create a grand-child class <code class="highlighter-rouge">PersonGrandChild</code>, which inherits from a child class <code class="highlighter-rouge">PersonChild</code>, which inherits from the parent <code class="highlighter-rouge">Person</code>. The idea is to have a grand-child class with predifined and fixed <code class="highlighter-rouge">first_name</code>, <code class="highlighter-rouge">last_name</code>, and use with <code class="highlighter-rouge">initialize</code> the method from its grand-parent. The naive approach would be to use <code class="highlighter-rouge">$super$super</code></p>

<pre><code class="language-{r}">library(R6)
Person &lt;- R6Class("Person", 
                    public = list(
                      first_name = NULL, 
                      last_name = NULL, 
                      initialize = function(first, last){
                        self$first_name &lt;- first
                        self$last_name &lt;- last
                      }
                    )
)
PersonChild &lt;- R6Class("PersonChild", 
                       inherit = Person)
PersonGrandChild &lt;- R6Class("PersonGrandChild",
                            inherit = PersonChild, 
                            public = list(
                              initialize = function(){
                                super$super$initialize(first_name = "Colin", last_name = "Fay", age = 37, job = "R developper")
                              }  
                            )
)
try(PersonGrandChild$new())
Error in .subset2(public_bind_env, "initialize")(...) : 
  tentative d'appliquer un objet qui n'est pas une fonction
</code></pre>

<p>But that throws an error, because you can‚Äôt use <code class="highlighter-rouge">$super$super</code>: an R6 object doesn‚Äôt, by defaut, expose his parents to his children. A way to get around this feature is to use active binding. For that, you can create a method <code class="highlighter-rouge">super_</code> inside a class, which simply returns <code class="highlighter-rouge">super</code>. Then, use <code class="highlighter-rouge">$super$super_</code> inside the child class :</p>

<pre><code class="language-{r}">PersonChild$set("active", "super_", function() super)
PersonGrandChildExposed &lt;- R6Class("PersonGrandChildExposed",
                                   inherit = PersonChild, 
                                   public = list(
                                     initialize = function(){
                                       super$super_$initialize(first = "Colin", last = "Fay")
                                     }  
                                   )
)

PersonGrandChildExposed$new()
&lt;PersonGrandChildExposed&gt;
  Inherits from: &lt;PersonChild&gt;
  Public:
    clone: function (deep = FALSE) 
    first_name: Colin
    initialize: function () 
    last_name: Fay
    super_: active binding
</code></pre>

<p>Works like a charm ;)</p>

 </content>
 </item>
 
 <item>
  <title>Why Can't I Remember Game of Thrones Characters? An Analysis in R</title>
  <description></description>
  <link>/game-of-thrones-characters-r/</link>
  <guid isPermaLink="true">http://localhost:4000/game-of-thrones-characters-r/</guid>
  <pubDate>2017-08-23 00:00:00 +0200</pubDate>
  <content><p>A quick exploration of Game of Thrones characters names, and the beginning of an answer to the question ‚ÄúWhy on earth can‚Äôt I remember them all?‚Äù</p>

<!--more-->

<h2 id="first-get-the-data">First, get the data</h2>

<p>For this exploration, we first need to get the names of all characters from the show. Quick and easy thanks to <a href="https://www.betaseries.com/api/">the beta serie API</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">jsonlite</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">
</span><span class="c1"># Add your API key here</span><span class="w">
</span><span class="n">api_key</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"XXXX"</span><span class="w">
</span></code></pre></div></div>

<p>Let‚Äôs build the API request.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># You need id of the serie to request more info</span><span class="w">

</span><span class="n">get_beta_serie</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">show</span><span class="p">,</span><span class="w"> </span><span class="n">api_key</span><span class="p">){</span><span class="w">
  </span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://api.betaseries.com/shows/search?title="</span><span class="p">,</span><span class="n">show</span><span class="p">),</span><span class="w">
      </span><span class="n">accept_json</span><span class="p">(),</span><span class="w"> 
      </span><span class="n">add_headers</span><span class="p">(</span><span class="n">.headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"X-BetaSeries-Key"</span><span class="o">=</span><span class="w"> </span><span class="n">api_key</span><span class="p">,</span><span class="w"> 
                               </span><span class="s2">"Authorization"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Bearer c3aa0a5ff128"</span><span class="p">)))</span><span class="w">
  </span><span class="n">res</span><span class="o">$</span><span class="n">content</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">rawToChar</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">fromJSON</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">.</span><span class="o">$</span><span class="n">shows</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># Get the id </span><span class="w">

</span><span class="n">get_beta_id</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">title</span><span class="p">){</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">id</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">title</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">title</span><span class="p">)])</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">GoT_id</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_beta_serie</span><span class="p">(</span><span class="n">show</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"game+of+thrones"</span><span class="p">,</span><span class="w"> </span><span class="n">api_key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_beta_id</span><span class="p">(</span><span class="s2">"Game of Thrones"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get characters </span><span class="w">

</span><span class="n">get_bet_char</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">id</span><span class="p">){</span><span class="w">
  </span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://api.betaseries.com/shows/characters?id="</span><span class="p">,</span><span class="n">id</span><span class="p">,</span><span class="s2">"&amp;="</span><span class="p">),</span><span class="w">
             </span><span class="n">accept_json</span><span class="p">(),</span><span class="w"> 
             </span><span class="n">add_headers</span><span class="p">(</span><span class="n">.headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"X-BetaSeries-Key"</span><span class="o">=</span><span class="w"> </span><span class="n">api_key</span><span class="p">,</span><span class="w"> 
                                      </span><span class="s2">"Authorization"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Bearer c3aa0a5ff128"</span><span class="p">)))</span><span class="w">
  </span><span class="n">res</span><span class="o">$</span><span class="n">content</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">rawToChar</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">fromJSON</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">.</span><span class="o">$</span><span class="n">characters</span><span class="w"> 
</span><span class="p">}</span><span class="w">

</span><span class="n">GoT_char</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_bet_char</span><span class="p">(</span><span class="n">GoT_id</span><span class="p">)</span><span class="w">
</span><span class="n">nrow</span><span class="p">(</span><span class="n">GoT_char</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">98</span><span class="w">
</span></code></pre></div></div>

<p>98 characters‚Ä¶ there‚Äôs 98 CHARACTERS!</p>

<h2 id="something-to-compare-with">Something to compare with</h2>

<h3 id="list-of-series">List of series</h3>

<p>OK, but before getting really crazy about 98 characters, let‚Äôs temperate a little: is this common? To answer that question, we need more DATA.</p>

<p><img src="http://awecomm.com/blog/wp-content/uploads/2015/10/hardware-data.jpg" alt="" /></p>

<p>Here, I just have to thank Betaseries again for their cool API :</p>
<ul>
  <li>which doesn‚Äôt limit the number of call you can make</li>
  <li>which can return a random serie from their list</li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Random serie</span><span class="w">
</span><span class="n">get_random_beta</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(){</span><span class="w">
    </span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"https://api.betaseries.com/shows/random?="</span><span class="p">,</span><span class="w">
      </span><span class="n">accept_json</span><span class="p">(),</span><span class="w"> 
      </span><span class="n">add_headers</span><span class="p">(</span><span class="n">.headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"X-BetaSeries-Key"</span><span class="o">=</span><span class="w"> </span><span class="n">api_key</span><span class="p">,</span><span class="w"> 
                               </span><span class="s2">"Authorization"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Bearer c3aa0a5ff128"</span><span class="p">)))</span><span class="w">
  </span><span class="n">res</span><span class="o">$</span><span class="n">content</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">rawToChar</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">fromJSON</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">.</span><span class="o">$</span><span class="n">shows</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">.</span><span class="o">$</span><span class="n">id</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">get_random_beta</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">5321</span><span class="w">

</span></code></pre></div></div>

<p>Cool. How about getting mooooooore data.</p>

<h3 id="get-1000-random-series-id-and-their-characters">Get 1000 random series id, and their characters</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 1000 random series</span><span class="w">
</span><span class="n">list_id_beta</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">replicate</span><span class="p">(</span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="n">get_random_beta</span><span class="p">())</span><span class="w">

</span><span class="c1"># How much unique series?</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">list_id_beta</span><span class="p">))</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">970</span><span class="w">
</span><span class="n">list_id_beta</span><span class="w"> </span><span class="o">%&lt;&gt;%</span><span class="w"> </span><span class="n">unique</span><span class="w">

</span><span class="c1"># Get characters for all series</span><span class="w">
</span><span class="n">random_char</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_df</span><span class="p">(</span><span class="n">.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">list_id_beta</span><span class="p">,</span><span class="w"> </span><span class="n">get_bet_char</span><span class="p">)</span><span class="w">

</span><span class="n">nrow</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">random_char</span><span class="p">))</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">3811</span><span class="w">
</span></code></pre></div></div>

<p>So, here are 3811 characters from 970 random series picked on the API. Let‚Äôs compare!</p>

<p><img src="https://media.giphy.com/media/3oge8jsFsuxymZ8hEY/giphy.gif" alt="" /></p>

<h3 id="are-there-too-many-characters-in-game-of-thrones">Are there too many characters in Game of Thrones?</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Make a full dataframe</span><span class="w">
</span><span class="n">random_char</span><span class="o">$</span><span class="n">show_name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Not_GoT"</span><span class="w">
</span><span class="n">GoT_char</span><span class="o">$</span><span class="n">show_name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"GoT"</span><span class="w">
</span><span class="n">full_char</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">random_char</span><span class="p">,</span><span class="w"> </span><span class="n">GoT_char</span><span class="p">)</span><span class="w">

</span><span class="c1"># Create a quick theme</span><span class="w">
</span><span class="n">custom_theme</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">theme_minimal</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">))</span><span class="w">

</span><span class="c1">#Visualise</span><span class="w">
</span><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">char_in_show</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">char_in_show</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">98</span><span class="p">),</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Number of characters in 970 random series \nand in Game of Thrones (red dot)"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" data gathered from BetaSeries API"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Number of characters in the show"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/chr_shows_game_of_thrones.png" alt="" /></p>

<p>OK‚Ä¶ So there‚Äôs definitely way more characters in Game of Thrones than in other shows ‚Äî the second most populated show has ‚Äúonly‚Äù 48 characters.</p>

<p>But, is there another answer to our original question? (‚ÄúWhy can‚Äôt I remember their names?‚Äù)</p>

<h2 id="whats-in-a-name">What‚Äôs in a name?</h2>

<h3 id="length">Length</h3>

<p>Let‚Äôs formulate some hypotheses. First: maybe their names are too long? I mean, ‚ÄúMelisandre of Asshai‚Äù is quite a long name, as is ‚ÄúXaro Xhoan Daxos‚Äù.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">,</span><span class="w"> </span><span class="n">show_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">char_name_length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nchar</span><span class="p">(</span><span class="n">name</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">char_name_length</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">show_name</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_freqpoly</span><span class="p">(</span><span class="n">bins</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scales</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Show"</span><span class="p">,</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"#973232"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#1E5B5B"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Length of characters names in 970 random series and in Game of Thrones"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" data gathered from BetaSeries API"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Length of character name in the show"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Show"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/length_char_name.png" alt="" /></p>

<p>Nop, that‚Äôs not it either. Let‚Äôs try something else.</p>

<h3 id="occurences-of-letters">Occurences of letters</h3>

<p>Are the letters similarly distributed in Game of Thrones and in the other shows?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">

</span><span class="c1">#Let's clean up a little bit</span><span class="w">

</span><span class="n">letter_strip</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">vec</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">tolower</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">tm</span><span class="o">::</span><span class="n">removePunctuation</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">tm</span><span class="o">::</span><span class="n">removeNumbers</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√†√§√¢√°"</span><span class="p">,</span><span class="w"> </span><span class="s2">"a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√©√®√´"</span><span class="p">,</span><span class="w"> </span><span class="s2">"e"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√Ø√≠"</span><span class="p">,</span><span class="w"> </span><span class="s2">"i"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"≈ç√¥√≥"</span><span class="p">,</span><span class="w"> </span><span class="s2">"o"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√º≈´"</span><span class="p">,</span><span class="w"> </span><span class="s2">"u"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_split</span><span class="p">(</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">unlist</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">iconv</span><span class="p">(</span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Latin1"</span><span class="p">,</span><span class="s2">"ASCII"</span><span class="p">,</span><span class="w"> </span><span class="n">sub</span><span class="w"> </span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">table</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">as.tibble</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># That removed 146 non ASCII letters</span><span class="w">

</span><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">,</span><span class="w"> </span><span class="n">show_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">table_letter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">letter_strip</span><span class="p">(</span><span class="n">name</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unnest</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">rename</span><span class="p">(</span><span class="n">letter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"."</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">letter</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
    </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Distribution of letters in the name of the characters in 970 random series and in Game of Thrones"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" data gathered from BetaSeries API"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Show"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">custom_theme</span><span class="w">
  
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/letter_distrib_game_of_thrones.png" alt="" /></p>

<p>Nop, still quite the same. Ok, maybe that‚Äôs because their names are composed of repeated letters (remember‚Ä¶ Xaro Xhoan Daxos)?</p>

<h3 id="repeated-letters">Repeated letters</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Diff letters function </span><span class="w">

</span><span class="n">diff_letters</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">word</span><span class="p">){</span><span class="w">
  </span><span class="n">li</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">word</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">tolower</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">tm</span><span class="o">::</span><span class="n">removePunctuation</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">tm</span><span class="o">::</span><span class="n">removeNumbers</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_split</span><span class="p">(</span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">unlist</span><span class="w">
  </span><span class="n">moy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">li</span><span class="p">))</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">li</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">moy</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># Here, a result of 1 means all letters are different. The closer the result get to zero, the more repeated they are. </span><span class="w">

</span><span class="n">diff_letters</span><span class="p">(</span><span class="s2">"Xaro Xhoan Daxos"</span><span class="p">)</span><span class="w"> 
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">0.5714286</span><span class="w">
</span><span class="n">diff_letters</span><span class="p">(</span><span class="s2">"Colin Fay"</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></code></pre></div></div>

<p>Cool. Let‚Äôs visualize that.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">diff_in_letters</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">diff_letters</span><span class="p">(</span><span class="n">name</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">diff_in_letters</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">show_name</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_freqpoly</span><span class="p">(</span><span class="n">bins</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scales</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Show"</span><span class="p">,</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"#973232"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#1E5B5B"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Letter difference in the names of characters in 970 random series and in Game of Thrones"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" data gathered from BetaSeries API"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Length of character name in the show"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">guide</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Show"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/length_char_name.png" alt="" /></p>

<p>Ok, nothing fancy here‚Ä¶ Now, let‚Äôs try some string dist approach.</p>

<h2 id="string-dist">String dist</h2>

<h3 id="chosing-a-string-distance-algorithm">Chosing a string distance algorithm</h3>

<p>My main point while watching GoT is that ‚Äúevery names sound the same‚Äù. Like, why on earth should you name your character ‚ÄúBran‚Äù and ‚ÄúBronn‚Äù, ‚ÄúTyron and Tywinn‚Äù, ‚ÄúTommen‚Äù and ‚ÄúTormund‚Äù‚Ä¶ and there is literally a ‚ÄúRobb‚Äù, a ‚ÄúRobert‚Äù and a ‚ÄúRobin‚Äù.</p>

<p>Can we see it with string distance? My first intuition is that string distances should be shorter in Game of Thrones than in other shows. Let‚Äôs try several methods to find out.</p>

<h3 id="levenshtein-distance">Levenshtein distance</h3>

<p>The Levenshtein distance counts the number of deletions, insertions and substitutions necessary to turn b into a. For example, <code class="highlighter-rouge">stringdist("Colin", "Colis", method = "lv")</code> returns 1.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">stringdist</span><span class="p">)</span><span class="w">

</span><span class="c1"># Just cleaning the names</span><span class="w">
</span><span class="n">name_strip</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">vec</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">tolower</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">tm</span><span class="o">::</span><span class="n">removePunctuation</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√©"</span><span class="p">,</span><span class="w"> </span><span class="s2">"e"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√†"</span><span class="p">,</span><span class="w"> </span><span class="s2">"a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"√©"</span><span class="p">,</span><span class="w"> </span><span class="s2">"e"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">string_dist_lv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">stringdistmatrix</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lv"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.vector</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name_strip</span><span class="p">(</span><span class="n">name</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">,</span><span class="w"> </span><span class="n">show_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">dist_name_length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">string_dist_lv</span><span class="p">(</span><span class="n">vec</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unnest</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span><span class="n">dist_name_length</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"String distance between the names of the characters \nin Game of Thrones and in 970 random series"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"computed using the Levenshtein distance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/lv_string_dist_game_of_thrones.png" alt="" /></p>

<p>OK, Levenshtein is not on my side.</p>

<h3 id="longest-common-substring">Longest common substring</h3>

<p>This method finds the longest string that can be obtained by pairing characters from a and b, by removing non common characters while keeping the order of characters intact. The result is the number of deletions made to obtain this string.</p>

<p>For example, <code class="highlighter-rouge">stringdist("Colin", "Colis", method = "lcs")</code> returns 2, because you need to remove the n and the s ‚Äî the longest common substring being ‚ÄúColi‚Äù. <code class="highlighter-rouge">stringdist("Brann", "Bron", method = "lcs")</code> returns 3, as you have to remove a, n and n. The lcs is ‚ÄúBrn‚Äù. The closer the result is to 0, the closer the strings are.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string_dist_lcs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">stringdistmatrix</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lcs"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.vector</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name_strip</span><span class="p">(</span><span class="n">name</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">,</span><span class="w"> </span><span class="n">show_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">dist_name_length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">string_dist_lcs</span><span class="p">(</span><span class="n">vec</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unnest</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span><span class="n">dist_name_length</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"String distance between the names of the characters \nin Game of Thrones (red line) and in 970 random series"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"computed using the longest common substring method"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/lcs_string_dist_game_of_thrones.png" alt="" /></p>

<p>Neither on my side‚Ä¶</p>

<h3 id="jaro-distance">Jaro distance</h3>

<p>Jaro distance returns a number between 0 and 1, 0 being exact match, 1 complete dissimilarity. <code class="highlighter-rouge">stringdist("Colin", "Colis", method='jw', p=0)</code> returns 0.1333333. <code class="highlighter-rouge">stringdist("Brann", "Bron", method='jw', p=0)</code> returns 0.2166667. Let‚Äôs try this last one.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string_dist_jac</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">vec</span><span class="p">){</span><span class="w">
  </span><span class="n">stringdistmatrix</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="s1">'jw'</span><span class="p">,</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.vector</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">full_char</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name_strip</span><span class="p">(</span><span class="n">name</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">show_id</span><span class="p">,</span><span class="w"> </span><span class="n">show_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">dist_name_length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">string_dist_jac</span><span class="p">(</span><span class="n">vec</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">name</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unnest</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span><span class="n">dist_name_length</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">show_name</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">scale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"free_y"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"String distance between the names of the characters \nin Game of Thrones and in 970 random series"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"computed using the Jaro distance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">custom_theme</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/08/jaro_string_dist_game_of_thrones.png" alt="" /></p>

<p>Well, Jaro is neither corroborating my initial idea‚Ä¶ So, I‚Äôll stick with my original though: there are sooooooo many characters in this show :)</p>

<p><img src="https://media.giphy.com/media/1iAQLpW2DRW2k/giphy.gif" alt="" /></p>

 </content>
 </item>
 
 <item>
  <title>R6 and shared objects</title>
  <description></description>
  <link>/r6-shared-objects/</link>
  <guid isPermaLink="true">http://localhost:4000/r6-shared-objects/</guid>
  <pubDate>2017-08-15 00:00:00 +0200</pubDate>
  <content><p>A short tutorial about how to share objects between all instances of an R6 class.</p>

<!--more-->

<p>When you create a new object which is an instance of an R6 class, it contains its own data fields ‚Äî i.e. one change in an object is not reflected inside all the instances of the class. If you made a mistake in the class definition, you can‚Äôt just change something in the parent and expect the change to be reflected in the children who inherited from your parent class. Or maybe you need to work with the same dataframe all along, and whenever you change something in it, you want the dataframe to be updated for everyone.</p>

<h2 id="share-elements-across-all-instances-of-a-class">Share elements across all instances of a class</h2>

<p>Well, that was partially true: this is the default behavior of R6 objects, and in fact you can make objects shareable inside all the instances of a class, i.e. a change in one class instance will be reflected in all the instances of this class. For this, you‚Äôll need to create an environment in the <code class="highlighter-rouge">shared</code> element, which is to be put inside your <code class="highlighter-rouge">private</code> field.</p>

<p>Let‚Äôs compare a class which doesn‚Äôt share its object:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">R</span><span class="m">6</span><span class="p">)</span><span class="w">
</span><span class="n">GrandParentClassic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"GrandParent"</span><span class="p">,</span><span class="w"> 
                   </span><span class="n">public</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="w">
                     </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Grandparent"</span><span class="w">
                   </span><span class="p">))</span><span class="w">

</span><span class="n">grand_pa_classic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentClassic</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">grand_ma_classic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentClassic</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">

</span><span class="n">grand_pa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">grand_ma_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="n">grand_pa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Grand Pa"</span><span class="w">
</span><span class="n">grand_pa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">grand_ma_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
</span></code></pre></div></div>

<p>As you can see, a change in one of the instances is not reflected inside the others ‚Äî changing the name of the <code class="highlighter-rouge">grand_pa_classic</code> object does not change the name of <code class="highlighter-rouge">grand_ma_classic</code>. That‚Äôs usually the behavior you want your objects to have ‚Äî but sometime you don‚Äôt. And for that, you need to create the objects to be shared in an environment inside the <code class="highlighter-rouge">shared</code> method in your <code class="highlighter-rouge">private</code> field. You can then access it with active binding.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">GrandParentShared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"GrandParent"</span><span class="p">,</span><span class="w">
                       </span><span class="n">private</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="w">
                         </span><span class="n">shared</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span><span class="w">
                        </span><span class="n">env</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">new.env</span><span class="p">()</span><span class="w">
                        </span><span class="n">env</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Grand Parent"</span><span class="w">
                        </span><span class="n">env</span><span class="w">
                         </span><span class="p">}</span><span class="w">
                       </span><span class="p">),</span><span class="w">
                       </span><span class="n">active</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="w">
                         </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
                           </span><span class="k">if</span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="nf">return</span><span class="p">(</span><span class="n">private</span><span class="o">$</span><span class="n">shared</span><span class="o">$</span><span class="n">name</span><span class="p">)</span><span class="w">
                           </span><span class="k">else</span><span class="w"> </span><span class="n">private</span><span class="o">$</span><span class="n">shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">value</span><span class="w">
                         </span><span class="p">}</span><span class="w">
                       </span><span class="p">)</span><span class="w">
</span><span class="p">)</span><span class="w">

</span><span class="n">grand_pa_shared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentShared</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">grand_ma_shared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentShared</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">

</span><span class="n">grand_pa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">grand_ma_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="n">grand_pa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Grand Pa"</span><span class="w">
</span><span class="n">grand_pa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">grand_ma_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span></code></pre></div></div>

<p>Here, changes in one instance are reflected in other instances. That‚Äôs because {R6} does not copy by value environments: they are always copied by reference, so point to the same slot in memory.</p>

<p>The same can goes if you want to pass shared objects along the inheritance tree:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Without Shared field</span><span class="w">
</span><span class="n">PapaClassic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"PapaClassic"</span><span class="p">,</span><span class="w"> 
                </span><span class="n">inherit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">GrandParentClassic</span><span class="p">)</span><span class="w">
</span><span class="n">ChildClassic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"ChildClassic"</span><span class="p">,</span><span class="w"> 
                 </span><span class="n">inherit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">PapaClassic</span><span class="p">)</span><span class="w">
                 
</span><span class="n">grand_pa_classic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentClassic</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">papa_classic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">PapaClassic</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">child_classic</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChildClassic</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">

</span><span class="n">grand_pa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">papa_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span><span class="n">papa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">child_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="kc">TRUE</span><span class="w"> 

</span><span class="n">papa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Papa"</span><span class="w">
</span><span class="n">grand_pa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">papa_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
</span><span class="n">papa_classic</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">child_classic</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">

</span><span class="c1"># With Shared field</span><span class="w">
</span><span class="n">PapaShared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"PapaShared"</span><span class="p">,</span><span class="w"> 
                </span><span class="n">inherit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">GrandParentShared</span><span class="p">)</span><span class="w">
</span><span class="n">ChildShared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"ChildShared"</span><span class="p">,</span><span class="w"> 
                 </span><span class="n">inherit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">PapaShared</span><span class="p">)</span><span class="w">

</span><span class="n">grand_pa_shared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GrandParentShared</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">papa_shared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">PapaShared</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">child_shared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ChildShared</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">

</span><span class="n">grand_pa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">papa_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span><span class="n">papa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">child_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="n">papa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Papa"</span><span class="w">
</span><span class="n">grand_pa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">papa_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span><span class="n">papa_shared</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">child_shared</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span></code></pre></div></div>
<p>As you can seen, changes flow all along the family tree!</p>
 </content>
 </item>
 
 <item>
  <title>R and active binding (and pizza)</title>
  <description></description>
  <link>/ractivebinfing/</link>
  <guid isPermaLink="true">http://localhost:4000/ractivebinfing/</guid>
  <pubDate>2017-08-12 00:00:00 +0200</pubDate>
  <content><p>Active binding, also known as ‚ÄúThat cool stuff from {R6}‚Äù.</p>

<!--more-->

<h2 id="what-on-earth-is-binding">What on earth is binding?</h2>

<p>First things first: what is binding? You already know the answer to that question: it‚Äôs the simple act of <strong>assigning a value to a name/symbol</strong>. For example:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># With</span><span class="w">
</span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
</span><span class="c1"># You bind the value 5 to the name `a`</span><span class="w">
</span></code></pre></div></div>

<p>Yes, this is as simple as that. In other words, you assign the symbol <code class="highlighter-rouge">a</code> to a memory slot on your computer which contains the value 5. Each time you evaluate the symbol, R goes and gets this value in memory.</p>

<h2 id="so-active-binding">So, active binding?</h2>

<p>A cool feature of {R6} is <code class="highlighter-rouge">active binding</code>, which is the process of using a symbol which looks like a variable but behave as a function. You can create these with the <code class="highlighter-rouge">active</code> method when defining your class.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">R</span><span class="m">6</span><span class="p">)</span><span class="w">
</span><span class="n">ClassyClass</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">R</span><span class="m">6</span><span class="n">Class</span><span class="p">(</span><span class="s2">"ClassyClass"</span><span class="p">,</span><span class="w"> 
                           </span><span class="n">active</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="w">
                             </span><span class="n">classy_word</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
                               </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Classy"</span><span class="p">,</span><span class="s2">"Modish"</span><span class="p">,</span><span class="w"> </span><span class="s2">"High-Class"</span><span class="p">,</span><span class="s2">"Dashing"</span><span class="p">,</span><span class="s2">"Posh"</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
                               </span><span class="k">else</span><span class="w"> </span><span class="n">cat</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Your classy word is"</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="p">))</span><span class="w">
                             </span><span class="p">}</span><span class="w">
                           </span><span class="p">))</span><span class="w">
</span><span class="n">classy_object</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ClassyClass</span><span class="o">$</span><span class="n">new</span><span class="p">()</span><span class="w">
</span><span class="n">classy_object</span><span class="o">$</span><span class="n">classy_word</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Dashing"</span><span class="w">
</span><span class="n">classy_object</span><span class="o">$</span><span class="n">classy_word</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Classy"</span><span class="w">

</span><span class="n">classy_object</span><span class="o">$</span><span class="n">classy_word</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Mod"</span><span class="w">
</span><span class="n">Your</span><span class="w"> </span><span class="n">classy</span><span class="w"> </span><span class="n">word</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">Mod</span><span class="w">
</span></code></pre></div></div>

<p>Great. As you can see, you can access <code class="highlighter-rouge">classy_word</code> like a common variable, but it behaves like a function, randomly printing a word from a list, or printing the word you assign it. As you can see, the <strong>binding</strong> is not fixed, i.e. not on a definite value, but <strong>active</strong>, as it runs a function each time you call this symbol.</p>

<p>Well, can we mimick it without {R6}?</p>

<h2 id="creating-active-binding-in-r">Creating active binding in R</h2>

<p>The naive approach would be to run :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">classy_word</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Classy"</span><span class="p">,</span><span class="s2">"Modish"</span><span class="p">,</span><span class="w"> </span><span class="s2">"High-Class"</span><span class="p">,</span><span class="s2">"Dashing"</span><span class="p">,</span><span class="s2">"Posh"</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">cat</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Your classy word is"</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># It works as a regular function </span><span class="w">

</span><span class="n">classy_word</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Dashing"</span><span class="w">

</span><span class="c1"># But if you try to call it without the parentheses : </span><span class="w">

</span><span class="n">classy_word</span><span class="w">
</span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Classy"</span><span class="p">,</span><span class="s2">"Modish"</span><span class="p">,</span><span class="w"> </span><span class="s2">"High-Class"</span><span class="p">,</span><span class="s2">"Dashing"</span><span class="p">,</span><span class="s2">"Posh"</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">cat</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Your classy word is"</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1">#It describes you the function</span><span class="w">
</span></code></pre></div></div>

<p>But the good news is: you can make the <code class="highlighter-rouge">classy_word</code> symbol, alone, behave as the <code class="highlighter-rouge">classy_word</code> from the {R6} class. For this, we just need the <code class="highlighter-rouge">makeActiveBinding()</code> function.</p>

<p>This function takes three args:</p>

<ul>
  <li><code class="highlighter-rouge">sym</code>: the symbol you want to bind the function to</li>
  <li><code class="highlighter-rouge">fun</code>: The function you want to bind the symbol to</li>
  <li><code class="highlighter-rouge">env</code>: the environement the symbol will be binded to</li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">makeActiveBinding</span><span class="p">(</span><span class="n">sym</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"classy_word"</span><span class="p">,</span><span class="w"> 
                  </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
                    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
                      </span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Classy"</span><span class="p">,</span><span class="s2">"Modish"</span><span class="p">,</span><span class="w"> </span><span class="s2">"High-Class"</span><span class="p">,</span><span class="s2">"Dashing"</span><span class="p">,</span><span class="s2">"Posh"</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
                    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
                      </span><span class="n">cat</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Your classy word is"</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="p">))</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                  </span><span class="p">},</span><span class="w"> 
                  </span><span class="n">env</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.GlobalEnv</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="n">classy_word</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Modish"</span><span class="w">
</span><span class="n">classy_word</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"High-Class"</span><span class="w">
</span><span class="n">classy_word</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Modish"</span><span class="w">
</span><span class="n">Your</span><span class="w"> </span><span class="n">classy</span><span class="w"> </span><span class="n">word</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">Modish</span><span class="w">
</span></code></pre></div></div>

<p>Ok, not really useful,I know‚Ä¶ But you can think of more useful use, like a random sampler:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">makeActiveBinding</span><span class="p">(</span><span class="n">sym</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"random_iris"</span><span class="p">,</span><span class="w"> 
                  </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
                      </span><span class="nf">return</span><span class="p">(</span><span class="n">dplyr</span><span class="o">::</span><span class="n">sample_n</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="m">30</span><span class="p">))</span><span class="w">
                  </span><span class="p">},</span><span class="w"> 
                  </span><span class="n">env</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.GlobalEnv</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="n">random_iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">head</span><span class="w">
    </span><span class="n">Sepal.Length</span><span class="w"> </span><span class="n">Sepal.Width</span><span class="w"> </span><span class="n">Petal.Length</span><span class="w"> </span><span class="n">Petal.Width</span><span class="w">    </span><span class="n">Species</span><span class="w">
</span><span class="m">36</span><span class="w">           </span><span class="m">5.0</span><span class="w">         </span><span class="m">3.2</span><span class="w">          </span><span class="m">1.2</span><span class="w">         </span><span class="m">0.2</span><span class="w">     </span><span class="n">setosa</span><span class="w">
</span><span class="m">105</span><span class="w">          </span><span class="m">6.5</span><span class="w">         </span><span class="m">3.0</span><span class="w">          </span><span class="m">5.8</span><span class="w">         </span><span class="m">2.2</span><span class="w">  </span><span class="n">virginica</span><span class="w">
</span><span class="m">83</span><span class="w">           </span><span class="m">5.8</span><span class="w">         </span><span class="m">2.7</span><span class="w">          </span><span class="m">3.9</span><span class="w">         </span><span class="m">1.2</span><span class="w"> </span><span class="n">versicolor</span><span class="w">
</span><span class="m">102</span><span class="w">          </span><span class="m">5.8</span><span class="w">         </span><span class="m">2.7</span><span class="w">          </span><span class="m">5.1</span><span class="w">         </span><span class="m">1.9</span><span class="w">  </span><span class="n">virginica</span><span class="w">
</span><span class="m">28</span><span class="w">           </span><span class="m">5.2</span><span class="w">         </span><span class="m">3.5</span><span class="w">          </span><span class="m">1.5</span><span class="w">         </span><span class="m">0.2</span><span class="w">     </span><span class="n">setosa</span><span class="w">
</span><span class="m">106</span><span class="w">          </span><span class="m">7.6</span><span class="w">         </span><span class="m">3.0</span><span class="w">          </span><span class="m">6.6</span><span class="w">         </span><span class="m">2.1</span><span class="w">  </span><span class="n">virginica</span><span class="w">

</span><span class="n">random_iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">head</span><span class="w">
    </span><span class="n">Sepal.Length</span><span class="w"> </span><span class="n">Sepal.Width</span><span class="w"> </span><span class="n">Petal.Length</span><span class="w"> </span><span class="n">Petal.Width</span><span class="w">    </span><span class="n">Species</span><span class="w">
</span><span class="m">61</span><span class="w">           </span><span class="m">5.0</span><span class="w">         </span><span class="m">2.0</span><span class="w">          </span><span class="m">3.5</span><span class="w">         </span><span class="m">1.0</span><span class="w"> </span><span class="n">versicolor</span><span class="w">
</span><span class="m">140</span><span class="w">          </span><span class="m">6.9</span><span class="w">         </span><span class="m">3.1</span><span class="w">          </span><span class="m">5.4</span><span class="w">         </span><span class="m">2.1</span><span class="w">  </span><span class="n">virginica</span><span class="w">
</span><span class="m">95</span><span class="w">           </span><span class="m">5.6</span><span class="w">         </span><span class="m">2.7</span><span class="w">          </span><span class="m">4.2</span><span class="w">         </span><span class="m">1.3</span><span class="w"> </span><span class="n">versicolor</span><span class="w">
</span><span class="m">107</span><span class="w">          </span><span class="m">4.9</span><span class="w">         </span><span class="m">2.5</span><span class="w">          </span><span class="m">4.5</span><span class="w">         </span><span class="m">1.7</span><span class="w">  </span><span class="n">virginica</span><span class="w">
</span><span class="m">8</span><span class="w">            </span><span class="m">5.0</span><span class="w">         </span><span class="m">3.4</span><span class="w">          </span><span class="m">1.5</span><span class="w">         </span><span class="m">0.2</span><span class="w">     </span><span class="n">setosa</span><span class="w">
</span><span class="m">112</span><span class="w">          </span><span class="m">6.4</span><span class="w">         </span><span class="m">2.7</span><span class="w">          </span><span class="m">5.3</span><span class="w">         </span><span class="m">1.9</span><span class="w">  </span><span class="n">virginica</span><span class="w">

</span></code></pre></div></div>

<p>And of course, it can be used in a larger function call :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">random_iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">Petal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> 
 
</span></code></pre></div></div>

<p><img src="../uploads/2017/08/random_iris1.png" alt="" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">random_iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Sepal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">Petal.Length</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> 
 
</span></code></pre></div></div>

<p><img src="../uploads/2017/08/random_iris2.png" alt="" /></p>

<h2 id="quick-aside-on-environments">Quick aside on environments</h2>

<p>The third arg of <code class="highlighter-rouge">makeActiveBinding</code> is <code class="highlighter-rouge">env</code>, the environment the symbol is binded to. That means you can bind the same symbol to different functions in different environments.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">new.env</span><span class="p">()</span><span class="w">
</span><span class="n">b</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">new.env</span><span class="p">()</span><span class="w">
</span><span class="n">makeActiveBinding</span><span class="p">(</span><span class="n">sym</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"example"</span><span class="p">,</span><span class="w">
                  </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">()</span><span class="w"> </span><span class="s2">"a"</span><span class="p">,</span><span class="w">  
                  </span><span class="n">env</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="p">)</span><span class="w">
</span><span class="n">makeActiveBinding</span><span class="p">(</span><span class="n">sym</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"example"</span><span class="p">,</span><span class="w">
                  </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">()</span><span class="w"> </span><span class="s2">"b"</span><span class="p">,</span><span class="w">  
                  </span><span class="n">env</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">b</span><span class="p">)</span><span class="w">

</span><span class="n">a</span><span class="o">$</span><span class="n">example</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"a"</span><span class="w">
</span><span class="n">b</span><span class="o">$</span><span class="n">example</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"b"</span><span class="w">
</span></code></pre></div></div>

<p>Yes, this is what is happening in {R6} :)</p>

<h2 id="pizza-time">PIZZA TIME</h2>

<p>And now, just to continue the <a href="http://colinfay.me/playing-r-infix-functions/">emoji-pizza</a> R work, here is an active binding to the pizza symbol.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">makeActiveBinding</span><span class="p">(</span><span class="n">sym</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"üçï"</span><span class="p">,</span><span class="w"> 
                  </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">value</span><span class="p">){</span><span class="w">
                    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">missing</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
                      </span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"California-style pizza"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Chicago-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Chocolate"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Detroit-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Focaccia al rosmarino Iranian"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Greek"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Hawaiian"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Lazio Matzah"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Meatball"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Mexican"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Neapolitan"</span><span class="p">,</span><span class="w"> </span><span class="s2">"New Haven-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"New York-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Pictou County"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Pizza quattro stagioni"</span><span class="p">,</span><span class="w"> </span><span class="s2">"al taglio"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cake"</span><span class="p">,</span><span class="w"> </span><span class="s2">"capricciosa"</span><span class="p">,</span><span class="w"> </span><span class="s2">"marinara"</span><span class="p">,</span><span class="w"> </span><span class="s2">"pugliese Pizzetta Quad City-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Sardenara Seafood"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Sicilian"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Sushi"</span><span class="p">,</span><span class="w"> </span><span class="s2">"St. Louis-style"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Tomato pie White clam pie"</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
                    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
                      </span><span class="n">cat</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="s2">"Your special pizza type is"</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="p">))</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                  </span><span class="p">},</span><span class="w"> 
                  </span><span class="n">env</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.GlobalEnv</span><span class="w">
</span><span class="p">)</span><span class="w">

</span><span class="c1"># Pizza emoji is a special character so you have to surround it with backticks</span><span class="w">

</span><span class="n">`üçï`</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Pizza quattro stagioni"</span><span class="w">
</span><span class="n">`üçï`</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"St. Louis-style"</span><span class="w">
</span><span class="n">`üçï`</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"New York-style"</span><span class="w">
</span><span class="n">`üçï`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Vegetarian"</span><span class="w">
</span><span class="n">Your</span><span class="w"> </span><span class="n">special</span><span class="w"> </span><span class="n">pizza</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">Vegetarian</span><span class="w">
</span></code></pre></div></div>

<p>And‚Ä¶ bon appetit !</p>
 </content>
 </item>
 
 <item>
  <title>languagelayeR 1.1.0 is now on CRAN</title>
  <description></description>
  <link>/languagelayer110/</link>
  <guid isPermaLink="true">http://localhost:4000/languagelayer110/</guid>
  <pubDate>2017-07-19 00:00:00 +0200</pubDate>
  <content><p>I took a studious resolution for this summer: update, clean and create better docs for my old packages which are on the CRAN. <code class="highlighter-rouge">languagelayeR</code> is the first to go!</p>

<!--more-->

<h2 id="languagelayer">languagelayer</h2>

<p>This package offers a language detection tool by connecting to the languagelayer API, a JSON interface designed to extract language information from a character string.</p>

<h2 id="how-languagelayer-works">How languagelayeR works</h2>

<p>The version 1.1.0 works with two functions. Which are :</p>

<p><code class="highlighter-rouge">get_lang</code> Get language information from a character string</p>

<p><code class="highlighter-rouge">get_supported_lang</code> Get all current available languages on the languagelayer API.</p>

<h2 id="whats-new-with-version-110-">What‚Äôs new with version 1.1.0 ?</h2>

<ul>
  <li><code class="highlighter-rouge">setApiKey</code> is now deprecated</li>
  <li><code class="highlighter-rouge">getSupportedLanguage</code> is now <code class="highlighter-rouge">get_supported_lang</code></li>
  <li><code class="highlighter-rouge">getLanguage</code> is now <code class="highlighter-rouge">get_lang</code></li>
  <li>New vignette: <code class="highlighter-rouge">browseVignettes("languagelayeR")</code></li>
</ul>

<h2 id="some-examples">Some examples</h2>

<p>Here are some example of how to use languagelayeR. Let‚Äôs start with random Gutenberg project books, and try with french, german and spanish books.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">languagelayeR</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">gutenbergr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">api_key</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"XXX"</span><span class="w">

</span><span class="c1"># There are 55080 books on the gutenberg project at the time</span><span class="w">

</span><span class="c1">## Test one </span><span class="w">

</span><span class="n">sample</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">55080</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">gutenberg_download</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">sample_n</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_lang</span><span class="p">(</span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.list</span><span class="p">()</span><span class="w">

</span><span class="c1">## note: I turned into a list for the sake of readability</span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"in this way: On the preceding evening, after the firing had ceased,"</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"en"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"English"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">58.82599</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="c1"># Test 2 </span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Notwithstanding these efforts, it is a fact that scarcely any of the"</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"en"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"English"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">53.71964</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="c1"># Test 3 </span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"which she used to employ at Keeton, when she had occasion to"</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"en"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"English"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">43.51029</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="c1"># With other languages books </span><span class="w">

</span><span class="c1">## Proust (French)</span><span class="w">

</span><span class="n">gutenberg_download</span><span class="p">(</span><span class="s2">"2650"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">sample_n</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_lang</span><span class="p">(</span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.list</span><span class="p">()</span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"noirceur de ses intentions."</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"fr"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"French"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">22.70587</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
 

</span><span class="c1">## Vernes (French)</span><span class="w">

</span><span class="n">gutenberg_download</span><span class="p">(</span><span class="s2">"54873"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">sample_n</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_lang</span><span class="p">(</span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.list</span><span class="p">()</span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Depuis ce jour, qui pourra dire jusqu'o√π nous entra√Æna le _Nautilus_"</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"fr"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"French"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">33.59961</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">


</span><span class="c1">## Kant (Deutch)</span><span class="w">

</span><span class="n">gutenberg_download</span><span class="p">(</span><span class="s2">"38295"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">sample_n</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_lang</span><span class="p">(</span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.list</span><span class="p">()</span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"jetzt aus elender Ziererei der Buchdrucker (denn Buchstaben haben doch"</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"de"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"German"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">45.72145</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span><span class="c1">## Stevenson (but in Spanish)</span><span class="w">

</span><span class="n">gutenberg_download</span><span class="p">(</span><span class="s2">"45438"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">sample_n</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">get_lang</span><span class="p">(</span><span class="n">api_key</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.list</span><span class="p">()</span><span class="w">

</span><span class="o">$</span><span class="n">text</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"tiempo el beneficio de sus opiniones."</span><span class="w">

</span><span class="o">$</span><span class="n">language_code</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"es"</span><span class="w">

</span><span class="o">$</span><span class="n">language_name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"Spanish"</span><span class="w">

</span><span class="o">$</span><span class="n">probability</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">23.14516</span><span class="w">

</span><span class="o">$</span><span class="n">percentage</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">100</span><span class="w">

</span><span class="o">$</span><span class="n">reliable_result</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">

</span></code></pre></div></div>

<p>I‚Äôll be glad to have some feedback about this package. Feel free to reach me out on <a href="http://www.twitter.com/_colinfay">Twitter</a>! You can also send some PR or open issue on the <a href="https://github.com/ColinFay/languagelayeR">GitHub repo</a>.</p>
 </content>
 </item>
 
 <item>
  <title>Down the rabbit hole with tidy eval ‚Äî Part 1</title>
  <description></description>
  <link>/tidyeval-1/</link>
  <guid isPermaLink="true">http://localhost:4000/tidyeval-1/</guid>
  <pubDate>2017-07-14 00:00:00 +0200</pubDate>
  <content><p>Some random explanations about programming with tidy eval.</p>

<!--more-->

<h2 id="what-on-earth-is-evaluation">What on earth is evaluation?</h2>

<p>So, let‚Äôs start with a simple question: what is evaluation? Evaluation is the process of analyzing an expression, in order to give the user something back. For example, in R, the standard evaluations is :</p>

<ul>
  <li>you type/send something to the console (called a symbol)</li>
  <li>press enter</li>
  <li>R does some magic stuffs</li>
  <li>R returns you the value associated with the expression</li>
</ul>

<p>For example :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># You type 1, the expression</span><span class="w">
</span><span class="m">1</span><span class="w">
</span><span class="c1"># R evaluates 1, and returns you </span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1</span><span class="w">

</span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="c1"># Here, the expression is a (a is the symbol)</span><span class="w">
</span><span class="c1"># Standard eval: when a symbol is evaluated, it return its value</span><span class="w">
</span><span class="n">a</span><span class="w"> 
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></code></pre></div></div>

<p>Pretty clear isn‚Äôt it?</p>

<p>Spoiler: the part about R doing magic stuffs wasn‚Äôt quite true. In fact, R takes the symbol you‚Äôve entered (here <code class="highlighter-rouge">a</code>), turns it into and internal representation, then looks in the <strong>direct environment</strong> of the expression in order to <strong>return the value</strong> associated with it. If R doesn‚Äôt find the value in the environment the expression is linked to, it goes up to the parent env, then to the parent env, so on and so forth.</p>

<p>This is R standard evaluation. The returned object is the value the symbol is linked to. Keep this in mind, you‚Äôll need this later.</p>

<h2 id="aside-about-lazy-evalution">Aside: about lazy evalution</h2>

<p>An R strength is <em>lazy evaluation</em>. These strange words mean that R only evaluates the expression if the expression is actually used. That‚Äôs why this kind of function works:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lazy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">b</span><span class="p">){</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="s2">"please take a nap"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">lazy</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"please take a nap"</span><span class="w">

</span><span class="n">lazy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">b</span><span class="p">){</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">lazy</span><span class="p">(</span><span class="s2">"please take a nap"</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"please take a nap"</span><span class="w">
</span></code></pre></div></div>

<p>Here in function 1, <code class="highlighter-rouge">a</code> and <code class="highlighter-rouge">b</code> are not evaluated in the environment of the function, so no error. In function 2, <code class="highlighter-rouge">b</code> is never called, so it‚Äôs not evaluated, and no error is thrown either. On the other hand, this doesn‚Äôt work:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lazy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">b</span><span class="p">){</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">lazy</span><span class="p">(</span><span class="s2">"please take a nap"</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"please take a nap"</span><span class="w">
</span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">argument</span><span class="w"> </span><span class="s2">"b"</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">missing</span><span class="p">,</span><span class="w"> </span><span class="n">with</span><span class="w"> </span><span class="n">no</span><span class="w"> </span><span class="n">default</span><span class="w">
</span></code></pre></div></div>

<p>Here, you can see that it throws an error: <code class="highlighter-rouge">b</code> is needed. You can also notice that <code class="highlighter-rouge">a</code> is first evaluated, the strings are printed, and only then the missing <code class="highlighter-rouge">b</code> throws an error.</p>

<h2 id="about-scoping">About scoping</h2>

<p>Quick thing to keep in mind here, the notion of environment. Each expression is by default evaluated in its environment. Then if it‚Äôs missing, R goes up to its parent env, then to the parent env, etc.</p>

<p><strong>Each function defines its own environment</strong>, which can have its own rules (so basically its own rule for evaluation of a symbol). The env opened when the function is launched and closed when finished. That‚Äôs why you can‚Äôt directly access the object created inside a function :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">create</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(){</span><span class="w">
  </span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">create</span><span class="p">()</span><span class="w">
</span><span class="n">a</span><span class="w">
</span><span class="o">&gt;</span><span class="w"> </span><span class="n">Error</span><span class="o">:</span><span class="w"> </span><span class="n">could</span><span class="w"> </span><span class="n">not</span><span class="w"> </span><span class="n">find</span><span class="w"> </span><span class="s1">'a'</span><span class="w">

</span><span class="c1"># Special character to override this  </span><span class="w">

</span><span class="n">create</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(){</span><span class="w">
  </span><span class="n">a</span><span class="w"> </span><span class="o">&lt;&lt;-</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">create</span><span class="p">()</span><span class="w">
</span><span class="n">a</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1</span><span class="w">

</span><span class="c1"># But please DON'T do that. </span><span class="w">
</span></code></pre></div></div>

<h2 id="lets-focus-what-about-tidy-eval">Let‚Äôs focus: what about tidy eval?</h2>

<p>So, back to our original point. I‚Äôve been diving into tidy eval lately as I‚Äôve been contributing to <a href="https://github.com/njtierney/narnia">{narnia}</a>, a package designed to analyse missing data, the tidy way. The whole philosophy of the package being the tidyverse, I needed to contribute with the same philosophy in mind.</p>

<p>So basically, I needed to create a function that took a <code class="highlighter-rouge">df</code>, the unquoted name <code class="highlighter-rouge">x</code> of a column, and <code class="highlighter-rouge">dplyr::group_by</code> with this column, and then <code class="highlighter-rouge">ggplot::ggplot</code>, with <code class="highlighter-rouge">aes(x)</code>, the name of the column previously specified. Thing is, you can‚Äôt simply do :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Note : this is obviously not the function I was working on. This is an example.</span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># So you want to turn this into a function : </span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Species</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">Sepal.Length</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> 

</span><span class="c1"># Let's try the simple way</span><span class="w">

</span><span class="n">gg_top</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">group_by</span><span class="p">(</span><span class="n">col_group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">col_group</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
    </span><span class="n">geom_point</span><span class="p">()</span><span class="w">  
</span><span class="p">}</span><span class="w">

</span><span class="n">gg_top</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sepal.Length</span><span class="p">)</span><span class="w">

</span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">grouped_df_impl</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="w"> </span><span class="n">unname</span><span class="p">(</span><span class="n">vars</span><span class="p">),</span><span class="w"> </span><span class="n">drop</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">Column</span><span class="w"> </span><span class="n">`col_group`</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">unknown</span><span class="w">
</span></code></pre></div></div>

<p>OK. Here R simply can‚Äôt find <code class="highlighter-rouge">col_group</code>. But where is this coming from? I did specified that <code class="highlighter-rouge">col_group</code> was equal to <code class="highlighter-rouge">Species</code>. Why is it looking for <code class="highlighter-rouge">col</code>?</p>

<p>Let‚Äôs try something else.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># This works </span><span class="w">
</span><span class="n">select</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">Species</span><span class="p">)</span><span class="w">

</span><span class="c1"># So what if I want to reproduce it?</span><span class="w">
</span><span class="c1"># I can think of </span><span class="w">

</span><span class="n">select_custom</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="p">[,</span><span class="w"> </span><span class="n">col</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">select_custom</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">)</span><span class="w">
</span><span class="o">&gt;</span><span class="w"> </span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">`[.data.frame`</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="n">could</span><span class="w"> </span><span class="n">not</span><span class="w"> </span><span class="n">find</span><span class="w"> </span><span class="s1">'Species'</span><span class="w"> 

</span><span class="c1"># But this works: </span><span class="w">
</span><span class="n">select_custom</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Species"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>God damn, how is it that <code class="highlighter-rouge">dplyr::select</code> works with unquoted element, while <code class="highlighter-rouge">select_custom</code> needs a quoted string? That‚Äôs because :</p>

<ul>
  <li><code class="highlighter-rouge">select_custom</code> uses the standard evaluation: R sees the symbol <code class="highlighter-rouge">Species</code>, and tries to evaluate the standard way ‚Äî i.e. by looking in the environment of the function for the value of <code class="highlighter-rouge">Species</code>. It doesn‚Äôt find it, so throws an error.</li>
  <li>When <code class="highlighter-rouge">"Species"</code> is quoted, R evaluates it for what it is: a string. So R doesn‚Äôt try to return a value from it.</li>
  <li><code class="highlighter-rouge">dplyr::select</code> creates an environment, which has a custom method of evaluation. This is why you can pass unquoted string there ‚Äî R will not look computer the symbol looking for a value in the env.</li>
</ul>

<p>In each <code class="highlighter-rouge">dplyr::function(df, var)</code>, every <code class="highlighter-rouge">var</code> is evaluated in the environment of the function, which have special way of computed symbols. In the case of <code class="highlighter-rouge">filter</code>, R looks for a column named <code class="highlighter-rouge">var</code> in <code class="highlighter-rouge">df</code> (in practice, that‚Äôs not exactly how it works, but you get the point).</p>

<p>This explains the error being thrown earlier: <code class="highlighter-rouge">group_by</code> was looking for the <code class="highlighter-rouge">col_group</code> column inside our data.frame.</p>

<h2 id="getting-started">Getting started</h2>

<p>Then, the big question: how can we program with dplyr? How can we pass the unquoted <code class="highlighter-rouge">Species</code> arg from the function <code class="highlighter-rouge">gg_top</code> to our <code class="highlighter-rouge">group_by</code>, and <code class="highlighter-rouge">Sepal.Length</code> to the <code class="highlighter-rouge">ggplot</code>? Let‚Äôs start by breaking our problem into two parts: the <code class="highlighter-rouge">dplyr</code>, then the <code class="highlighter-rouge">ggplot</code>.</p>

<p>So first, we need to create a function that takes a data.frame, makes a <code class="highlighter-rouge">group_by</code> on a column, then returns the <code class="highlighter-rouge">slice(5:10)</code>. Basically something doing:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Species</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">

</span><span class="c1"># We could think of </span><span class="w">
</span><span class="n">slicer</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">var</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">slicer</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">)</span><span class="w">

</span><span class="o">&gt;</span><span class="w"> </span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">grouped_df_impl</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="w"> </span><span class="n">unname</span><span class="p">(</span><span class="n">vars</span><span class="p">),</span><span class="w"> </span><span class="n">drop</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">Column</span><span class="w"> </span><span class="n">`var`</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">unknown</span><span class="w">
</span></code></pre></div></div>

<p>Here, you can see that R is looking for a <code class="highlighter-rouge">var</code> column. That‚Äôs because <code class="highlighter-rouge">var</code> is <strong>evaluated in the environment created by <code class="highlighter-rouge">group_by</code></strong>, so looking for the column <code class="highlighter-rouge">var</code> in the <code class="highlighter-rouge">iris</code> df. So how to prevent that?</p>

<p>We could think of:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">slicer</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Species"</span><span class="p">)</span><span class="w">

</span><span class="o">&gt;</span><span class="w"> </span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">grouped_df_impl</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="w"> </span><span class="n">unname</span><span class="p">(</span><span class="n">vars</span><span class="p">),</span><span class="w"> </span><span class="n">drop</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">Column</span><span class="w"> </span><span class="n">`var`</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">unknown</span><span class="w">
</span></code></pre></div></div>

<p>But 1:  that‚Äôs not working (because <code class="highlighter-rouge">group_by</code> doesn‚Äôt take a string), 2: we don‚Äôt want to quote.</p>

<p>So the thing is: <code class="highlighter-rouge">dplyr</code> functions work with a special type of objects, called <code class="highlighter-rouge">quosure</code> ‚Äî this is how symbols are evaluated. You can create them with <code class="highlighter-rouge">quo()</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">quo</span><span class="p">(</span><span class="n">Species</span><span class="p">)</span><span class="w">
</span><span class="o">&lt;</span><span class="n">quosure</span><span class="o">:</span><span class="w"> </span><span class="n">global</span><span class="o">&gt;</span><span class="w">
</span><span class="o">~</span><span class="n">Species</span><span class="w">

</span><span class="c1"># So is this going to work? </span><span class="w">
</span><span class="n">slicer</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">quo</span><span class="p">(</span><span class="n">var</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">slicer</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">)</span><span class="w">
</span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">mutate_impl</span><span class="p">(</span><span class="n">.data</span><span class="p">,</span><span class="w"> </span><span class="n">dots</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> 
  </span><span class="n">Column</span><span class="w"> </span><span class="n">`quo(var)`</span><span class="w"> </span><span class="n">is</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">unsupported</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="n">quoted</span><span class="w"> </span><span class="n">call</span><span class="w">
</span></code></pre></div></div>

<p>Nop! Obviously here, <code class="highlighter-rouge">group_by(quo(var))</code> compute <code class="highlighter-rouge">quo(var)</code> as a quosure, so it does:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">quo</span><span class="p">(</span><span class="n">quo</span><span class="p">(</span><span class="n">var</span><span class="p">))</span><span class="w">
</span><span class="o">&lt;</span><span class="n">quosure</span><span class="o">:</span><span class="w"> </span><span class="n">frame</span><span class="o">&gt;</span><span class="w">
</span><span class="o">~</span><span class="n">quo</span><span class="p">(</span><span class="n">var</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Not what we‚Äôve been looking for either. We need a way to prevent the symbol <code class="highlighter-rouge">var</code> from being evaluated the standard way, but evaluated with tidy eval. Good news, there‚Äôs a function for that ‚Äî <code class="highlighter-rouge">enquo()</code>. This function :</p>
<ul>
  <li>Takes a symbol</li>
  <li>quotes the R code supplied</li>
  <li>captures the environment</li>
  <li>returns a quosure</li>
</ul>

<p>Then, we need a way to tell <code class="highlighter-rouge">group_by</code> that we‚Äôve taken care to the ‚Äúquosurisation‚Äù (that‚Äôs not the real word, you know!). So‚Ä¶ here comes <code class="highlighter-rouge">!!</code> (to be pronounced ‚ÄúBang Bang‚Äù :) )</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">slicer</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="p">){</span><span class="w">
  </span><span class="n">enquo_var</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">var</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="c1"># !! tells dplyr not to compute the object as a quosure</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="o">!!</span><span class="n">enquo_var</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># That works!</span><span class="w">
</span><span class="n">slicer</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">var</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>[emoji party]</p>

<h2 id="the-ggplot-part">the ggplot part</h2>

<p>So now, we need to pass the <code class="highlighter-rouge">col_group</code> and <code class="highlighter-rouge">col_plot</code> into the ggplot call. We may be tempted to pass <code class="highlighter-rouge">!!enquo_col_plot</code> the same way we passed it through <code class="highlighter-rouge">group_by</code>. Thing is: tidy eval is not yet implemented in <code class="highlighter-rouge">ggplot2</code> ‚Äî so you can‚Äôt pass the <code class="highlighter-rouge">enquo(var)</code> to it.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gg_top</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="p">){</span><span class="w">
  </span><span class="n">enquo_col_group</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">col_group</span><span class="p">)</span><span class="w">
  </span><span class="n">enquo_col_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">col_plot</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="o">!!</span><span class="n">enquo_col_group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="o">!!</span><span class="n">enquo_col_group</span><span class="p">,</span><span class="w"> </span><span class="o">!!</span><span class="n">enquo_col_plot</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
    </span><span class="n">geom_point</span><span class="p">()</span><span class="w">  
</span><span class="p">}</span><span class="w">

</span><span class="n">gg_top</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sepal.Length</span><span class="p">)</span><span class="w">

</span><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="p">(</span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">  </span><span class="o">:</span><span class="w"> </span><span class="n">could</span><span class="w"> </span><span class="n">not</span><span class="w"> </span><span class="n">find</span><span class="w"> </span><span class="s1">'enquo_var'</span><span class="w"> 

</span></code></pre></div></div>

<p>The trick is: you can use <code class="highlighter-rouge">quo_name</code>, which returns a character string with the name of the expression you‚Äôve typed. Pass it to <code class="highlighter-rouge">ggplot2::aes_string</code>‚Ä¶ and Voil√†!</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gg_top</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="p">){</span><span class="w">
  </span><span class="n">enquo_col_group</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">col_group</span><span class="p">)</span><span class="w">
  </span><span class="n">enquo_col_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">enquo</span><span class="p">(</span><span class="n">col_plot</span><span class="p">)</span><span class="w">  
  </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="o">!!</span><span class="n">enquo_col_group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">slice</span><span class="p">(</span><span class="m">5</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes_string</span><span class="p">(</span><span class="n">quo_name</span><span class="p">(</span><span class="n">enquo_col_group</span><span class="p">),</span><span class="w"> </span><span class="n">quo_name</span><span class="p">(</span><span class="n">enquo_col_plot</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
    </span><span class="n">geom_point</span><span class="p">()</span><span class="w">  
</span><span class="p">}</span><span class="w">

</span><span class="n">gg_top</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">iris</span><span class="p">,</span><span class="w"> </span><span class="n">col_group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Species</span><span class="p">,</span><span class="w"> </span><span class="n">col_plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sepal.Length</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>[emoji party]^2</p>

<p>Sorry, that was quite a long post.. I hope it has enlightened some dark side of the tidyverse :)</p>

<p>Coming soon: more on tidy eval, environment, and computing on the R language.</p>
 </content>
 </item>
 
 <item>
  <title>Back from useR!2017: a summer to-do list</title>
  <description></description>
  <link>/back-user2017/</link>
  <guid isPermaLink="true">http://localhost:4000/back-user2017/</guid>
  <pubDate>2017-07-09 00:00:00 +0200</pubDate>
  <content><p>A quick to-do list brought back from useR!2017.</p>

<!--more-->

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/07/badge-usr.JPG" alt="" /></p>

<p>Last week, ThinkR had the chance to go to useR!2017, Brussels. Here‚Äôs some stuffs I‚Äôve brought back, in the form of a summer to-do list.</p>

<h2 id="purrr-all-the-things"><code class="highlighter-rouge">purrr</code> all the things</h2>

<p>I‚Äôve been using <code class="highlighter-rouge">purrr</code> on a non regular basis so far. Being used to call the <code class="highlighter-rouge">apply</code> functions when needed, <code class="highlighter-rouge">purrr</code> didn‚Äôt come first in my programming habits. Yet, during her workshop, Charlotte Wickham made a good case for the package, explaining how you can really simplify your code with <code class="highlighter-rouge">purrr</code>. In a way, this tidyverse package does the same things as the <code class="highlighter-rouge">apply</code> family, yet it provides a more logic and consistent syntax, and control over the kind of output you want to have. It‚Äôs also more easy to loop over multiple object and/or with multiple functions.</p>

<p>Let‚Äôs say that now I‚Äôve got quite some work updating my old packages using the <code class="highlighter-rouge">map_</code>family !</p>

<h2 id="start-using-cleannlp">Start using <code class="highlighter-rouge">cleanNLP</code></h2>

<p>I‚Äôm a big fan of the <code class="highlighter-rouge">tidytext</code> package, being a great tool for starting with NLP, but lacking some more advanced features. That‚Äôs what <code class="highlighter-rouge">cleanNLP</code> provides. At the crossroad of the tidyverse and cutting-edge research in linguistics, this package is designed to turn raw text data into rich text, in  tidy format.</p>

<p>First (and obviously) <code class="highlighter-rouge">cleanNLP</code> is designed to parse the data into tokens, but then you can call the Java or Python back-end to detect co-reference, part of speech, words type‚Ä¶ As I‚Äôm writting these words, I‚Äôve so far been struggling with the back-end Java installation, but you‚Äôll get some update about this fight very soon (and of course more NLP :) ).</p>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/07/user-sign.JPG" alt="" /></p>

<h1 id="do-more-r6">Do more R6</h1>

<p><code class="highlighter-rouge">R6</code> has been there for quite a while now (3 years), and it‚Äôs today the most downloaded package on RStudio CRAN mirror. And yes, this may be due to the fact that well known packages depend on it, like <code class="highlighter-rouge">dplyr</code> or <code class="highlighter-rouge">shiny</code>. But still, this R class is designed to be lighter, and faster. Object oriented programming is not the way people usually program with R, but I think I have to give it a shot. More on that too very soon.</p>

<h2 id="start-using-more-my-datacamp-account">Start using more my Datacamp account</h2>

<p>I‚Äôve always be fond of online learning. Datacamp provides a great solution to learn both R and Python. They‚Äôre now launching a SQL course, and plan on having about a 100 courses by the end of the year. So, I‚Äôm just gonna have to try them all :)</p>

<p>Btw, if ever you want to try but don‚Äôt know if you should really pay for that, I‚Äôve got quite a few coupons left for a 2 days premium trial for free. Check <a href="https://www.datacamp.com/invite/k7K85SDdMAou8">this link</a>.</p>

<h2 id="get-a-ls-tattoo">Get a <code class="highlighter-rouge">&gt;ls()</code> tattoo.</h2>

<p>A real one.</p>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/07/ls-tattoo.jpg" alt="" /></p>

<h2 id="create-more-open-data">Create more Open Data</h2>

<p>I‚Äôve so far engaged in some open data projects, mainly through <a href="http://data-bzh.fr">Data-Bzh</a>. I‚Äôve created several open-data-sets, but you can say that‚Äôs not enough. Epecially when you know how easily you can use <code class="highlighter-rouge">rvest</code> for scraping more data from over the web, and put the results online.</p>

<h2 id="try-jug">Try <code class="highlighter-rouge">JUG</code></h2>

<p>This package is designed to create API within R. The live demo at useR! was quite convincing, adn I have to say that I really want to dig deeper into it. More on <a href="https://github.com/Bart6114/jug">GitHub</a>, and here when I have a chance to try out.</p>

<h2 id="start-using-miner">Start using <code class="highlighter-rouge">miner</code></h2>

<p>Presented by David Smith, the <code class="highlighter-rouge">miner</code> package allows to control over Minecraft, within R. Quite a good way to get kids into programming !</p>

<p><img src="https://raw.githubusercontent.com/ColinFay/colinfay.github.io/master/uploads/2017/07/r-minecraft.JPG" alt="" /></p>

<h2 id="decide-how-i-should-pronounce-cran">Decide how I should pronounce CRAN</h2>

<p>I‚Äôve always been saying ‚ÄúKRAN‚Äù, but Uwe Ligges pronounces it ‚ÄúSEE-RAN‚Äù. I think I‚Äôm gonna stick to ‚ÄúKRAN‚Äù, though, that really sounds more natural to me.</p>

<p>Sounds like a good plan for the summer, right?</p>
 </content>
 </item>
 
 <item>
  <title>Playing with R, infix functions, and pizza</title>
  <description></description>
  <link>/playing-r-infix-functions/</link>
  <guid isPermaLink="true">http://localhost:4000/playing-r-infix-functions/</guid>
  <pubDate>2017-06-29 00:00:00 +0200</pubDate>
  <content><p>Digging into a not so special type of R functions, in order to make an emoji-pizza-dplyr-slice one.</p>

<!--more-->

<h2 id="what-are-infix-functions">What are infix functions?</h2>

<p>In R, most of the functions are ‚Äúprefix‚Äù - meaning that the function name comes before the arguments, which are put between parentheses : <code class="highlighter-rouge">fun(a,b)</code>. With infix functions, the name comes between the arguments <code class="highlighter-rouge">a fun b</code>. In fact, you use this type on a daily basis with <code class="highlighter-rouge">:</code>, <code class="highlighter-rouge">+</code>, and so on.</p>

<blockquote>
  <p>So, how can you create your own infix functions?</p>
</blockquote>

<p>As an R user (and even if you come from another language), you‚Äôre used to write your functions in this form :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a_function</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">some_variable</span><span class="p">,</span><span class="w"> </span><span class="n">another_one</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">do_some_stuffs</span><span class="p">(</span><span class="n">some_variable</span><span class="p">,</span><span class="n">another_one</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># And write a function call this way:</span><span class="w">
</span><span class="n">a_function</span><span class="p">(</span><span class="n">some_variable</span><span class="p">,</span><span class="n">another_one</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>But if your function has only two operators, you can write it this way :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">`%some_function%`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">some_variable</span><span class="p">,</span><span class="n">another_one</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">do_some_stuffs</span><span class="p">(</span><span class="n">some_variable</span><span class="p">,</span><span class="n">another_one</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="c1"># And use it with:</span><span class="w">
</span><span class="n">some_variable</span><span class="w"> </span><span class="o">%a_function%</span><span class="w"> </span><span class="n">another_one</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://media.giphy.com/media/sOGgevbtBDYKQ/giphy.gif" alt="" /></p>

<p>At this point, you‚Äôve noticed two things :</p>

<h3 id="back-ticks">Back ticks</h3>

<p>Back ticks are R way to denote a special name. You can in fact put any characters between them (even emoji, as we‚Äôll see later on):</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Impossible</span><span class="w">
</span><span class="m">123</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">){</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">}</span><span class="w">
</span><span class="err">_</span><span class="n">some_function</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">){</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">}</span><span class="w">
</span><span class="c1">#Possible</span><span class="w">
</span><span class="n">`123`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">){</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">}</span><span class="w">
</span><span class="n">`_some_function`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">){</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="percent-sign-">Percent sign <code class="highlighter-rouge">%</code></h3>

<p>The two <code class="highlighter-rouge">%</code> surrounding the function name are necessary if you want to create your own infix functions. As <code class="highlighter-rouge">%</code> is a special character, you need to use it inside back ticks. Note that basic infix functions in R don‚Äôt need the percent sign, but user generated one do.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="w">
</span><span class="c1"># is equivalent to </span><span class="w">
</span><span class="n">`:`</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="m">2+3</span><span class="w">
</span><span class="c1"># is equivalent to </span><span class="w">
</span><span class="n">`+`</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Good thing (or maybe not) is that you can override the default functions, if you want to drive someone mad:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Warning : don't try this at home </span><span class="w">
</span><span class="n">`+`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">){</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="p">}</span><span class="w">
</span><span class="m">2+10</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">20</span><span class="w">

</span><span class="n">`&lt;-`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">.Primitive</span><span class="p">(</span><span class="s2">"+"</span><span class="p">)</span><span class="w">
</span><span class="m">2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">3</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">5</span><span class="w">

</span><span class="n">`:`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">.Primitive</span><span class="p">(</span><span class="s2">"*"</span><span class="p">)</span><span class="w">
</span><span class="m">2</span><span class="o">:</span><span class="m">10</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">20</span><span class="w">

</span><span class="c1"># Restore cosmic ordeR </span><span class="w">
</span><span class="n">`&lt;-`</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.Primitive</span><span class="p">(</span><span class="s2">"&lt;-"</span><span class="p">)</span><span class="w">
</span><span class="n">`+`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">.Primitive</span><span class="p">(</span><span class="s2">"+"</span><span class="p">)</span><span class="w">
</span><span class="n">`:`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">.Primitive</span><span class="p">(</span><span class="s2">":"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="some-examples">Some examples</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">`%oh_wait%`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">a</span><span class="p">);</span><span class="n">Sys.sleep</span><span class="p">(</span><span class="m">3</span><span class="p">);</span><span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="n">Sys.time</span><span class="p">()</span><span class="w"> </span><span class="o">%oh_wait%</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"2017-06-28 23:01:43 CEST"</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"2017-06-28 23:01:46 CEST"</span><span class="w">
</span></code></pre></div></div>

<p>This first function does nothing but printing the time twice, with 3 seconds of pause in-between. Needless to say that‚Äôs useless, but that was just an example :)</p>

<p>Let‚Äôs do something more tidyverse friendly. For example, let‚Äôs try a function <code class="highlighter-rouge">%select%</code> which will be the equivalent to <code class="highlighter-rouge">%&gt;% select()</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">`%select%`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dplyr</span><span class="o">::</span><span class="n">select</span><span class="w">

</span><span class="n">iris</span><span class="w"> </span><span class="o">%select%</span><span class="w"> </span><span class="s2">"Species"</span><span class="w">
</span><span class="c1"># Is equivalent to </span><span class="w">
</span><span class="n">iris</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">select</span><span class="p">(</span><span class="s2">"Species"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="and-now-the-cool-stuffs">And now, the cool stuffs</h2>

<p>You can use (almost) any character you like between the two <code class="highlighter-rouge">%</code>, except %, of course. But‚Ä¶ really <strong>ANYTHING</strong>? Because, you know, sometimes you just need to make some pizza function calls, or maybe you just like emojis.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Not working </span><span class="w">

</span><span class="err">üçï</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dplyr</span><span class="o">::</span><span class="n">slice</span><span class="w">
</span><span class="o">&gt;</span><span class="w"> </span><span class="n">Erreur</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="n">unexpected</span><span class="w"> </span><span class="n">input</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="s2">"ÔøΩ"</span><span class="w">

</span><span class="c1"># Working </span><span class="w">

</span><span class="n">`%üçï%`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dplyr</span><span class="o">::</span><span class="n">slice</span><span class="w">
</span><span class="n">iris</span><span class="w"> </span><span class="o">%üçï%</span><span class="w"> </span><span class="m">2</span><span class="w">

</span><span class="c1"># A tibble: 1 x 5</span><span class="w">
  </span><span class="n">Sepal.Length</span><span class="w"> </span><span class="n">Sepal.Width</span><span class="w"> </span><span class="n">Petal.Length</span><span class="w"> </span><span class="n">Petal.Width</span><span class="w"> </span><span class="n">Species</span><span class="w">
         </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">       </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">        </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">       </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">  </span><span class="o">&lt;</span><span class="n">fctr</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w">          </span><span class="m">5.1</span><span class="w">         </span><span class="m">3.5</span><span class="w">          </span><span class="m">1.4</span><span class="w">         </span><span class="m">0.2</span><span class="w">  </span><span class="n">setosa</span><span class="w">

</span></code></pre></div></div>

<p>So, anybody has some spare time to recode the whole tidyverse in emojis? üòÉ</p>

<p>More on infix functions :</p>

<ul>
  <li><a href="https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Special-operators">R language definition</a></li>
  <li><a href="http://adv-r.had.co.nz/Functions.html">Advanced R - Functions</a></li>
</ul>
 </content>
 </item>
 
 <item>
  <title>New R Package ‚Äî proustr</title>
  <description></description>
  <link>/proustr-package/</link>
  <guid isPermaLink="true">http://localhost:4000/proustr-package/</guid>
  <pubDate>2017-06-05 00:00:00 +0200</pubDate>
  <content><p><code class="highlighter-rouge">proustr</code> is now on <a href="https://cran.r-project.org/web/packages/proustr/index.html">CRAN</a>.</p>

<p align="center"><img src="https://github.com/ColinFay/proustr/blob/master/proustr_hex.png?raw=true" width="250" /></p>

<h2 id="an-r-package-for-marcel-prousts-a-la-recherche-du-temps-perdu">An R Package for Marcel Proust‚Äôs A La Recherche Du Temps Perdu</h2>

<p>This package gives you access to all the books from Marcel Proust ‚Äú√Ä la recherche du temps perdu‚Äù collection. This collection is divided in books, which are divided in volumes. Inspired by the package <a href="https://github.com/juliasilge/janeaustenr">janeaustenr</a> by Julia Silge.</p>

<p>All books have been downloaded from <a href="https://beq.ebooksgratuits.com/auteurs/Proust/proust.htm">BEQ</a></p>

<p>Here is a list of all the books contained in this pacakage :</p>

<ul>
  <li>Du c√¥t√© de chez Swann (1913): 2 volumes <code class="highlighter-rouge">ducotedechezswann1</code> &amp; <code class="highlighter-rouge">ducotedechezswann2</code>.</li>
  <li>√Ä l‚Äôombre des jeunes filles en fleurs (1919): 3 volumes <code class="highlighter-rouge">alombredesjeunesfillesenfleurs1</code>, <code class="highlighter-rouge">alombredesjeunesfillesenfleurs2</code>, and <code class="highlighter-rouge">alombredesjeunesfillesenfleurs3</code>.</li>
  <li>Le C√¥t√© de Guermantes (1920-1921): 3 volumes <code class="highlighter-rouge">lecotedeguermantes1</code>, <code class="highlighter-rouge">lecotedeguermantes2</code> and <code class="highlighter-rouge">lecotedeguermantes3</code></li>
  <li>Sodome et Gomorrhe I et II (1921-1922) : 2 volumes <code class="highlighter-rouge">sodomeetgomorrhe1</code> and <code class="highlighter-rouge">sodomeetgomorrhe2</code>.</li>
  <li>La Prisonni√®re (1923) : 2 volumes <code class="highlighter-rouge">laprisonniere1</code> and <code class="highlighter-rouge">laprisonniere2</code>.</li>
  <li>Albertine disparue (1925, also know as : La Fugitive) : <code class="highlighter-rouge">albertinedisparue</code>.
Le Temps retrouv√© (1927) : 2 volumes <code class="highlighter-rouge">letempretrouve1</code> and <code class="highlighter-rouge">letempretrouve2</code>.</li>
</ul>

<h2 id="install-proustr">Install proustr</h2>

<p>Install this package directly in R :</p>

<p>From CRAN :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"proustr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>From Github :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ColinFay/proustr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="examples">Examples</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ThinkRstat/stopwords"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">proustr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stopwords</span><span class="p">)</span><span class="w">
</span><span class="n">proust_books</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">.</span><span class="o">$</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="s2">"‚Äô"</span><span class="p">,</span><span class="w"> </span><span class="s2">" "</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">word</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">stopwords_iso</span><span class="o">$</span><span class="n">fr</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">sort</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># A tibble: 10 x 2</span><span class="w">
         </span><span class="n">word</span><span class="w">     </span><span class="n">n</span><span class="w">
        </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
 </span><span class="m">1</span><span class="w">        </span><span class="n">mme</span><span class="w">  </span><span class="m">3106</span><span class="w">
 </span><span class="m">2</span><span class="w">      </span><span class="n">faire</span><span class="w">  </span><span class="m">2869</span><span class="w">
 </span><span class="m">3</span><span class="w">  </span><span class="n">albertine</span><span class="w">  </span><span class="m">2389</span><span class="w">
 </span><span class="m">4</span><span class="w">      </span><span class="n">grand</span><span class="w">  </span><span class="m">1833</span><span class="w">
 </span><span class="m">5</span><span class="w"> </span><span class="n">guermantes</span><span class="w">  </span><span class="m">1807</span><span class="w">
 </span><span class="m">6</span><span class="w">        </span><span class="n">vie</span><span class="w">  </span><span class="m">1732</span><span class="w">
 </span><span class="m">7</span><span class="w">      </span><span class="n">temps</span><span class="w">  </span><span class="m">1715</span><span class="w">
 </span><span class="m">8</span><span class="w">      </span><span class="n">swann</span><span class="w">  </span><span class="m">1682</span><span class="w">
 </span><span class="m">9</span><span class="w">     </span><span class="n">jamais</span><span class="w">  </span><span class="m">1639</span><span class="w">
</span><span class="m">10</span><span class="w">       </span><span class="n">voir</span><span class="w">  </span><span class="m">1568</span><span class="w">
</span></code></pre></div></div>

<h3 id="contact">Contact</h3>

<p>Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a> !</p>
 </content>
 </item>
 
 <item>
  <title>[Just for fun] New R package ‚Äî tuRbonegro</title>
  <description></description>
  <link>/rstats-turbonegro/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-turbonegro/</guid>
  <pubDate>2017-05-31 00:00:00 +0200</pubDate>
  <content><p>Because sometime, you just need a little bit of punk with your coding.</p>

<!--more-->

<h2 id="turbonegro">tuRbonegro</h2>

<p>Spoiler: the tuRbonegro package was created for fun only ;)</p>

<p><img src="https://github.com/ColinFay/tuRbonegro/raw/master/hex_turbo.png" alt="tuRbonegro_hex" /></p>

<p>This package contains only one function, which launch and plays a random Turbonegro clip in your R Viewer. Because you know, some time you need some deathpunk.</p>

<p>This function has three parameters:</p>

<ul>
  <li><code class="highlighter-rouge">width</code>: width of the video, in pixel. Default is 560.</li>
  <li><code class="highlighter-rouge">height</code>: width of the video, in pixel. Default is 315.</li>
  <li><code class="highlighter-rouge">autoplay</code>: set video autoplay. Default is TRUE.</li>
</ul>

<h2 id="install">Install</h2>

<p>To install on your machine :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"ColinFay/tuRbonegro"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="play-a-random-clip">Play a random clip</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tuRbonegro</span><span class="p">)</span><span class="w">
</span><span class="n">tuRbonegro</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="https://github.com/ColinFay/tuRbonegro/raw/master/tuRbonegro.png" alt="tuRbonegro_pic" /></p>

<p>And turn the volume on!</p>
 </content>
 </item>
 
 <item>
  <title>#RStats et Microsoft Computer Vision</title>
  <description></description>
  <link>/rstats-microsoft-computer-vision-api-2/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-microsoft-computer-vision-api-2/</guid>
  <pubDate>2017-05-10 00:00:00 +0200</pubDate>
  <content><h2 id="exploration-des-photos-de-profils-des-twittos-rstats-avec-lapi-microsoft-computer-vision">Exploration des photos de profils des twittos #RStats avec l‚ÄôAPI Microsoft Computer Vision.</h2>

<!--more-->

<p>Ce billet de blog s‚Äôinspire du travail de Maelle Salmon avec <a href="http://www.masalmon.eu/2017/03/19/facesofr/" target="_blank" rel="noopener noreferrer">Faces of #RStats twitter</a> et d‚Äôun article sur Data Bzh utilisant l‚ÄôAPI Microsoft Computer Vision pour examiner d‚Äôanciennes <a href="http://data-bzh.fr/photographies-fonds-de-la-guerre-14-18-en-bretagne/" target="_blank" rel="noopener noreferrer">photos de Bretagne</a> .</p>
<h3 id="microsoft-computer-vision">Microsoft Computer Vision</h3>
<p>Cette <a href="https://www.microsoft.com/cognitive-services/en-us/computer-vision-api" target="_blank" rel="noopener noreferrer">API</a> est utilis√©e pour d√©crire et √©tiqueter automatiquement une image. Voici comment vous pouvez l‚Äôutiliser avec R, avec un jeu de donn√©es regroupant des images de profils Twitter.</p>
<h3 id="les-visages-rstats--√©tiquetage-automatique">Les visages #RStats ‚Äî √âtiquetage automatique</h3>
<p>Dans cet article, vous trouverez un tuto sur comment obtenir des photos de profil de Twitter et les √©tiqueter automatiquement avec Microsoft Computer Vision.</p>
<h4 id="collecter-les-donn√©es">Collecter les donn√©es</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rtweet</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">jsonlite</span><span class="p">)</span><span class="w">
</span><span class="n">token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_token</span><span class="p">(</span><span class="w"> </span><span class="n">app</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"XX"</span><span class="p">,</span><span class="w"> </span><span class="n">consumer_key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"XXX"</span><span class="p">,</span><span class="w"> </span><span class="n">consumer_secret</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">"</span><span class="n">XX</span><span class="w">
</span><span class="n">users</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">search_users</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="w"> </span><span class="s1">'#rstats'</span><span class="p">,</span><span class="w">
                      </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w">
                      </span><span class="n">parse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unique</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><em>Note: J‚Äôai ici anonymis√© mes API keys.</em>
Maintenant, utilisons la colonne <code class="highlighter-rouge">profile_image_url</code> pour obtenir l‚Äôurl des photos de profil.</p>

<p>D‚Äôabord, cette variable a besoin d‚Äô√™tre nettoy√©e : les URL contiennent un param√®tre <em>normal</em>, cr√©ant des images 48x48. L‚ÄôAPI Microsoft a besoin d‚Äôune r√©solution minimum de 50x50, nous devons donc nous d√©barrasser de ce param√®tre.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users</span><span class="o">$</span><span class="n">profile_image_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"_normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">users</span><span class="o">$</span><span class="n">profile_image_url</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h4 id="interroger-lapi--microsoft">Interroger l‚ÄôAPI  Microsoft</h4>
<p>D‚Äôabord, inscrivez-vous sur <a href="https://www.microsoft.com/cognitive-services/en-us/computer-vision-api" target="_blank" rel="noopener noreferrer">Microsoft API service</a>, et lancez un essai gratuit. Ce compte gratuit est limit√©: vous ne pouvez faire que 5 000 appels par mois et 20 par minute. Mais c‚Äôest bien assez pour notre cas (478 images √† regarder).</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_api</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">users</span><span class="p">[,</span><span class="m">25</span><span class="p">],</span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">request_body</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w">
  </span><span class="n">request_body_json</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"\\[|\\]"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">toJSON</span><span class="p">(</span><span class="n">request_body</span><span class="p">,</span><span class="w"> </span><span class="n">auto_unbox</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TRUE"</span><span class="p">))</span><span class="w">
  </span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">POST</span><span class="p">(</span><span class="s2">"https://api.projectoxford.ai/vision/v1.0/analyze?visualFeatures=Tags,Description,Faces,Categories"</span><span class="p">,</span><span class="w">
                 </span><span class="n">body</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">request_body_json</span><span class="p">,</span><span class="w">
                 </span><span class="n">add_headers</span><span class="p">(</span><span class="n">.headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Content-Type"</span><span class="o">=</span><span class="s2">"application/json"</span><span class="p">,</span><span class="s2">"Ocp-Apim-Subscription-Key"</span><span class="o">=</span><span class="s2">"XXX"</span><span class="p">)))</span><span class="w">
  </span><span class="n">Output</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">content</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">){</span><span class="w">
    </span><span class="n">cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">captions</span><span class="w">
  </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NA</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="m">0</span><span class="p">){</span><span class="w">
    </span><span class="n">tag</span><span class="w"> </span><span class="o">&lt;-</span><span class="nf">list</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">cap</span><span class="p">,</span><span class="w"> </span><span class="n">tag</span><span class="p">)</span><span class="w">
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><em>Remarque: J‚Äôai (√† nouveau) cach√© ma cl√© API.</em>
<em>Ce code peut prendre un certain temps √† ex√©cuter, car il contient un appel √† la fonction Sys.sleep.</em> Pour en savoir plus, <a href="http://colinfay.me/rstats-api-calls-sys-sleep/" target="_blank" rel="noopener noreferrer">lire ce billet</a>.</p>

<h4 id="cr√©er-des-tibbles">Cr√©er des tibbles</h4>
<p>Maintenant, j‚Äôai un tibble avec une colonne contenant les listes de l√©gendes et de score de confiance, et une colonne avec les listes des balises associ√©es √† chaque image.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">users_api</span><span class="o">$</span><span class="n">cap</span><span class="p">,</span><span class="w"> </span><span class="n">unlist</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> 
</span><span class="n">users_cap</span><span class="o">$</span><span class="n">confidence</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">users_cap</span><span class="o">$</span><span class="n">confidence</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="nf">as.numeric</span><span class="p">()</span><span class="w">
</span><span class="n">users_tags</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">users_api</span><span class="o">$</span><span class="n">tag</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">data.frame</span><span class="p">(</span><span class="n">tag</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="visualisation">Visualisation</h3>
<p>Chaque l√©gende est donn√©e avec un score de confiance.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">users_cap</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">confidence</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">,</span><span class="w"> </span><span class="n">bins</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Confidence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Captions confidence"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-caption-confidence.png"><img class="size-full wp-image-1583" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-caption-confidence.png" alt="" width="1000" height="500" /></a> Cliquez pour zoomer</p>

<p>Il semble que les scores de confiance pour les l√©gendes ne soient pas tr√®s forts.</p>

<p>Regardons les l√©gendes et les balises les plus fr√©quentes.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">somme</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">.</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">25</span><span class="p">,]</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Captions"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">   
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-captions-users.png"><img class="size-full wp-image-1580" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-captions-users.png" alt="" width="800" height="400" /></a> Cliquez pour zoomer</p>

<p>Eh bien ‚Ä¶ Je ne suis pas s√ªr qu‚Äôil y ait tant de passionn√©s de surf et de skate dans notre liste, mais soit‚Ä¶</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_tags</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">somme</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">.</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">25</span><span class="p">,]</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Tags"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">   
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">


</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-tags.png"><img class="aligncenter size-full wp-image-1584" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-tags.png" alt="" width="1000" height="500" /></a></p>

<h2 id="quelques-v√©rifications">Quelques v√©rifications</h2>
<p>Jetons un coup d‚Äô≈ìil √† l‚Äôimage avec le score de confiance le plus √©lev√©, avec la l√©gende que l‚ÄôAPI lui a donn√©e.</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/9mJTF0PO.jpeg"><img class="size-full wp-image-1459" src="https://colinfay.github.io/wp-content/uploads/2017/04/9mJTF0PO.jpeg" alt="" width="300" height="300" /></a></p>

<p>A man wearing a suit and tie ‚Äî 0.92 confidence.</p>

<p>Il n‚Äôa pas de cravate, mais l‚ÄôAPI a bien saisi le reste.</p>

<p>Et maintenant, juste pour le plaisir, la l√©gende avec le score de confiance le plus bas :</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/czR2-o0M.jpg"><img class="size-full wp-image-1460" src="https://colinfay.github.io/wp-content/uploads/2017/04/czR2-o0M.jpg" alt="" width="300" height="300" /></a></p>

<p>A close up of two giraffes near a tree - 0.02 confidence</p>

<p>Bien vu ;)</p>

<p>Pour une v√©rification plus plus syst√©mique, regardons un collage d‚Äôimages, r√©alis√© √† partir des l√©gendes les plus fr√©quentes.</p>
<p style="text-align: right;">_Remarque: afin de se concentrer sur les d√©tails des images et de se d√©barrasser du genre des l√©gendes, j'ai remplac√© "man / woman / men / womens" par "persoe / persons" dans l'ensemble de donn√©es, avant de cr√©er ces collages. _</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/caption_man_skatepark.jpg"><img class="size-large wp-image-1533" src="https://colinfay.github.io/wp-content/uploads/2017/04/caption_man_skatepark-1024x1024.jpg" alt="" width="840" height="840" /></a></p>

<p>A person on a surf board in a skate park</p>

<p>¬†</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/smiling_camera.jpg"><img class="size-large wp-image-1556" src="https://colinfay.github.io/wp-content/uploads/2017/04/smiling_camera-1024x514.jpg" alt="" width="840" height="422" /></a></p>

<p>A person is smiling at the camera - Confidence mean : 0.54</p>

<p>¬†</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/caption_girafe.jpg"><img class="size-large wp-image-1535" src="https://colinfay.github.io/wp-content/uploads/2017/04/caption_girafe-1024x514.jpg" alt="" width="840" height="422" /></a></p>

<p>A close up of two giraffes near a tree ‚Äî Confidence mean : 0.0037</p>

<p>¬†</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/mosaic_glasses.jpg"><img class="size-large wp-image-1557" src="https://colinfay.github.io/wp-content/uploads/2017/04/mosaic_glasses-1024x514.jpg" alt="" width="840" height="422" /></a> A person wearing glasses looking at the camera</p>

<p>Les premier et troisi√®me collages sont clairement erron√©s sur les l√©gendes. Mais, nous pouvons voir que le score de confiance y est tr√®s bas. Le deuxi√®me et le quatri√®me, cependant, semblent √™tre plus pr√©cis. Peut-√™tre que nous devons essayer √† nouveau avec d‚Äôautres images, juste pour √™tre s√ªr ‚Ä¶ Mais √ßa sera pour une autre fois üòâ</p>
 </content>
 </item>
 
 <item>
  <title>Mapping the French second round results with R</title>
  <description></description>
  <link>/mapping-the-french-second-round-results-with-r/</link>
  <guid isPermaLink="true">http://localhost:4000/mapping-the-french-second-round-results-with-r/</guid>
  <pubDate>2017-05-09 00:00:00 +0200</pubDate>
  <content><h2 id="visualising-the-second-round-results-with-maps-made-with-r-">Visualising the second round results with maps made with R. <!--more--></h2>
<h3 id="the-dataset">The dataset</h3>
<p>The dataset used here is available on data.gouv: <a href="https://www.data.gouv.fr/fr/datasets/election-presidentielle-des-23-avril-et-7-mai-2017-resultats-du-2eme-tour-2/" target="_blank" rel="noopener noreferrer">Election pr√©sidentielle des 23 avril et 7 mai 2017 - R√©sultats du 2√®me tour</a>. In order to make it easier to import, I‚Äôve manually converted the xls file to csv.</p>
<h3 id="load-libraries-and-data">Load libraries and data</h3>
<p>Let‚Äôs load this dataset, as well as the map of France available in <em>ggplot2</em>.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringi</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv2</span><span class="p">(</span><span class="s2">"Presidentielle_2017_Resultats_Communes_Tour_2.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_data</span><span class="p">(</span><span class="s2">"france"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="clean-data">Clean data</h3>
<p>Before mapping the results, we need to transform and clean the data.frame.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">result</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">`Libell√© du d√©partement`</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">tot_vot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Exprim</span><span class="err">√©</span><span class="n">s</span><span class="p">),</span><span class="w"> 
            </span><span class="n">tot_blanc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Blancs</span><span class="p">),</span><span class="w">
            </span><span class="n">pourcentage_blanc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tot_blanc</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Votants</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w"> 
            </span><span class="n">tot_abs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Abstentions</span><span class="p">),</span><span class="w"> 
            </span><span class="n">pourcentage_abs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tot_abs</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Inscrits</span><span class="p">)</span><span class="o">*</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w">
            </span><span class="n">tot_macron</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Voix</span><span class="p">),</span><span class="w"> 
            </span><span class="n">tot_lepen</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Voix_1</span><span class="p">),</span><span class="w"> 
            </span><span class="n">pourcentage_macron</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tot_macron</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">tot_vot</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w"> 
            </span><span class="n">pourcentage_lepen</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tot_lepen</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">tot_vot</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">100</span><span class="p">)</span><span class="w"> 
</span><span class="nf">names</span><span class="p">(</span><span class="n">result</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"region"</span><span class="w">
</span><span class="n">result</span><span class="o">$</span><span class="n">region</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stri_trans_general</span><span class="p">(</span><span class="n">result</span><span class="o">$</span><span class="n">region</span><span class="p">,</span><span class="w"> </span><span class="s2">"Latin-ASCII"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Cote-d'Or"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cote-Dor"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Cotes-d'Armor"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cotes-Darmor"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Corse-du-Sud"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Corse du Sud"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Val-d'Oise"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Val-Doise"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">str_replace_all</span><span class="p">(</span><span class="s2">"Corse-du-Sud"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Corse du Sud"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>We now got a table containing the key figures by department. The name of the first column has been modified, in order to match the <code class="highlighter-rouge">region</code> name of the <code class="highlighter-rouge">map</code> table. The character replacement sequence is due to the English notation in <code class="highlighter-rouge">map</code>, and was required in order to join the tables properly.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result_map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">map</span><span class="p">[,</span><span class="m">-6</span><span class="p">],</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">result</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="visualisation">Visualisation</h3>
<p>Let‚Äôs now project our variables on maps. You need to play with the <code class="highlighter-rouge">scale_fill</code> argument to manage the color scheme used on each card.</p>

<p><em>Note : this article was first published in french. I‚Äôve kept the original plot titles.</em></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map_theme</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">theme</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(),</span><span class="w">
                   </span><span class="n">plot.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">),</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">18</span><span class="p">,</span><span class="w"> </span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">),</span><span class="w">
                   </span><span class="n">axis.text.x</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
                   </span><span class="n">axis.text.y</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
                   </span><span class="n">axis.ticks</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
                   </span><span class="n">axis.title.x</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
                   </span><span class="n">axis.title.y</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
                   </span><span class="n">panel.grid.major</span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">(),</span><span class="w"> 
                   </span><span class="n">panel.background</span><span class="o">=</span><span class="w"> </span><span class="n">element_blank</span><span class="p">())</span><span class="w"> 

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">result_map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pourcentage_blanc</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_gradient</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage votes blancs"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage de votes blancs au second tour des pr√©sidentielles 2017"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Donn√©es via data.gouv"</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">map_theme</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/05/second-tour-blanc.png"><img class="aligncenter size-full wp-image-1716" src="https://colinfay.github.io/wp-content/uploads/2017/05/second-tour-blanc.png" alt="blancs du second tour" width="1000" height="500" /></a></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">result_map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pourcentage_abs</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_gradient2</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage Abstention"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage d'abstention au second tour des pr√©sidentielles 2017"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Donn√©es via data.gouv"</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">map_theme</span><span class="w"> 
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/05/abstention-second-tour.png"><img class="aligncenter size-full wp-image-1717" src="https://colinfay.github.io/wp-content/uploads/2017/05/abstention-second-tour.png" alt="abstention second tour" width="1000" height="500" /></a></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">result_map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pourcentage_macron</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_gradientn</span><span class="p">(</span><span class="n">colours</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"yellow"</span><span class="p">,</span><span class="s2">"red"</span><span class="p">),</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage E. Macron"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats de E. Macron au second tour des pr√©sidentielles 2017"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Donn√©es via data.gouv"</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">map_theme</span><span class="w"> 
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/05/macron.png"><img class="aligncenter size-full wp-image-1725" src="https://colinfay.github.io/wp-content/uploads/2017/05/macron.png" alt="macron second tour" width="1000" height="500" /></a></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">result_map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pourcentage_lepen</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_gradientn</span><span class="p">(</span><span class="n">colours</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">terrain.colors</span><span class="p">(</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Pourcentage M. Le Pen"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats de M. Le Pen au second tour des pr√©sidentielles 2017"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Donn√©es via data.gouv"</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">map_theme</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/05/mlp.png"><img class="aligncenter size-full wp-image-1724" src="https://colinfay.github.io/wp-content/uploads/2017/05/mlp.png" alt="Votes pour Marine Le Pen au second tour" width="1000" height="500" /></a></p>
 </content>
 </item>
 
 <item>
  <title>Predict french vote with R</title>
  <description></description>
  <link>/predict-french-vote-with-r/</link>
  <guid isPermaLink="true">http://localhost:4000/predict-french-vote-with-r/</guid>
  <pubDate>2017-04-28 00:00:00 +0200</pubDate>
  <content><h2 id="lets-try-a-prediction-of-the-french-presidential-vote-based-on-the-results-from-the-first-round">Let‚Äôs try a prediction of the french presidential vote, based on the results from the first round.</h2>
<!--more-->

<p>Before the second poll of the french election (May 7th), candidates are invited to give voting instructions to their supporters, supporting one of the candidates still in the running. Let‚Äôs try to predict the results of the second round, based on these information.</p>

<p>Disclaimer: the predictions contained in this work are purely hypothetical, and rely on very strong and unrealistic assumptions, like ‚Äúvoters for a candidate will follow his voting instructions‚Äù.</p>
<h3 id="creating-the-data">Creating the data</h3>
<p>I‚Äôve extracted the info from :</p>
<ul>
  <li>‚Äúwho supports who‚Äù on <a href="http://www.francetvinfo.fr/elections/presidentielle/fillon-melenchon-hamon-poutou-quelle-est-la-consigne-de-vote-des-neuf-elimines-en-vue-du-second-tour_2158950.html">France Tv</a></li>
  <li>1st round results on <a href="https://www.data.gouv.fr/fr/datasets/election-presidentielle-des-23-avril-et-7-mai-2017-resultats-du-1er-tour/">data.gouv</a></li>
</ul>

<p>Let‚Äôs create the tibble.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="w">
  </span><span class="n">NOM</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"M√âLENCHON"</span><span class="p">,</span><span class="s2">"FILLON"</span><span class="p">,</span><span class="s2">"LEPEN"</span><span class="p">,</span><span class="s2">"HAMON"</span><span class="p">,</span><span class="s2">"DUPONT-AIGNAN"</span><span class="p">,</span><span class="s2">"POUTOU"</span><span class="p">,</span><span class="s2">"LASSALLE"</span><span class="p">,</span><span class="s2">"ARTHAUD"</span><span class="p">,</span><span class="s2">"ASSELINEAU"</span><span class="p">,</span><span class="w"> </span><span class="s2">"CHEMINADE"</span><span class="p">,</span><span class="s2">"BLANC"</span><span class="p">),</span><span class="w">
  </span><span class="n">SIDE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"CENTRE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DROITE"</span><span class="p">,</span><span class="s2">"DROITE"</span><span class="p">,</span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="s2">"DROITE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"SANS ETIQUETTE"</span><span class="p">,</span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="s2">"DROITE"</span><span class="p">,</span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"BLANC"</span><span class="p">),</span><span class="w">
  </span><span class="n">APPEL</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"NSP"</span><span class="p">,</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"LEPEN"</span><span class="p">,</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"NSP"</span><span class="p">,</span><span class="s2">"NSP"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"NSP"</span><span class="p">,</span><span class="s2">"BLANC"</span><span class="p">,</span><span class="s2">"NSP"</span><span class="p">,</span><span class="s2">"NSP"</span><span class="p">,</span><span class="s2">"BLANC"</span><span class="p">),</span><span class="w"> 
  </span><span class="n">VOIX</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">8654331</span><span class="p">,</span><span class="w"> </span><span class="m">7058859</span><span class="p">,</span><span class="w"> </span><span class="m">7211121</span><span class="p">,</span><span class="m">7678558</span><span class="p">,</span><span class="w"> </span><span class="m">2291025</span><span class="p">,</span><span class="w"> </span><span class="m">1694898</span><span class="p">,</span><span class="w"> </span><span class="m">394510</span><span class="p">,</span><span class="w"> 
           </span><span class="m">435367</span><span class="p">,</span><span class="w"> </span><span class="m">232439</span><span class="p">,</span><span class="w"> </span><span class="m">332592</span><span class="p">,</span><span class="w"> </span><span class="m">65671</span><span class="p">,</span><span class="w"> </span><span class="m">655404</span><span class="p">),</span><span class="w">
  </span><span class="n">POURC</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">VOIX</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="m">36704775</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">100</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Notes: in the APPEL column, the ‚ÄúNSP‚Äù factor means that the candidate didn‚Äôt give instructions to his/her supporters.</p>

<p>Let‚Äôs start by a short visualisation of the results :</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">result</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">NOM</span><span class="p">,</span><span class="w"> </span><span class="n">POURC</span><span class="p">),</span><span class="w"> </span><span class="n">POURC</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats du premier tour en France"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/resultats-premier-tour.png"><img class="aligncenter size-full wp-image-1673" src="https://colinfay.github.io/wp-content/uploads/2017/04/resultats-premier-tour.png" alt="R√©sultats du premier tour" width="1000" height="500" /></a></p>
<h3 id="simulating-second-round-results">Simulating second round results</h3>
<p>Here are the results if everyone who voted for a candidate on the first round follows the instructions give by this candidate.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">result</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="n">POURC</span><span class="p">),</span><span class="w"> </span><span class="n">POURC</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats simul√©s du second tour en France"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Suivi des consignes de vote"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-1.png"><img class="aligncenter size-full wp-image-1674" src="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-1.png" alt="Simulation 1" width="1000" height="500" /></a>
Ok, now what do we do with the candidate who hasn‚Äôt give any instruction?</p>
<h4 id="lets-try-various-scenarios">Let‚Äôs try various scenarios.</h4>
<p>What would happen if the NSP equally vote for each candidate?</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">sim1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">result</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">APPEL</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">VOIX</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">POURC</span><span class="p">))</span><span class="w">
</span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="p">[[</span><span class="m">1</span><span class="p">]],</span><span class="w"> 
               </span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="p">[[</span><span class="m">2</span><span class="p">]]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="p">[[</span><span class="m">4</span><span class="p">]]</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w">
               </span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="p">[[</span><span class="m">3</span><span class="p">]]</span><span class="o">+</span><span class="w"> </span><span class="n">sim1</span><span class="o">$</span><span class="n">VOIX</span><span class="p">[[</span><span class="m">4</span><span class="p">]]</span><span class="o">/</span><span class="m">2</span><span class="p">,</span><span class="w">
               </span><span class="kc">NA</span><span class="p">)</span><span class="w">
</span><span class="n">sim1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">na.omit</span><span class="p">(</span><span class="n">sim1</span><span class="p">)</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">sim1</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="n">VOIX</span><span class="p">),</span><span class="w"> </span><span class="n">VOIX</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats simul√©s du second tour en France"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"NSP √† 50 / 50 Macron - Le Pen"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-2.png"><img class="aligncenter size-full wp-image-1678" src="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-2.png" alt="" width="1000" height="500" /></a></p>

<p>Ok, we‚Äôre good with that one. What would happen if all the NSP vote for Marine Le Pen?</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">APPEL</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">result</span><span class="o">$</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="s2">"NSP"</span><span class="p">,</span><span class="w"> </span><span class="s2">"LEPEN"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="n">POURC</span><span class="p">),</span><span class="w"> </span><span class="n">POURC</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats simul√©s du second tour en France"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"NSP 100% Marine Le Pen"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-3.png"><img class="aligncenter size-full wp-image-1677" src="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-3.png" alt="" width="1000" height="500" /></a></p>

<p>Aaaand that‚Äôs tight, but Macron still wins. What if all NSP go to Macron?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">APPEL</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">result</span><span class="o">$</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="s2">"NSP"</span><span class="p">,</span><span class="w"> </span><span class="s2">"MACRON"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">APPEL</span><span class="p">,</span><span class="w"> </span><span class="n">POURC</span><span class="p">),</span><span class="w"> </span><span class="n">POURC</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats simul√©s du second tour en France"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"NSP 100% Macron"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-4.png"><img class="aligncenter size-full wp-image-1676" src="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-4.png" alt="" width="1000" height="500" /></a></p>

<p>Yeah, that was obvious.</p>

<h3 id="left-vs-right-wing">Left vs Right wing</h3>
<p>OK, let‚Äôs try something else. What if all voters who chose a right wing candidate vote for Marine Le Pen, and voters for a left wing candidate Emmanuel Macron ?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">data.frame</span><span class="p">(</span><span class="n">SIDE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"CENTRE"</span><span class="p">,</span><span class="s2">"GAUCHE"</span><span class="p">,</span><span class="s2">"DROITE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"BLANC"</span><span class="p">,</span><span class="w"> </span><span class="s2">"SANS ETIQUETTE"</span><span class="p">),</span><span class="w"> 
                       </span><span class="n">SIM</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"MACRON"</span><span class="p">,</span><span class="s2">"LEPEN"</span><span class="p">,</span><span class="w"> </span><span class="s2">"BLANC"</span><span class="p">,</span><span class="w"> </span><span class="s2">"BLANC"</span><span class="p">)),</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"SIDE"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">SIM.y</span><span class="p">,</span><span class="w"> </span><span class="n">POURC</span><span class="p">),</span><span class="w"> </span><span class="n">POURC</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"R√©sultats simul√©s du second tour en France"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-5.png"><img class="aligncenter size-full wp-image-1675" src="https://colinfay.github.io/wp-content/uploads/2017/04/simulation-second-tour-5.png" alt="" width="1000" height="500" /></a></p>

<p>Ok, still tight, but Emmanuel Macron still wins</p>
 </content>
 </item>
 
 <item>
  <title>Rstats Create A Pixel Map With R</title>
  <description></description>
  <link>/rstats-create-a-pixel-map-with-r/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-create-a-pixel-map-with-r/</guid>
  <pubDate>2017-04-13 00:00:00 +0200</pubDate>
  <content><h2 id="the-whole-webdesign-of-data-bzh-has-recently-been-updated-with-ita-new-header-containing-a-pixelized-map-of-brittany-heres-how-you-can-replicate-itin-r-with-a-map-of-france-us-and-the-world">The whole webdesign of <a href="http://data-bzh.fr" target="_blank">Data Bzh</a> has recently been updated. With it,¬†a new header containing a pixelized map of Brittany. Here‚Äôs how you can replicate it¬†in R, with a map of France, US and the world.<!--more--></h2>

<h3 id="load-map">Load map</h3>

<p>First, you‚Äôll need to load the ggplot2 package, and one of the default¬†maps ‚Äî ¬†the package includes <em>county</em>, <em>france</em>, <em>italy</em>, <em>nz</em>, <em>state</em>, <em>usa</em>, <em>world</em>, and <em>world2</em>. For more info, see¬†<em>?map_data.</em></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_data</span><span class="p">(</span><span class="s2">"france"</span><span class="p">)</span><span class="w">

</span></code></pre></div></div>

<p>You now have a dataframe ready to be plotted. In your ggplot call, set the data argument to <em>map</em>, the x and y of your aesthetic to <em>long</em> and <em>lat</em>, and the group arg to <em>group</em>.¬†</p>

<p>For this kind of map, you need to use the geom_polygon function, which works pretty much like <em>geom_path</em>, except the polygons are connnected with the¬†<em>group</em> arg, and can be filled.¬†</p>

<p>The <em>coord_map _function¬†sets the coordinate system for projecting a map, and allows to keep the proportions fixed, no matter how you change the size of your viewport. Note that you can also use _coord_fixed</em> to always keep the x/y ratio to 1.¬†</p>

<p>Finally, <em>theme_void</em> allows you to get rid of everything except the geom.¬†</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/void-france-map.png"><img class="aligncenter size-full wp-image-1607" src="https://colinfay.github.io/wp-content/uploads/2017/04/void-france-map.png" alt="" width="500" height="500" /></a></p>

<p>Ok, not really sexy, I‚Äôll admit that :)</p>

<p>But here‚Äôs is the tip for creating a pixel effect : round the <em>long</em> and <em>lat</em>, in order¬†to make the border more squared (now, we‚Äôll also fill according to groups).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="nf">round</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">group</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france.png"><img class="aligncenter size-full wp-image-1608" src="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france.png" alt="" width="500" height="500" /></a></p>

<p>Let‚Äôs try a more hardcore pixelization :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="nf">round</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">group</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france-2.png"><img class="aligncenter size-full wp-image-1609" src="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france-2.png" alt="" width="500" height="500" /></a></p>

<p>Ok, that‚Äôs not very informative, but this map looks cool, right!¬†</p>

<p>For an even more sexy look, you can put the borders back with a <em>geom_path</em>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="nf">round</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">group</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_path</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">map</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france-3.png"><img class="aligncenter size-full wp-image-1610" src="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-france-3.png" alt="" width="500" height="500" /></a></p>

<p>Tada!</p>
<h3 id="us--world-map">US &amp; world map</h3>
<p>Here is the code you can use to make a pixel world map.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map_data</span><span class="p">(</span><span class="s2">"world"</span><span class="p">),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="nf">round</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">group</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_fixed</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-world-map.png"><img class="aligncenter size-full wp-image-1611" src="https://colinfay.github.io/wp-content/uploads/2017/04/pixel-world-map.png" alt="" width="1000" height="500" /></a></p>

<p>And a US map:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">map_data</span><span class="p">(</span><span class="s2">"state"</span><span class="p">),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">round</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="nf">round</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as.factor</span><span class="p">(</span><span class="n">group</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_polygon</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">guides</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_void</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/us-pixel-map.png"><img class="aligncenter size-full wp-image-1613" src="https://colinfay.github.io/wp-content/uploads/2017/04/us-pixel-map.png" alt="" width="1000" height="500" /></a></p>

<p>And, of course, you can create your own pixel maps with other shapefiles ;)¬†</p>

<p>The larger the portion of the earth you want to map, the more ‚Äúimprecise‚Äù you need to make your lat and long variables ‚Äî here, we‚Äôre just cutting off the decimal part of these number, but you can imagine rounding to the closest decile. Anyone to give it a try?¬†</p>
 </content>
 </item>
 
 <item>
  <title>Playing with #RStats and Microsoft Computer Vision API</title>
  <description></description>
  <link>/playing-with-rstats-and-microsoft-computer-vision-api/</link>
  <guid isPermaLink="true">http://localhost:4000/playing-with-rstats-and-microsoft-computer-vision-api/</guid>
  <pubDate>2017-04-02 21:40:58 +0000</pubDate>
  <content><h2 id="playing-around-with-the-faces-of-rstats-and-microsoft-computer-vision-api">Playing around with the faces of #RStats and Microsoft Computer Vision API.</h2>
<!--more-->

<p>This blogpost is inspired by the work of Maelle Salmon with <a href="http://www.masalmon.eu/2017/03/19/facesofr/" target="_blank" rel="noopener noreferrer">Faces of #RStats twitter</a>, and an article on Data Bzh using Microsoft Computer Vision API to look into <a href="http://data-bzh.fr/photographies-fonds-de-la-guerre-14-18-en-bretagne/" target="_blank" rel="noopener noreferrer">old pictures of Brittany</a>.</p>
<h3 id="microsoft-computer-vision">Microsoft Computer Vision</h3>
<p>This <a href="https://www.microsoft.com/cognitive-services/en-us/computer-vision-api" target="_blank" rel="noopener noreferrer">API</a> is used to retrieved description and tags for an image. Here is how you can use it with R to get information about Twitter profil pictures.</p>
<h3 id="the-faces-of-rstats--automatic-labelling">The Faces of #RStats ‚Äî Automatic labelling</h3>
<p>In this blogpost, I‚Äôll describe how to get profil pics from Twitter, and label them with Microsoft Computer Vision.</p>
<h4 id="collecting-data">Collecting data</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rtweet</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">jsonlite</span><span class="p">)</span><span class="w">
</span><span class="n">token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_token</span><span class="p">(</span><span class="w"> </span><span class="n">app</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"XX"</span><span class="p">,</span><span class="w"> </span><span class="n">consumer_key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"XXX"</span><span class="p">,</span><span class="w"> </span><span class="n">consumer_secret</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"XX"</span><span class="p">)</span><span class="w">
</span><span class="n">users</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">search_users</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="w"> </span><span class="s1">'#rstats'</span><span class="p">,</span><span class="w">
                      </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w">
                      </span><span class="n">parse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unique</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><em>Note: I‚Äôve (obviously) hidden the access token to my twitter app.</em>
From there, I‚Äôll use the <code class="highlighter-rouge">profile_image_url</code> column to get the url to the profile picture.</p>

<p>First, this variable will need some cleansing : the urls contain a <em>_normal</em> parameter, creating 48x48 images. The Microsoft API needs at least a 50x50 resolution, so we need to get rid of this.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users</span><span class="o">$</span><span class="n">profile_image_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"_normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">users</span><span class="o">$</span><span class="n">profile_image_url</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h4 id="calling-on-microsoft-api">Calling on Microsoft API</h4>
<p>First, get a subscritpion on the <a href="https://www.microsoft.com/cognitive-services/en-us/computer-vision-api" target="_blank" rel="noopener noreferrer">Microsoft API service</a>, and start a free trial. This free account is limited: you can only make 5,000 calls per month, and 20 per minute. But that‚Äôs far from enough for our case (478 images to look at).</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_api</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">users</span><span class="p">[,</span><span class="m">25</span><span class="p">],</span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">request_body</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w">
  </span><span class="n">request_body_json</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"\\[|\\]"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">toJSON</span><span class="p">(</span><span class="n">request_body</span><span class="p">,</span><span class="w"> </span><span class="n">auto_unbox</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TRUE"</span><span class="p">))</span><span class="w">
  </span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">POST</span><span class="p">(</span><span class="s2">"https://api.projectoxford.ai/vision/v1.0/analyze?visualFeatures=Tags,Description,Faces,Categories"</span><span class="p">,</span><span class="w">
                 </span><span class="n">body</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">request_body_json</span><span class="p">,</span><span class="w">
                 </span><span class="n">add_headers</span><span class="p">(</span><span class="n">.headers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Content-Type"</span><span class="o">=</span><span class="s2">"application/json"</span><span class="p">,</span><span class="s2">"Ocp-Apim-Subscription-Key"</span><span class="o">=</span><span class="s2">"XXX"</span><span class="p">)))</span><span class="w">
  </span><span class="n">Output</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">content</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">){</span><span class="w">
    </span><span class="n">cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">captions</span><span class="w">
  </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NA</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="m">0</span><span class="p">){</span><span class="w">
    </span><span class="n">tag</span><span class="w"> </span><span class="o">&lt;-</span><span class="nf">list</span><span class="p">(</span><span class="n">Output</span><span class="o">$</span><span class="n">description</span><span class="o">$</span><span class="n">tags</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">cap</span><span class="p">,</span><span class="w"> </span><span class="n">tag</span><span class="p">)</span><span class="w">
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><em>Note : I‚Äôve (again) hidden my API key.</em>
<em>_Also, this code may take a while to execute, as I‚Äôve inserted a Sys.sleep function.</em> To know more about the reason why, <a href="http://colinfay.me/rstats-api-calls-and-sys-sleep/" target="_blank" rel="noopener noreferrer">read this blogpost</a>. _</p>

<h4 id="creating-tibbles">Creating tibbles</h4>
<p>Now I have a tibble with a column containing lists of captions &amp; confidence, and a column with lists of the tags associated with each picture. Let‚Äôs split this.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_cap</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">users_api</span><span class="o">$</span><span class="n">cap</span><span class="p">,</span><span class="w"> </span><span class="n">unlist</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> 
</span><span class="n">users_cap</span><span class="o">$</span><span class="n">confidence</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">users_cap</span><span class="o">$</span><span class="n">confidence</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="nf">as.numeric</span><span class="p">()</span><span class="w">
</span><span class="n">users_tags</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">users_api</span><span class="o">$</span><span class="n">tag</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">data.frame</span><span class="p">(</span><span class="n">tag</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="visualisation">Visualisation</h3>
<p>Each caption is given with a confidence score.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">users_cap</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">confidence</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">,</span><span class="w"> </span><span class="n">bins</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">50</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Confidence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Captions confidence"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-caption-confidence.png"><img class="size-full wp-image-1583" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-caption-confidence.png" alt="" width="1000" height="500" /></a></p>

<p>Click to zoom</p>

<p>It seems that the confidence scores for the captions are not very strong. Well, let‚Äôs nevertheless have a look at the most frequent captions and tags.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">somme</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">.</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">25</span><span class="p">,]</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Captions"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">   
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-captions-users.png"><img class="size-full wp-image-1580" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-captions-users.png" alt="" width="800" height="400" /></a></p>

<p>Click to zoom</p>

<p>Well‚Ä¶ I‚Äôm not sure there are so many surf and skate aficionados in the R world, but ok‚Ä¶</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">users_tags</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">somme</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">.</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">25</span><span class="p">,]</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">tag</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#b78d6a"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Faces of #RStats - Tags"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">caption</span><span class="o">=</span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">   
  </span><span class="n">theme_light</span><span class="p">()</span><span class="w">


</span></code></pre></div></div>
<h2><a href="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-tags.png"><img class="aligncenter size-full wp-image-1584" src="https://colinfay.github.io/wp-content/uploads/2017/04/rstats-tags.png" alt="" width="1000" height="500" /></a></h2>
<h2 id="some-checking">Some checking</h2>
<p>Let‚Äôs have a look at the picture with the highest confidence score, with the caption the API gave it.</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/9mJTF0PO.jpeg"><img class="size-full wp-image-1459" src="https://colinfay.github.io/wp-content/uploads/2017/04/9mJTF0PO.jpeg" alt="" width="300" height="300" /></a></p>

<p>A man wearing a suit and tie ‚Äî 0.92 confidence.</p>

<p>He hasn‚Äôt got a tie, but the APi got it quite right for the rest.</p>

<p>And now, just for fun, let‚Äôs have a look at the caption with the lowest confidence score :</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/czR2-o0M.jpg"><img class="size-full wp-image-1460" src="https://colinfay.github.io/wp-content/uploads/2017/04/czR2-o0M.jpg" alt="" width="300" height="300" /></a></p>

<p>A close up of two giraffes near a tree - 0.02 confidence</p>

<p>This one is fun, so, no hard feeling Microsoft API!</p>

<p>On a more systemic note, let‚Äôs have a look at a collage of pictures, for the most frequent captions.
_Note: in order to focus on the details of the pictures, and get rid of the genderization of the captions, I‚Äôve replaced ‚Äúman/woman/men/womens‚Äù by ‚Äúperson/persons‚Äù in the dataset, before making these collages. _</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/caption_man_skatepark.jpg"><img class="size-large wp-image-1533" src="https://colinfay.github.io/wp-content/uploads/2017/04/caption_man_skatepark-1024x1024.jpg" alt="" width="840" height="840" /></a></p>

<p>A person on a surf board in a skate park</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/smiling_camera.jpg"><img class="size-large wp-image-1556" src="https://colinfay.github.io/wp-content/uploads/2017/04/smiling_camera-1024x514.jpg" alt="" width="840" height="422" /></a></p>

<p>A person is smiling at the camera - Confidence mean : 0.54</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/caption_girafe.jpg"><img class="size-large wp-image-1535" src="https://colinfay.github.io/wp-content/uploads/2017/04/caption_girafe-1024x514.jpg" alt="" width="840" height="422" /></a></p>

<p>A close up of two giraffes near a tree ‚Äî Confidence mean : 0.0037</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/04/mosaic_glasses.jpg"><img class="size-large wp-image-1557" src="https://colinfay.github.io/wp-content/uploads/2017/04/mosaic_glasses-1024x514.jpg" alt="" width="840" height="422" /></a></p>

<p>A person wearing glasses looking at the camera</p>

<p>The first and third collages are clearly wrong about the captions. Yet we can see the confidence score is wery low. The second and fourth, though, seems to be more acurate. Maybe we need to try again with other pictures, just to be sure‚Ä¶ Maybe another time ;)</p>
 </content>
 </item>
 
 <item>
  <title>#RStats ‚Äî API calls and Sys.sleep</title>
  <description></description>
  <link>/rstats-api-calls-and-sys-sleep/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-api-calls-and-sys-sleep/</guid>
  <pubDate>2017-03-26 00:00:00 +0100</pubDate>
  <content><h2 id="lately-i-received-a-mail-concerning-my-blogpost-on-discogs-api-saying-the-code-didnt-work-turned-out-it-was-due-to-new-api-limitations-heres-how-to-get-along-with-it-">Lately, I received a mail concerning my blogpost on Discogs API, saying the code didn‚Äôt work. Turned out it was due to new API limitations. Here‚Äôs how to get along with it. <!--more--></h2>
<h3 id="discogs-calls">Discogs calls</h3>
<p>Here is <a href="http://colinfay.me/data-vinyles-discogs-r/">the blog post describing how to make calls on the Discogs API with R</a>.</p>

<p>I‚Äôve recently received a mail saying the second part of the code wasn‚Äôt working, returning only <em>NA</em>. It turned out it was due to recent changes in Discogs API policy, limiting the number of calls you can make within a specific time window.</p>

<p>Also recently, I‚Äôve been using Microsoft‚Äôs Computer Vision API ‚Äî an API limiting calls to 20 per minute ‚Äî for a blogpost on <a href="http://data-bzh.fr">Data Bzh</a>. So I said to myself: ‚Äútime for a new blogpost!‚Äù.</p>

<p>How can you automate your API calls when the API is time-limited (for example, if you have 282 calls to make)?</p>
<h3 id="simplest-way--a-for-loop-and-syssleep">Simplest way : a for loop and Sys.sleep()</h3>
<p><em>Note : I won‚Äôt be making any API calls within this post, I‚Äôll use Sys.time() to show how Sys.sleep() works.</em></p>

<p>If you‚Äôre calling <em>Sys.time</em>, and want to limit to 20 calls per minute, you‚Äôll need to use <em>Sys.sleep</em>(). This function only takes one argument, <em>time</em>, which is the number of seconds you want R to stop before resuming.</p>

<p>When run, this function pause your session during the number of seconds you‚Äôve entered. If you use this in a for loop, you can make a pause on every iteration of the loop. Here is an example with 10 seconds :</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">){</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">Sys.time</span><span class="p">())</span><span class="w">
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="n">time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## [1] "2017-03-26 11:13:58 CET"</span><span class="w">
</span><span class="c1">## [1] "2017-03-26 11:14:08 CET"</span><span class="w">
</span><span class="c1">## [1] "2017-03-26 11:14:18 CET"</span><span class="w">
</span></code></pre></div></div>
<h3 id="with-a-lapply">With a lapply</h3>
<p>If you have access to the core of the function you want to use (i.e. the function calling on the API), you can use a lapply and insert a <em>Sys.sleep()</em> staight inside this function.</p>

<p>This is the method you‚Äôll need to use if you‚Äôre trying to replicate the Discogs API calls.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">Sys.time</span><span class="p">())</span><span class="w"> 
  </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w"> 
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## [1] 1</span><span class="w">
</span><span class="c1">## [1] "2017-03-26 11:20:22 CET"</span><span class="w">
</span><span class="c1">## [1] 2</span><span class="w">
</span><span class="c1">## [1] "2017-03-26 11:20:25 CET"</span><span class="w">
</span><span class="c1">## [1] 3</span><span class="w">
</span><span class="c1">## [1] "2017-03-26 11:20:28 CET"</span><span class="w">
</span></code></pre></div></div>

<p><em>Hope this can help!</em></p>
 </content>
 </item>
 
 <item>
  <title>1 dataset, 10 visualisations with R</title>
  <description></description>
  <link>/1-dataset-10-dataviz-with-r/</link>
  <guid isPermaLink="true">http://localhost:4000/1-dataset-10-dataviz-with-r/</guid>
  <pubDate>2017-03-15 00:00:00 +0100</pubDate>
  <content><h2 id="creating-10-datavisualisations-from-1-dataset-with-r">Creating 10 datavisualisations from 1 dataset with R.</h2>
<!--more-->
<h3 id="back-from-la-fabrique-de-linfo"><em>Back from La fabrique de l‚Äôinfo</em></h3>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/IMG_2771.jpg"><img class="size-medium wp-image-1412 alignleft" src="https://colinfay.github.io/wp-content/uploads/2017/03/IMG_2771-300x225.jpg" alt="" width="300" height="225" /></a></p>

<p>On the 12th of march, I gave a speech in Rennes about data &amp; visualisation.</p>

<p>During this talk, I presented the audience with a series of dataviz made from one dataset, in order to show how you can get various information and points of view from the very same dataset, depending on what you want to show the reader.</p>
<p style="text-align: center;"><a href="https://github.com/ColinFay/conf/blob/master/fabrique-info/La%20fabrique%20de%20l'info.pdf">Slides from my talk</a></p>
<p>For this, I took this <a href="https://data.enseignementsup-recherche.gouv.fr/explore/dataset/fr-esr-pes-pedr-beneficiaires/">dataset</a>, and created 10 visualizations, each focusing on specific variable(s). Here‚Äôs how to make them with R.</p>
<h3 id="1-dataset-10-dataviz">1 dataset, 10 dataviz</h3>
<p><em>Notes</em> These plots have been created using tools from the <code class="highlighter-rouge">databzhtools</code> you can find here : <a class="uri" href="https://github.com/DataBzh/data-bzh-tools">https://github.com/DataBzh/Data-bzh-tools</a>
Download it on your hard drive, and load it in R with : <code class="highlighter-rouge">source("data-bzh-tools-master/main.R")</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Charger les donn√©es</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">source</span><span class="p">(</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"data-bzh-tools-master/main.R"</span><span class="p">)</span><span class="w">
</span><span class="n">prim</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv2</span><span class="p">(</span><span class="s2">"https://data.enseignementsup-recherche.gouv.fr/explore/dataset/fr-esr-pes-pedr-beneficiaires/download/?format=csv&amp;amp;timezone=Europe/Berlin&amp;amp;use_labels_for_header=true"</span><span class="p">)</span><span class="w">
</span><span class="n">prim</span><span class="o">$</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"01-01-"</span><span class="p">,</span><span class="n">prim</span><span class="o">$</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">lubridate</span><span class="o">::</span><span class="n">dmy</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<h4 id="frequency-distribution">Frequency distribution</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour1</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot06.jpeg"><img class="aligncenter size-large wp-image-1393" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot06-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="prop-by-sector">Prop by sector</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">`Secteur disciplinaire`</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">`Secteur disciplinaire`</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colours</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"fill"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot07.jpeg"><img class="aligncenter size-large wp-image-1394" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot07-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="value-by-sector">Value by sector</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">,</span><span class="w"> </span><span class="n">`Secteur disciplinaire`</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="n">somme</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">`Secteur disciplinaire`</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">`Secteur disciplinaire`</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colours</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="o">~</span><span class="n">`Secteur disciplinaire`</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot12.jpeg"><img class="aligncenter size-large wp-image-1395" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot12-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="map">Map</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#states &lt;- map_data("france")</span><span class="w">
</span><span class="n">prim2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">separate</span><span class="p">(</span><span class="n">`G√©o-localisation`</span><span class="p">,</span><span class="w"> </span><span class="n">into</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"lon"</span><span class="p">,</span><span class="s2">"lat"</span><span class="p">),</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="s1">','</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">lon</span><span class="p">,</span><span class="w"> </span><span class="n">lat</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">states</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_polygon</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#e4e4e4"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_map</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_path</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">states</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="o">=</span><span class="kc">NULL</span><span class="p">),</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"grey50"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">prim2</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">lat</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">lon</span><span class="p">),</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">somme</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour3</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">palette</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">scale_size</span><span class="p">(</span><span class="n">range</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">10</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlim</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="n">states</span><span class="o">$</span><span class="n">long</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="n">states</span><span class="o">$</span><span class="n">lat</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot20.jpeg"><img class="aligncenter size-large wp-image-1396" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot20-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="boxplot">Boxplot</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">prim</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">R</span><span class="err">√©</span><span class="n">gion</span><span class="p">,</span><span class="w"> </span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_boxplot</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour4</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<h2><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot18.jpeg"><img class="aligncenter size-large wp-image-1397" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot18-1024x512.jpeg" alt="" width="840" height="420" /></a></h2>
<h4 id="dotplot">Dotplot</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">R</span><span class="err">√©</span><span class="n">gion</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="n">R</span><span class="err">√©</span><span class="n">gion</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour1</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">4</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot15.jpeg"><img class="aligncenter size-large wp-image-1399" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot15-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="dotplot-bis">Dotplot bis</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="err">√â</span><span class="n">tablissement</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">reorder</span><span class="p">(</span><span class="err">√â</span><span class="n">tablissement</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">),</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour3</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">4</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot17.jpeg"><img class="aligncenter size-large wp-image-1400" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot17-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="histogram">Histogram</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="err">√â</span><span class="n">tablissement</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour3</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"B√©n√©ficiaire"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Nombre d'√©tablissements dans la tranche"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot19.jpeg"><img class="aligncenter size-large wp-image-1401" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot19-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="line-plot">Line plot</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">`Groupe de corps`</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="n">`Groupe de corps`</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="n">`Groupe de corps`</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colours</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot14.jpeg"><img class="aligncenter size-large wp-image-1402" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot14-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
<h4 id="barplot">Barplot</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prim</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">,</span><span class="w"> </span><span class="n">Sexe</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">B</span><span class="err">√©</span><span class="n">n</span><span class="err">√©</span><span class="n">ficiaires</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">Ann</span><span class="err">√©</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colour2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">databzh</span><span class="o">$</span><span class="n">colours</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">facet_grid</span><span class="p">(</span><span class="n">Sexe</span><span class="o">~</span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Les b√©n√©ficiaires de la prime d'excellence scientifique"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">databzhTheme</span><span class="p">()</span><span class="w">


</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot09.jpeg"><img class="aligncenter size-large wp-image-1403" src="https://colinfay.github.io/wp-content/uploads/2017/03/Rplot09-1024x512.jpeg" alt="" width="840" height="420" /></a></p>
 </content>
 </item>
 
 <item>
  <title>Create an heatmap with R and ggplot2</title>
  <description></description>
  <link>/create-an-heatmap-with-r-and-ggplot2/</link>
  <guid isPermaLink="true">http://localhost:4000/create-an-heatmap-with-r-and-ggplot2/</guid>
  <pubDate>2017-03-01 00:00:00 +0100</pubDate>
  <content><h2 id="here-a-short-tutorial-for-making-a-heatmap-in-r-with-ggplot2-inspired-by-several-articles-on-databzh">Here a short tutorial for making a heatmap in R with ggplot2, inspired by several articles on databzh.</h2>
<!--more-->

<p>This article is inspired by two articles I‚Äôve written on databzh. These being:</p>
<ul>
  <li><a href="http://data-bzh.fr/trafic-web-site-rennes-metropole-2016/">Trafic du site web de Rennes Metropole en 2016</a></li>
  <li><a href="http://data-bzh.fr/prenoms-bretagne-1900-aujourdhui/">Les pr√©noms en Bretagne, de 1900 √† aujourd‚Äôhui</a></li>
</ul>

<p>In this short post, I‚Äôll show you how to create a heatmap with ggplot2 and R. We‚Äôll visualise the evolution through time of a specific name in France. The dataset used in this article comes from <a href="https://www.data.gouv.fr/fr/datasets/fichier-des-prenoms-edition-2016/">data.gouv</a>, and is unzipped outside R.</p>

<h2 id="loading">Loading</h2>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="c1">## Loading tidyverse: ggplot2</span><span class="w">
</span><span class="c1">## Loading tidyverse: tibble</span><span class="w">
</span><span class="c1">## Loading tidyverse: tidyr</span><span class="w">
</span><span class="c1">## Loading tidyverse: readr</span><span class="w">
</span><span class="c1">## Loading tidyverse: purrr</span><span class="w">
</span><span class="c1">## Loading tidyverse: dplyr</span><span class="w">

</span><span class="n">name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="s2">"/home/colin/T√©l√©chargements/dpt2015.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"\t"</span><span class="p">,</span><span class="w"> </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"latin1"</span><span class="p">,</span><span class="w"> </span><span class="n">header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">col.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"sexe"</span><span class="p">,</span><span class="s2">"prenom"</span><span class="p">,</span><span class="s2">"annee"</span><span class="p">,</span><span class="s2">"dpt"</span><span class="p">,</span><span class="s2">"nombre"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w">
</span><span class="n">name</span><span class="o">$</span><span class="n">annee</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.Date</span><span class="p">(</span><span class="n">name</span><span class="o">$</span><span class="n">annee</span><span class="p">,</span><span class="w"> </span><span class="s2">"%Y"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>We now have a clean dataset of all the names in the several french departments, by year.</p>

<h3 id="heatmap">Heatmap</h3>
<p>A heatmap is created with the <code class="highlighter-rouge">geom_tile</code> geom from <code class="highlighter-rouge">ggplot</code>. Here how to create it step by step.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">choix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"COLIN"</span><span class="w">
</span><span class="n">name</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="c1">#Filter by name</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">prenom</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">choix</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  
  </span><span class="c1">#Group by two variables : year and dep</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">annee</span><span class="p">,</span><span class="w"> </span><span class="n">dpt</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  
  </span><span class="c1">#Summarise the sum of each name by year &amp;amp; dep</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">nombre</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  
  </span><span class="c1">#Make sure you get rid of NA</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  
  </span><span class="c1">#Start your ggplot </span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">annee</span><span class="p">,</span><span class="w"> </span><span class="n">dpt</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  
  </span><span class="c1">#HERE'S THE BIG GUY</span><span class="w">
  </span><span class="n">geom_tile</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  
  </span><span class="c1">#Scale your x axis</span><span class="w">
  </span><span class="n">scale_x_date</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="nf">c</span><span class="p">(</span><span class="n">lubridate</span><span class="o">::</span><span class="n">ymd</span><span class="p">(</span><span class="s2">"1900-01-01"</span><span class="p">),</span><span class="w"> </span><span class="n">lubridate</span><span class="o">::</span><span class="n">ymd</span><span class="p">(</span><span class="s2">"2015-01-01"</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  
  </span><span class="c1">#Here are some stuffs to make this plot pretty</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Ann√©e"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"D√©partement"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"Apparition du pr√©nom "</span><span class="p">,</span><span class="w"> </span><span class="n">tolower</span><span class="p">(</span><span class="n">choix</span><span class="p">),</span><span class="s2">" par d√©partement, 1900-2015"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_minimal</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/names-colin.png"><img class="aligncenter size-full wp-image-1587" src="https://colinfay.github.io/wp-content/uploads/2017/03/names-colin.png" alt="Colin par d√©partement" width="1000" height="500" /></a></p>

<p>So yeah, it‚Äôs that simple. Let‚Äôs try with another name.</p>

<p>(And of course, you can specify a different color scale for your plot)</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">choix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"ELISABETH"</span><span class="w">
</span><span class="n">name</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">prenom</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">choix</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">annee</span><span class="p">,</span><span class="w"> </span><span class="n">dpt</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">somme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">nombre</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">na.omit</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">annee</span><span class="p">,</span><span class="w"> </span><span class="n">dpt</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">somme</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_tile</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_x_date</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="nf">c</span><span class="p">(</span><span class="n">lubridate</span><span class="o">::</span><span class="n">ymd</span><span class="p">(</span><span class="s2">"1900-01-01"</span><span class="p">),</span><span class="w"> </span><span class="n">lubridate</span><span class="o">::</span><span class="n">ymd</span><span class="p">(</span><span class="s2">"2015-01-01"</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="c1">#Changer l'√©chelle de couleurs</span><span class="w">
  </span><span class="n">scale_fill_gradient</span><span class="p">(</span><span class="n">low</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#E18C8C"</span><span class="p">,</span><span class="w"> </span><span class="n">high</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#973232"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Ann√©e"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"D√©partement"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"Apparition du pr√©nom "</span><span class="p">,</span><span class="w"> </span><span class="n">tolower</span><span class="p">(</span><span class="n">choix</span><span class="p">),</span><span class="s2">" par d√©partement, 1900-2015"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme_minimal</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/prenom-elisabeth-rstats.png"><img class="aligncenter size-full wp-image-1589" src="https://colinfay.github.io/wp-content/uploads/2017/03/prenom-elisabeth-rstats.png" alt="Elisabeth pr√©nom" width="1000" height="500" /></a></p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2017/03/prenom-elisabeth-rstats.png"><img class="aligncenter size-full wp-image-1589" src="https://colinfay.github.io/wp-content/uploads/2017/03/prenom-elisabeth-rstats.png" alt="Elisabeth pr√©nom" width="1000" height="500" /></a></p>

<p>Pretty easy isn‚Äôt it?</p>

 </content>
 </item>
 
 <item>
  <title>All I want for Christmas is a #Dataviz</title>
  <description></description>
  <link>/all-i-want-for-christmas-is-a-dataviz-2/</link>
  <guid isPermaLink="true">http://localhost:4000/all-i-want-for-christmas-is-a-dataviz-2/</guid>
  <pubDate>2016-12-23 00:00:00 +0100</pubDate>
  <content><h2 id="just-before-christmas-lets-enjoy-these-two-visualisations-created-with-data-from-the-lastfm-api">Just before Christmas, let‚Äôs enjoy these two visualisations created with data from the lastfm API.</h2>
<!--more-->
<h3 id="all√¥-lastfm">All√¥ LastFM</h3>
<p>First, you need to create an account on <a href="http://www.last.fm/api" target="_blank">lastfm</a>, and get an access key. When you have it, you can start making resquests on the API with R.</p>

<p>Let‚Äôs load the packages we will need:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">scales</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">data.table</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Here are the three parameters you will need before starting:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#The query</span><span class="w">
</span><span class="n">query</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"christmas"</span><span class="w">
</span><span class="c1">#Your API key (masked here)</span><span class="w">
</span><span class="n">apikey</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"XXX"</span><span class="w">
</span><span class="c1">#The page index</span><span class="w">
</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></code></pre></div></div>

<p>Then, the search url. Each request is limited to 1000 answers. The results are divided in pages, and you can access them with the arg <code class="highlighter-rouge">&amp;page="</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"http://ws.audioscrobbler.com/2.0/?method=track.search&amp;amp;track="</span><span class="p">,</span><span class="w"> 
              </span><span class="n">query</span><span class="p">,</span><span class="s2">"&amp;amp;api_key="</span><span class="p">,</span><span class="w"> </span><span class="n">apikey</span><span class="p">,</span><span class="w"> </span><span class="s2">"&amp;amp;format=json"</span><span class="p">,</span><span class="s2">"&amp;amp;page="</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Let‚Äôs create a list to concatenate our results, and query the first page (index = 0).</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
</span><span class="n">dl2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">httr</span><span class="o">::</span><span class="n">GET</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="o">$</span><span class="n">content</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">rawToChar</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">rjson</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">()</span><span class="w">
</span><span class="n">dl2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dl2</span><span class="o">$</span><span class="n">results</span><span class="o">$</span><span class="n">trackmatches</span><span class="o">$</span><span class="n">track</span><span class="w">
</span><span class="n">dl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">dl</span><span class="p">,</span><span class="n">dl2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Then, we loop over all the pages:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">repeat</span><span class="p">{</span><span class="w">
  </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">x</span><span class="m">+1</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"http://ws.audioscrobbler.com/2.0/?method=track.search&amp;amp;track="</span><span class="p">,</span><span class="w"> 
                </span><span class="n">query</span><span class="p">,</span><span class="s2">"&amp;amp;api_key="</span><span class="p">,</span><span class="w"> </span><span class="n">apikey</span><span class="p">,</span><span class="w"> </span><span class="s2">"&amp;amp;format=json"</span><span class="p">,</span><span class="s2">"&amp;amp;limit="</span><span class="p">,</span><span class="w"> </span><span class="m">1000</span><span class="p">,</span><span class="w"> </span><span class="s2">"&amp;amp;page="</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w">
  </span><span class="n">dl2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">httr</span><span class="o">::</span><span class="n">GET</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="o">$</span><span class="n">content</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">rawToChar</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">rjson</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">()</span><span class="w">
  </span><span class="n">dl2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dl2</span><span class="o">$</span><span class="n">results</span><span class="o">$</span><span class="n">trackmatches</span><span class="o">$</span><span class="n">track</span><span class="w">
  </span><span class="n">dl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">dl</span><span class="p">,</span><span class="w"> </span><span class="n">dl2</span><span class="p">)</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">dl2</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">){</span><span class="w">
    </span><span class="k">break</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>And now, let‚Äôs create the dataframe:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">songs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">dl</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">){</span><span class="w">
  </span><span class="n">data.frame</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="o">$</span><span class="n">name</span><span class="p">,</span><span class="w"> 
             </span><span class="n">artist</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="o">$</span><span class="n">artist</span><span class="p">,</span><span class="w"> 
             </span><span class="n">listeners</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">x</span><span class="o">$</span><span class="n">listeners</span><span class="p">))</span><span class="w">
</span><span class="p">})</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">listeners</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="and-now-lets-see">And now, let‚Äôs see!</h3>
<p>The fifteen most popular songs are:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">songs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.data.table</span><span class="p">(</span><span class="n">songs</span><span class="p">)</span><span class="w">
</span><span class="n">songs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">songs</span><span class="p">[,</span><span class="w"> </span><span class="n">.</span><span class="p">(</span><span class="n">listeners</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">listeners</span><span class="p">)),</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="n">artist</span><span class="p">)]</span><span class="w">
</span><span class="n">songs</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">15</span><span class="p">,]</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">listeners</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">listeners</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#d42426"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_text</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">songs</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">15</span><span class="p">,],</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="w"> </span><span class="n">artist</span><span class="p">),</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">nudge_y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="n">sd</span><span class="p">(</span><span class="n">songs</span><span class="o">$</span><span class="n">listeners</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">15</span><span class="p">])</span><span class="o">/</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Volumes d'utilisateurs ayant √©cout√© ce titre"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comma</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"15 titres les plus populaires sur lastfm pour la requ√™te Christmas"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">10</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">15</span><span class="p">),</span><span class="w">
        </span><span class="n">title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">18</span><span class="p">),</span><span class="w">
        </span><span class="n">plot.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">18</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title.x</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">)),</span><span class="w">
        </span><span class="n">axis.title.y</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">)),</span><span class="w">
        </span><span class="n">legend.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">12</span><span class="p">),</span><span class="w">
        </span><span class="n">plot.margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">),</span><span class="w"> 
        </span><span class="n">panel.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">),</span><span class="w"> 
        </span><span class="n">panel.grid.major</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_line</span><span class="p">(</span><span class="n">colour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"grey"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2016/12/songs-last-fm-christmas.jpeg"><img class="aligncenter size-large wp-image-1186" src="https://colinfay.github.io/wp-content/uploads/2016/12/songs-last-fm-christmas-1024x512.jpeg" alt="songs-last-fm-christmas" width="809" height="405" /></a>(click to zoom)</p>

<p>And the most frequent artists:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">songs</span><span class="o">$</span><span class="n">artist</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">table</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">head</span><span class="p">(</span><span class="m">15</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">Freq</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#d42426"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Volume de titres de l'artiste"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comma</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"15 artistes les plus pr√©sents sur lastfm pour la requ√™te Christmas"</span><span class="p">,</span><span class="w"> 
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">,</span><span class="w">
       </span><span class="n">caption</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">10</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">15</span><span class="p">),</span><span class="w">
        </span><span class="n">title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">18</span><span class="p">),</span><span class="w">
        </span><span class="n">plot.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">18</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title.x</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">)),</span><span class="w">
        </span><span class="n">axis.title.y</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">)),</span><span class="w">
        </span><span class="n">legend.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">12</span><span class="p">),</span><span class="w">
        </span><span class="n">plot.margin</span><span class="o">=</span><span class="n">margin</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">20</span><span class="p">),</span><span class="w"> 
        </span><span class="n">panel.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">),</span><span class="w"> 
        </span><span class="n">panel.grid.major</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_line</span><span class="p">(</span><span class="n">colour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"grey"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2016/12/artist-christmas-lastfm.jpeg"><img class="aligncenter size-large wp-image-1184" title="" src="https://colinfay.github.io/wp-content/uploads/2016/12/artist-christmas-lastfm-1024x512.jpeg" alt="artists christmas last fm" width="809" height="405" /></a>(click to zoom)</p>

<p>So now‚Ä¶ Merry Christmas!</p>

<p><a title="" href="https://colinfay.github.io/wp-content/uploads/2016/12/b546c88a28a7c2423d2a32bc85d1f106.gif"><img class="aligncenter size-full wp-image-1182" title="" src="https://colinfay.github.io/wp-content/uploads/2016/12/b546c88a28a7c2423d2a32bc85d1f106.gif" alt="Nightmare before christmas" width="500" height="301" /></a></p>
 </content>
 </item>
 
 <item>
  <title>#RStats ‚Äî languagelayeR : query the languagelayer API with R</title>
  <description></description>
  <link>/rstats-languagelayer-query-the-languagelayer-api-with-r/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-languagelayer-query-the-languagelayer-api-with-r/</guid>
  <pubDate>2016-12-12 00:00:00 +0100</pubDate>
  <content><h2 id="improve-your-text-analysis-with-this-r-package-designed-to-access-the-languagelayer-api">Improve your text analysis with this R package designed to access the languagelayer API.<!--more--></h2>
<p>LanguagelayeR is now on <a href="https://cran.r-project.org/package=languagelayeR">CRAN</a></p>

<h3 id="languagelayerr">languagelayerR</h3>
<p>This package is designed to detect a language from a character string in R by acessing the languagelayer API ‚Äî <a href="https://languagelayer.com/">https://languagelayer.com/</a></p>

<h2 id="language-layer-api">Language layer API</h2>
<p>This package offers a language detection tool by connecting to the languagelayer API, a JSON interface designed to extract language information from a character string.</p>

<h2 id="install-languagelayerr">Install languagelayerR</h2>
<p>Install this package directly in R : <code class="highlighter-rouge">devtools::install_github"ColinFay/languagelayerR")</code></p>
<h2 id="how-languagelayer-works">How languagelayeR works</h2>
<p>The version 1.0.0 works with three functions. Which are :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">getLanguage</span><span class="w">
</span></code></pre></div></div>

<p>Get language information from a character string</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">getSupportedLanguage</span><span class="w">
</span></code></pre></div></div>

<p>Get all current accessible languages on the languagelayer API</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">setApiKey</span><span class="w">
</span></code></pre></div></div>
<p>Set your API key to access the languagelayer API</p>

<h2 id="first-of-all">First of all</h2>
<p>Before any request on the languagelayer, you need to set your API key for your current session. Use the function <code class="highlighter-rouge">setApiKey(apikey = "yourapikey")</code>.</p>

<p>You can get your api key on your languagelayer <a href="https://languagelayer.com/dashboard">dashboard</a>.</p>

<h2 id="examples">Examples</h2>
<h3 id="getlanguage">getLanguage</h3>
<p>Detect a language from a character string.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">getLanguage</span><span class="p">(</span><span class="s2">"I really really love R and that's a good thing, right?"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>List all the languages available on the languagelayer API.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">getSupportedLanguage</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<h3 id="contact">Contact</h3>

<p>Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a> !
¬†</p>
 </content>
 </item>
 
 <item>
  <title>Data & Vinyls ‚Äî A discogs library exploration with R</title>
  <description></description>
  <link>/data-vinyles-discogs-r/</link>
  <guid isPermaLink="true">http://localhost:4000/data-vinyles-discogs-r/</guid>
  <pubDate>2016-08-31 00:00:00 +0200</pubDate>
  <content><h2 id="as-a-vinyl-lover-and-data-addict-i-had-some-fun-making-requests-on-the-discogs-api-with-r-in-order-to-know-better-what-is-inside-my-library">As a vinyl lover and data addict, I had some fun making requests on the Discogs API with R, in order to know better what is inside my library.</h2>
<!--more-->

<p>Every vinyl lover knows about Discogs. But did you know you could easily access the API? Here are the lines of code I used to access my library.</p>

<p><span style="text-decoration: underline;">Note : You can download the data used here in <a href="http://colinfay.me/data/collection_complete.json" target="_blank">JSON</a>, or directly in R :</span></p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">collection_complete</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">jsonlite</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">(</span><span class="n">txt</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"http://colinfay.me/data/collection_complete.json"</span><span class="p">,</span><span class="w"> </span><span class="n">simplifyDataFrame</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="major-tom-to-discogs-api">Major Tom to Discogs API</h3>
<p>Before starting, I‚Äôll need these two functions: _
<code class="highlighter-rouge">%&gt;%</code> and ` %||%`._</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w"> </span><span class="c1">#for %&gt;%</span><span class="w">
</span><span class="n">`%||%`</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="nf">is.null</span><span class="p">(</span><span class="n">a</span><span class="p">))</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="n">a</span><span class="w">
</span></code></pre></div></div>
<p>Let‚Äôs first get my Discogs profile:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">user</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"_colin"</span><span class="w">
</span><span class="n">content</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">httr</span><span class="o">::</span><span class="n">GET</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://api.discogs.com/users/"</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="p">,</span><span class="w"> </span><span class="s2">"/collection/folders"</span><span class="p">))</span><span class="w">
</span><span class="n">content</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rjson</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">(</span><span class="n">rawToChar</span><span class="p">(</span><span class="n">content</span><span class="o">$</span><span class="n">content</span><span class="p">))</span><span class="o">$</span><span class="n">folders</span><span class="w">
</span><span class="n">content</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## [[1]]</span><span class="w">
</span><span class="c1">## [[1]]$count</span><span class="w">
</span><span class="c1">## [1] 308</span><span class="w">
</span><span class="c1">## </span><span class="w">
</span><span class="c1">## [[1]]$resource_url</span><span class="w">
</span><span class="c1">## [1] "https://api.discogs.com/users/_colin/collection/folders/0"</span><span class="w">
</span><span class="c1">## </span><span class="w">
</span><span class="c1">## [[1]]$id</span><span class="w">
</span><span class="c1">## [1] 0</span><span class="w">
</span><span class="c1">## </span><span class="w">
</span><span class="c1">## [[1]]$name</span><span class="w">
</span><span class="c1">## [1] "All"</span><span class="w">
</span></code></pre></div></div>
<p>This first request brings in the environment all the information about a profil (here ‚Äú_colin‚Äù, aka : me).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">$</span><span class="n">count</span><span class="w">
</span><span class="err">``</span><span class="n">` tells us the number of entries in the library : 308.  The `</span><span class="err">`</span><span class="n">`r 
$id
`</span><span class="err">`</span><span class="n">` element is the number of ‚Äúfolders‚Äù created by the user ‚Äì 0 corresponding to the whole collection, without any list specification.
### Create a dataframe with all the vinyls
The Discogs API sends back pages with 100 max results. Here, my collection has 308, so I'll use a `</span><span class="err">`</span><span class="n">`r 
repeat
`</span><span class="err">`</span><span class="n">` loop to query all the data, and store them in a dataframe.
`</span><span class="err">`</span><span class="n">`r 
collec_url &lt;- httr::GET(paste0("https://api.discogs.com/users/", user, "/collection/folders/", content[[1]]$id, "/releases?page=1&amp;amp;per_page=100"))
if (collec_url$status_code == 200){
  collec &lt;- rjson::fromJSON(rawToChar(collec_url$content))
  collecdata &lt;- collec$releases
    if(!is.null(collec$pagination$urls$`</span><span class="k">next</span><span class="n">`)){
      repeat{
        url &lt;- httr::GET(collec$pagination$urls$`</span><span class="k">next</span><span class="n">`)
        collec &lt;- rjson::fromJSON(rawToChar(url$content))
        collecdata &lt;- c(collecdata, collec$releases)
        if(is.null(collec$pagination$urls$`</span><span class="k">next</span><span class="err">`</span><span class="p">)){</span><span class="w">
          </span><span class="k">break</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
  </span><span class="n">collection</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">collecdata</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">obj</span><span class="p">){</span><span class="w">
    </span><span class="n">data.frame</span><span class="p">(</span><span class="n">release_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">id</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">labels</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">year</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">year</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">title</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
               </span><span class="n">artist_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">artists</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">artist_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">artists</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">id</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">artist_resource_url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">artists</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">resource_url</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
               </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">formats</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
               </span><span class="n">resource_url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="o">$</span><span class="n">basic_information</span><span class="o">$</span><span class="n">resource_url</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">)</span><span class="w">
  </span><span class="p">})</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">unique</span><span class="p">()</span><span class="w">

</span></code></pre></div></div>
<p>Here is what the dataframe looks like:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">pander</span><span class="p">)</span><span class="w">
</span><span class="n">pander</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">collection</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<table style="width: 96%;"><caption>Table continues below</caption><colgroup> <col width="18%" /> <col width="29%" /> <col width="9%" /> <col width="38%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">release_id</th>
<th align="center">label</th>
<th align="center">year</th>
<th align="center">title</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">5181773</td>
<td align="center">A&amp;M Records</td>
<td align="center">1982</td>
<td align="center">Night And Day</td>
</tr>
<tr class="even">
<td align="center">3690646</td>
<td align="center">A&amp;M Records (2)</td>
<td align="center">2012</td>
<td align="center">God Save The Queen</td>
</tr>
<tr class="odd">
<td align="center">944917</td>
<td align="center">Alexi Delano Limited</td>
<td align="center">2007</td>
<td align="center">The Acid Sessions Vol. 4</td>
</tr>
<tr class="even">
<td align="center">906983</td>
<td align="center">Alphabet City</td>
<td align="center">2007</td>
<td align="center">Urban Minds / Skattered</td>
</tr>
<tr class="odd">
<td align="center">8112758</td>
<td align="center">Amerilys</td>
<td align="center">1986</td>
<td align="center">Follement V√¥tre</td>
</tr>
<tr class="even">
<td align="center">5800664</td>
<td align="center">Anette Records</td>
<td align="center">2014</td>
<td align="center">And The Dead Shall Lie There</td>
</tr>
</tbody>
</table>
<table><caption>Table continues below</caption><colgroup> <col width="20%" /> <col width="16%" /> <col width="52%" /> <col width="10%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">artist_name</th>
<th align="center">artist_id</th>
<th align="center">artist_resource_url</th>
<th align="center">format</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">Joe Jackson</td>
<td align="center">75280</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/75280">https://api.discogs.com/artists/75280</a></td>
<td align="center">Vinyl</td>
</tr>
<tr class="even">
<td align="center">Sex Pistols</td>
<td align="center">31753</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/31753">https://api.discogs.com/artists/31753</a></td>
<td align="center">Vinyl</td>
</tr>
<tr class="odd">
<td align="center">Alexi Delano</td>
<td align="center">26</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/26">https://api.discogs.com/artists/26</a></td>
<td align="center">Vinyl</td>
</tr>
<tr class="even">
<td align="center">Pacjam</td>
<td align="center">488187</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/488187">https://api.discogs.com/artists/488187</a></td>
<td align="center">Vinyl</td>
</tr>
<tr class="odd">
<td align="center">Diane Dufresne</td>
<td align="center">647100</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/647100">https://api.discogs.com/artists/647100</a></td>
<td align="center">Vinyl</td>
</tr>
<tr class="even">
<td align="center">Ancient Mith</td>
<td align="center">302464</td>
<td align="center"><a class="uri" href="https://api.discogs.com/artists/302464">https://api.discogs.com/artists/302464</a></td>
<td align="center">Vinyl</td>
</tr>
</tbody>
</table>
<table style="width: 56%;"><colgroup> <col width="55%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">resource_url</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/5181773">https://api.discogs.com/releases/5181773</a></td>
</tr>
<tr class="even">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/3690646">https://api.discogs.com/releases/3690646</a></td>
</tr>
<tr class="odd">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/944917">https://api.discogs.com/releases/944917</a></td>
</tr>
<tr class="even">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/906983">https://api.discogs.com/releases/906983</a></td>
</tr>
<tr class="odd">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/8112758">https://api.discogs.com/releases/8112758</a></td>
</tr>
<tr class="even">
<td align="center"><a class="uri" href="https://api.discogs.com/releases/5800664">https://api.discogs.com/releases/5800664</a></td>
</tr>
</tbody>
</table>
<h3 id="i-cant-see-i-cant-see-im-going-blind">I can‚Äôt see, I can‚Äôt see I‚Äôm going blind</h3>
<p>And now, let‚Äôs start visualising!</p>
<h4 id="most-frequent-labels">Most frequent labels</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">ggplot</span><span class="p">(</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">sort</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">collection</span><span class="o">$</span><span class="n">label</span><span class="p">),</span><span class="w"> </span><span class="n">decreasing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="m">10</span><span class="p">)),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">Var1</span><span class="p">,</span><span class="w"> </span><span class="n">Freq</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Label"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Labels les plus fr√©quents"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/labels.jpeg"><img class="aligncenter size-full wp-image-1058" src="https://colinfay.github.io/wp-content/uploads/2016/08/labels.jpeg" alt="labels les plus repr√©sent√©s dans la collection discogs" width="800" height="400" /></a></p>

<p>Philips and Polydor, <em>what a surprise!</em></p>
<h4 id="most-frequent-artists">Most frequent artists</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">sort</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">collection</span><span class="o">$</span><span class="n">artist_name</span><span class="p">),</span><span class="w"> </span><span class="n">decreasing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="m">10</span><span class="p">)),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">Var1</span><span class="p">,</span><span class="w"> </span><span class="n">Freq</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Artistes"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Artistes les plus fr√©quents"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/artistes.jpeg"><img class="aligncenter size-full wp-image-1059" src="https://colinfay.github.io/wp-content/uploads/2016/08/artistes.jpeg" alt="Artistes les plus repr√©sent√©s" width="800" height="400" /></a></p>

<p>So‚Ä¶ here‚Äôs the big revelation: I love Serge Gainsbourg and Geogres Brassens (guilty pleasure).</p>
<h4 id="release-date">Release date</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">dplyr</span><span class="o">::</span><span class="n">filter</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span><span class="w"> </span><span class="n">year</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">year</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"count"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Ann√©e de sortie"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Date de sorties des vinyles de la collection"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/date-sortie.jpeg"><img class="aligncenter size-full wp-image-1060" src="https://colinfay.github.io/wp-content/uploads/2016/08/date-sortie.jpeg" alt="Dates de sorties" width="800" height="400" /></a></p>

<p>Looks like I‚Äôm not a big 90‚Äôs fan! My library show a bimodal distribution, with one mode around the 80‚Äôs, and one around 2005.</p>
<h3 id="its-time-to-go-deeper">It‚Äôs time to go deeper</h3>
<p>So, can we get more information about this library?</p>

<h4 id="hello-its-me-again">Hello, it‚Äôs me again</h4>
<p>_Note: between the writing of this blogpost and now, Discogs seems to have put a rate limit on its API. For the creation of <code class="highlighter-rouge">collection_2</code>, you should consider using <code class="highlighter-rouge">Sys.sleep()</code>. More on that <a href="http://colinfay.me/rstats-api-calls-and-sys-sleep/">here</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">collection_2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">as.list</span><span class="p">(</span><span class="n">collection</span><span class="o">$</span><span class="n">release_id</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">obj</span><span class="p">){</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">httr</span><span class="o">::</span><span class="n">GET</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://api.discogs.com/releases/"</span><span class="p">,</span><span class="w"> </span><span class="n">obj</span><span class="p">))</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rjson</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">(</span><span class="n">rawToChar</span><span class="p">(</span><span class="n">url</span><span class="o">$</span><span class="n">content</span><span class="p">))</span><span class="w">
  </span><span class="n">data.frame</span><span class="p">(</span><span class="n">release_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> 
             </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">label</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
             </span><span class="n">year</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">year</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">title</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">artist_name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">artist</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">styles</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">styles</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
             </span><span class="n">genre</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">genre</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w">
             </span><span class="n">average_note</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">community</span><span class="o">$</span><span class="n">rating</span><span class="o">$</span><span class="n">average</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">votes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">community</span><span class="o">$</span><span class="n">rating</span><span class="o">$</span><span class="n">count</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">want</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">community</span><span class="o">$</span><span class="n">want</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">have</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">community</span><span class="o">$</span><span class="n">have</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">lowest_price</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">lowest_price</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">,</span><span class="w"> 
             </span><span class="n">country</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">url</span><span class="o">$</span><span class="n">country</span><span class="w"> </span><span class="o">%||%</span><span class="w"> </span><span class="kc">NA</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unique</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p>Here, I have used the <em>release_id</em> element to make a request about each vinyl.</p>

<h4 id="most-frequent-genre">Most frequent genre</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">sort</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">collection_2</span><span class="o">$</span><span class="n">genre</span><span class="p">),</span><span class="w"> </span><span class="n">decreasing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="m">10</span><span class="p">)),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">Var1</span><span class="p">,</span><span class="w"> </span><span class="n">Freq</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Genre"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Genres les plus fr√©quents"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/genres-frequents.jpeg"><img class="aligncenter size-full wp-image-1062" src="https://colinfay.github.io/wp-content/uploads/2016/08/genres-frequents.jpeg" alt="Genres les plus fr√©quents" width="800" height="400" /></a>OH GOD, what a surprise! Almost half of my collection is made of rock albums (who could have guessed?).</p>
<h4 id="countries">Countries</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">as.data.frame</span><span class="p">(</span><span class="n">head</span><span class="p">(</span><span class="n">sort</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">collection_2</span><span class="o">$</span><span class="n">country</span><span class="p">),</span><span class="w"> </span><span class="n">decreasing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="m">10</span><span class="p">)),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">Var1</span><span class="p">,</span><span class="w"> </span><span class="n">Freq</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Freq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Pays d'origine"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Pays les plus fr√©quents"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/pays-origine.jpeg"><img class="aligncenter size-large wp-image-1063" src="https://colinfay.github.io/wp-content/uploads/2016/08/pays-origine-1024x512.jpeg" alt="Pays d'origine des vinyles" width="809" height="405" /></a></p>
<h4 id="average-note">Average note</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">collection_2</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_note</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Note moyenne"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Notes moyennes des vinyles de la collection"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/note-moyenne-vinyles-collection.jpeg"><img class="aligncenter wp-image-1073 size-full" src="https://colinfay.github.io/wp-content/uploads/2016/08/note-moyenne-vinyles-collection.jpeg" width="800" height="400" /></a></p>

<p>Thanks a lot Discogs! It looks like I‚Äôve got quite good musical tastes (thanks for the ego boost :) !)</p>
<h4 id="prices-of-vinyls-low-range">Prices of vinyls (low range)</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">collection_2</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowest_price</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_histogram</span><span class="p">(</span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Prix le plus bas"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Fr√©quence"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Prix le plus bas des vinyles de la collection"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/densite-prix-bas.jpeg"><img class="aligncenter size-full wp-image-1072" src="https://colinfay.github.io/wp-content/uploads/2016/08/densite-prix-bas.jpeg" alt="densite-prix-bas" width="800" height="400" /></a></p>

<p>Ok, I‚Äôm not gonna be rich selling my vinyl collection‚Ä¶</p>
<h3 id="lets-finish">Let‚Äôs finish!</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">collection_complete</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">collection</span><span class="p">,</span><span class="w"> </span><span class="n">collection_2</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"release_id"</span><span class="p">,</span><span class="s2">"label"</span><span class="p">,</span><span class="w"> </span><span class="s2">"year"</span><span class="p">,</span><span class="w"> </span><span class="s2">"title"</span><span class="p">,</span><span class="w"> </span><span class="s2">"artist_name"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<h4 id="relationship-between-price-and-want">Relationship between price and ‚Äúwant‚Äù</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lm_want</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowest_price</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">want</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">collection_complete</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">lm_want</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##Residuals:</span><span class="w">
</span><span class="c1">##   Min     1Q Median     3Q    Max </span><span class="w">
</span><span class="c1">##-8.043 -4.628 -2.224  2.179 49.608 </span><span class="w">

</span><span class="c1">##Coefficients:</span><span class="w">
</span><span class="c1">##            Estimate Std. Error t value Pr(&gt;|t|)    </span><span class="w">
</span><span class="c1">##(Intercept) 6.715418   0.450582  14.904  &amp;lt; 2e-16 ***</span><span class="w">
</span><span class="c1">##want        0.005004   0.001788   2.799  0.00546 ** </span><span class="w">
</span><span class="c1">##---</span><span class="w">
</span><span class="c1">##Signif. codes:  0 ‚Äò***‚Äô 0.001 ‚Äò**‚Äô 0.01 ‚Äò*‚Äô 0.05 ‚Äò.‚Äô 0.1 ‚Äò ‚Äô 1</span><span class="w">

</span><span class="c1">##Residual standard error: 7.306 on 301 degrees of freedom</span><span class="w">
</span><span class="c1">##  (5 observations deleted due to missingness)</span><span class="w">
</span><span class="c1">##Multiple R-squared:  0.02536,    Adjusted R-squared:  0.02213 </span><span class="w">
</span><span class="c1">##F-statistic: 7.833 on 1 and 301 DF,  p-value: 0.005461</span><span class="w">

</span></code></pre></div></div>
<p>Here, we can see a correlation between the price and the number of users that put a ‚Äúwant‚Äù on a particular vinyl.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">collection_complete</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowest_price</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">want</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_smooth</span><span class="p">(</span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lm"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Prix le plus bas"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Nombre de \"want\""</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Prix et \"want\" des vinyles de la collection"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/prix-wants-vinyls-collection.jpeg"><img class="aligncenter size-full wp-image-1076" src="https://colinfay.github.io/wp-content/uploads/2016/08/prix-wants-vinyls-collection.jpeg" alt="Prix en fonction du nombre de want" width="800" height="400" /></a></p>
<h4 id="price-and-average-note">Price and average note</h4>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lm_note</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowest_price</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">average_note</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">collection_complete</span><span class="p">)</span><span class="w">
</span><span class="n">lm_note</span><span class="o">$</span><span class="n">coefficients</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##  (Intercept) average_note </span><span class="w">
</span><span class="c1">##    -1.504767     2.207834</span><span class="w">
</span></code></pre></div></div>
<p>Here, no significative correlation.</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">collection_complete</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lowest_price</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_note</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#B79477"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Prix le plus bas"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Note moyenne"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylim</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Prix et notes des vinyles de la collection"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/08/prix-et-note-vinyles-collection.jpeg"><img class="aligncenter size-full wp-image-1080" src="https://colinfay.github.io/wp-content/uploads/2016/08/prix-et-note-vinyles-collection.jpeg" alt="Prix en fonction des notes" width="800" height="400" /></a></p>
<h3 id="and-to-conclude">And to conclude‚Ä¶</h3>
<p>Next step‚Ä¶ create a package to access the Discogs API? Why not! Let‚Äôs put this on my to-do‚Ä¶</p>
 </content>
 </item>
 
 <item>
  <title>rpinterest now on CRAN</title>
  <description></description>
  <link>/rpinterest-cran/</link>
  <guid isPermaLink="true">http://localhost:4000/rpinterest-cran/</guid>
  <pubDate>2016-08-17 00:00:00 +0200</pubDate>
  <content><h2 id="this-r-package-allows-you-to-access-the-pinterest-api-now-on-cran">This R package allows you to access the Pinterest API. Now on CRAN.</h2>
<!--more-->
<h3 id="rpinterest-on-cran">rpinterest on CRAN</h3>
<p>Make requests on the Pinterest API with <code class="highlighter-rouge">rpinterest</code>, an R package now available on <a href="https://cran.r-project.org/web/packages/rpinterest/index.html" target="_blank">CRAN</a>.</p>

<p>To install in R :</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"rpinterest"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>You can get the user manual in <a href="https://cran.r-project.org/web/packages/rpinterest/rpinterest.pdf" target="_blank">pdf</a>.</p>

<h3 id="rpinterest--dev">rpinterest ‚Äî dev</h3>
<p>You can get the dev package, and propose improvement and/or modifications on <a href="https://github.com/ColinFay/rpinterest" target="_blank">GitHub</a>.</p>
 </content>
 </item>
 
 <item>
  <title>rpinterest : acess the Pinterest API with R</title>
  <description></description>
  <link>/rpinterest-package-r/</link>
  <guid isPermaLink="true">http://localhost:4000/rpinterest-package-r/</guid>
  <pubDate>2016-07-30 00:00:00 +0200</pubDate>
  <content><h2 id="access-the-pinterest-api-with-r-with-rpinterest-">Access the Pinterest API with R with rpinterest. <!--more--></h2>
<p>This package requests information from the Pinterest API.</p>

<p>rpinterest is now on <a href="https://cran.r-project.org/web/packages/rpinterest/index.html">CRAN</a></p>
<h2 id="access-the-api">Access the API</h2>
<p>In order to get information from the API, you first need to get an access token from the <a href="https://developers.pinterest.com/tools/access_token/">Pinterest token generator</a>.</p>
<h2 id="install-rpinterest">Install rpinterest</h2>
<p>Install this package directly in R :</p>

<pre><code class="language-{r}">devtools::install_github("ColinFay/rpinterest
</code></pre>

<h2 id="how-rpinterest-works">How rpinterest works</h2>
<p>The version 0.1.0 works with seven functions. Which are :</p>
<ul>
 	<li>`BoardPinsByID` Get information about all the pins on a pinterest board using the board ID.</li>
 	<li>`BoardPinsByName` Get information about all the pins on a pinterest board using the board name.</li>
 	<li>`BoardSpecByID` Get information about a pinterest board using the board ID.</li>
 	<li>`BoardSpecByName` Get information about a pinterest board using the board name.</li>
 	<li>`PinSpecByID` Get information about a pinterest pin using the pin ID.</li>
 	<li>`UserSpecByID` Get information about a pinterest user using the user ID.</li>
 	<li>`UserSpecNyName` Get information about a pinterest user using the user name.</li>
</ul>

<h3 id="contact">Contact</h3>

<p>Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a> !</p>
 </content>
 </item>
 
 <item>
  <title>Create a map with R ‚Äî rgeoapi, ggmap and ggplot2</title>
  <description></description>
  <link>/create-map-ggplot2-rgeoapi-ggmap/</link>
  <guid isPermaLink="true">http://localhost:4000/create-map-ggplot2-rgeoapi-ggmap/</guid>
  <pubDate>2016-07-28 00:00:00 +0200</pubDate>
  <content><h2 id="improve-your-mapping-with-rgeoapi-a-package-designed-to-access-the-french-geographic-database">Improve your mapping with rgeoapi, a package designed to access the french geographic database.</h2>
<!--more-->

<h3 id="rgeowhat-">rgeowhat ?</h3>
<p>Developped by Etalab, with La Poste, l‚ÄôINSEE and OpenStreetMap, the <a href="https://api.gouv.fr/explorer/geoapi/">GeoAPI</a> API is a JSON interface designed to make requests on the French geographic database.</p>

<p>rgeoapi was developped to facilitate your geographic projects by giving you access to these informations straight inside R. With <code class="highlighter-rouge">rgeoapi</code>, you can get any coordinate, size and population of a French city, to be used in your maps.</p>

<p>To install :</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rinstall.packages</span><span class="p">(</span><span class="s2">"rgeoapi"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="get-coordinates">Get coordinates</h3>
<p>So, let‚Äôs imagine you have a dataset with only the names of the cities you want to map. Like:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">villes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">nom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Rennes"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Lorient"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Brest"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Vannes"</span><span class="p">),</span><span class="w"> </span><span class="n">variable1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"a"</span><span class="p">,</span><span class="w"> </span><span class="s2">"b"</span><span class="p">,</span><span class="w"> </span><span class="s2">"c"</span><span class="p">,</span><span class="w"> </span><span class="s2">"b"</span><span class="p">),</span><span class="w"> </span><span class="n">variable2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Un"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Deux"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Un"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Deux"</span><span class="p">))</span><span class="w">

</span></code></pre></div></div>
<table style="width: 44%;"><colgroup> <col width="11%" /> <col width="16%" /> <col width="16%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">nom</th>
<th align="center">variable1</th>
<th align="center">variable2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">Rennes</td>
<td align="center">a</td>
<td align="center">Un</td>
</tr>
<tr class="even">
<td align="center">Lorient</td>
<td align="center">b</td>
<td align="center">Deux</td>
</tr>
<tr class="odd">
<td align="center">Brest</td>
<td align="center">c</td>
<td align="center">Un</td>
</tr>
<tr class="even">
<td align="center">Vannes</td>
<td align="center">b</td>
<td align="center">Deux</td>
</tr>
</tbody>
</table>
<p>To put these cities on a map, you‚Äôll need their coordinates. For that, you can use <code class="highlighter-rouge">rgeoapi</code>!</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">rgeoapi</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span><span class="w">
</span><span class="n">geo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ldply</span><span class="p">(</span><span class="n">villes</span><span class="o">$</span><span class="n">nom</span><span class="p">,</span><span class="w"> </span><span class="n">ComByName</span><span class="p">)</span><span class="w">

</span></code></pre></div></div>
<table><caption> </caption><colgroup> <col width="28%" /> <col width="15%" /> <col width="23%" /> <col width="16%" /> <col width="16%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">name</th>
<th align="center">codeInsee</th>
<th align="center">codeDepartement</th>
<th align="center">codeRegion</th>
<th align="center">population</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">Rennes</td>
<td align="center">35238</td>
<td align="center">35</td>
<td align="center">53</td>
<td align="center">211373</td>
</tr>
<tr class="even">
<td align="center">Rennes-le-Ch√¢teau</td>
<td align="center">11309</td>
<td align="center">11</td>
<td align="center">76</td>
<td align="center">58</td>
</tr>
<tr class="odd">
<td align="center">Rennes-les-Bains</td>
<td align="center">11310</td>
<td align="center">11</td>
<td align="center">76</td>
<td align="center">258</td>
</tr>
<tr class="even">
<td align="center">Rennes-sur-Loue</td>
<td align="center">25488</td>
<td align="center">25</td>
<td align="center">27</td>
<td align="center">88</td>
</tr>
<tr class="odd">
<td align="center">Rennes-en-Grenouilles</td>
<td align="center">53189</td>
<td align="center">53</td>
<td align="center">52</td>
<td align="center">117</td>
</tr>
<tr class="even">
<td align="center">Lorient</td>
<td align="center">56121</td>
<td align="center">56</td>
<td align="center">53</td>
<td align="center">57961</td>
</tr>
<tr class="odd">
<td align="center">Brest</td>
<td align="center">29019</td>
<td align="center">29</td>
<td align="center">53</td>
<td align="center">139386</td>
</tr>
<tr class="even">
<td align="center">Brestot</td>
<td align="center">27110</td>
<td align="center">27</td>
<td align="center">28</td>
<td align="center">518</td>
</tr>
<tr class="odd">
<td align="center">Esboz-Brest</td>
<td align="center">70216</td>
<td align="center">70</td>
<td align="center">27</td>
<td align="center">485</td>
</tr>
<tr class="even">
<td align="center">Vannes</td>
<td align="center">56260</td>
<td align="center">56</td>
<td align="center">53</td>
<td align="center">53032</td>
</tr>
<tr class="odd">
<td align="center">Vannes-le-Ch√¢tel</td>
<td align="center">54548</td>
<td align="center">54</td>
<td align="center">44</td>
<td align="center">579</td>
</tr>
<tr class="even">
<td align="center">Pouy-sur-Vannes</td>
<td align="center">10301</td>
<td align="center">10</td>
<td align="center">44</td>
<td align="center">145</td>
</tr>
<tr class="odd">
<td align="center">Saulxures-l√®s-Vannes</td>
<td align="center">54496</td>
<td align="center">54</td>
<td align="center">44</td>
<td align="center">363</td>
</tr>
<tr class="even">
<td align="center">Vannes-sur-Cosson</td>
<td align="center">45331</td>
<td align="center">45</td>
<td align="center">24</td>
<td align="center">589</td>
</tr>
</tbody>
</table>
<table style="width: 46%;"><colgroup> <col width="13%" /> <col width="8%" /> <col width="11%" /> <col width="12%" /> </colgroup>
<thead>
<tr class="header">
<th align="center">surface</th>
<th align="center">lat</th>
<th align="center">long</th>
<th align="center">X_score</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">5035</td>
<td align="center">48.11</td>
<td align="center">-1.679</td>
<td align="center">1</td>
</tr>
<tr class="even">
<td align="center">1497</td>
<td align="center">42.91</td>
<td align="center">2.277</td>
<td align="center">0.7636</td>
</tr>
<tr class="odd">
<td align="center">1975</td>
<td align="center">42.92</td>
<td align="center">2.341</td>
<td align="center">0.7533</td>
</tr>
<tr class="even">
<td align="center">547</td>
<td align="center">47.01</td>
<td align="center">5.855</td>
<td align="center">0.6743</td>
</tr>
<tr class="odd">
<td align="center">801</td>
<td align="center">48.49</td>
<td align="center">-0.5083</td>
<td align="center">0.6239</td>
</tr>
<tr class="even">
<td align="center">1533</td>
<td align="center">47.75</td>
<td align="center">-3.378</td>
<td align="center">1</td>
</tr>
<tr class="odd">
<td align="center">4948</td>
<td align="center">48.4</td>
<td align="center">-4.502</td>
<td align="center">0.7183</td>
</tr>
<tr class="even">
<td align="center">884</td>
<td align="center">49.34</td>
<td align="center">0.6783</td>
<td align="center">0.6958</td>
</tr>
<tr class="odd">
<td align="center">977</td>
<td align="center">47.8</td>
<td align="center">6.441</td>
<td align="center">0.4919</td>
</tr>
<tr class="even">
<td align="center">3313</td>
<td align="center">47.65</td>
<td align="center">-2.749</td>
<td align="center">1</td>
</tr>
<tr class="odd">
<td align="center">1747</td>
<td align="center">48.57</td>
<td align="center">5.785</td>
<td align="center">0.7384</td>
</tr>
<tr class="even">
<td align="center">1579</td>
<td align="center">48.3</td>
<td align="center">3.597</td>
<td align="center">0.6873</td>
</tr>
<tr class="odd">
<td align="center">1826</td>
<td align="center">48.52</td>
<td align="center">5.804</td>
<td align="center">0.678</td>
</tr>
<tr class="even">
<td align="center">3558</td>
<td align="center">47.72</td>
<td align="center">2.202</td>
<td align="center">0.6653</td>
</tr>
</tbody>
</table>
<p>¬†</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">names</span><span class="p">(</span><span class="n">villes</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"name"</span><span class="w">
</span><span class="n">villes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">villes</span><span class="p">,</span><span class="w"> </span><span class="n">geo</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"name"</span><span class="p">,</span><span class="w"> </span><span class="n">all.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<h3 id="create-a-map-with-ggmap-and-ggplot2">Create a map with ggmap and ggplot2</h3>
<p>The <code class="highlighter-rouge">ggmap</code> package has been designed to produce background maps to be used with <code class="highlighter-rouge">ggplot2</code>. The ‚Äúfast‚Äù function to create a map is <code class="highlighter-rouge">qmap(x,y)</code> - the first argument referring to the query (city / department / region ‚Ä¶) and the second to the zoom level of Google map.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">ggmap</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">qmap</span><span class="p">(</span><span class="s1">'Bretagne'</span><span class="p">,</span><span class="w"> </span><span class="n">zoom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>Once you have a map object, you can use it as the first argument of your ggplot call, and then combine it with your usual <code class="highlighter-rouge">geom</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">map</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">villes</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="w"> </span><span class="n">variable2</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">surface</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>
<p><a href="https://colinfay.github.io/wp-content/uploads/2016/07/carte-avec-rgeoapi.jpeg"><img class="aligncenter size-full wp-image-1017" src="https://colinfay.github.io/wp-content/uploads/2016/07/carte-avec-rgeoapi.jpeg" alt="R√©aliser une carte avec R, ggplot2 et rgeoapi" width="600" height="400" /></a></p>

<p>¬†</p>

<p>Easy, isn‚Äôt it!</p>
 </content>
 </item>
 
 <item>
  <title>rgeoapi ‚Äî A package to access the G√©oAPI</title>
  <description></description>
  <link>/rgeoapi-package-r/</link>
  <guid isPermaLink="true">http://localhost:4000/rgeoapi-package-r/</guid>
  <pubDate>2016-06-05 00:00:00 +0200</pubDate>
  <content><h2 id="rgeoapi-connects-r-to-the-g√©oapi-in-order-to-get-information-about-french-geography">rgeoapi connects R to the G√©oAPI, in order to get information about french geography.</h2>
<!--more-->
<p>rgeoapi is now on <a href="https://cran.r-project.org/web/packages/rgeoapi/">CRAN</a></p>
<h1 id="rgeoapi"><a id="user-content-rgeoapi" class="anchor" href="https://github.com/ColinFay/rgeoapi#rgeoapi"></a>rgeoapi</h1>
<p>This package requests informations from the French GeoAPI inside R ‚Äî <a href="https://api.gouv.fr/explorer/geoapi/">https://api.gouv.fr/explorer/geoapi/</a></p>
<h2 id="geoapi"><a id="user-content-geoapi" class="anchor" href="https://github.com/ColinFay/rgeoapi#geoapi"></a>GeoAPI</h2>
<p>Developped by Etalab, with La Poste, l‚ÄôINSEE and OpenStreetMap, the <a href="https://api.gouv.fr/explorer/geoapi/">GeoAPI</a> API is a JSON interface designed to make requests on the French geographic database.</p>

<p>rgeoapi was developped to facilitate your geographic projects by giving you access to these informations straight inside R. With <code class="highlighter-rouge">rgeoapi</code>, you can get any coordinate, size and population of a French city, to be used in your maps.</p>

<p>For an optimal compatibility, all the names (especially outputs) used in this package are the same as the ones used in the GeoAPI. Please note that this package works only with French cities.</p>

<h2 id="install-this-package-directly-in-r-">Install this package directly in R :</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="s2">"ColinFay/rgeoapi"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="how-rgeoapi-works">How rgeoapi works</h2>
<p>The version 1.0.0 works with eleven functions. Which are :</p>
<ul>
 	<li>`ComByCode` Get City by INSEE Code</li>
 	<li>`ComByCoord` Get City by Coordinates</li>
 	<li>`ComByDep` Get Cities by Department</li>
 	<li>`ComByName` Get City by Name</li>
 	<li>`ComByPostal` Get City by Postal Code</li>
 	<li>`ComByReg` Get Cities by Region</li>
 	<li>`DepByCode` Get Department by INSEE Code</li>
 	<li>`DepByName` Get Department by Name</li>
 	<li>`DepByReg` Get Departments by Region</li>
 	<li>`RegByCode` Get Region by INSEE Code</li>
 	<li>`RegByName` Get Region by Name</li>
</ul>
<h2 id="how-the-functions-are-constructed">How the functions are constructed</h2>
<p>In the <a href="https://api.gouv.fr/explorer/geoapi/">GeoAPI</a>, you can request for ‚ÄúCommune‚Äù, ‚ÄúD√©partement‚Äù or ‚ÄúR√©gion‚Äù. All the functions are constructed using this terminology : AByB.</p>
<ul>
 	<li>A being the output you need -- Com for "Commune" (refering to French cities), Dep for D√©partement (for Department) and Reg for R√©gion.</li>
 	<li>B being the request parameter -- Code for INSEE Code, Coord for Coordinates (WGS-84), Dep for Department, Name for name, Postal for Postal Code and Reg for Region.</li>
</ul>

<h3 id="french-tutorial--contact">French Tutorial &amp; contact</h3>
<p>A French tutorial on <a href="http://colinfay.me/rgeoapi-v1/">my website</a>. Questions and feedbacks <a href="mailto:contact@colinfay.me">welcome</a> !</p>

 </content>
 </item>
 
 <item>
  <title>#RStats ‚Äî Text mining with R and gutenbergr</title>
  <description></description>
  <link>/rstats-text-mining-r-gutenbergr-2/</link>
  <guid isPermaLink="true">http://localhost:4000/rstats-text-mining-r-gutenbergr-2/</guid>
  <pubDate>2016-05-24 00:00:00 +0200</pubDate>
  <content><h2 id="introduction-to-text-mining-with-r-and-gutenbergr">Introduction to text-mining with R and gutenbergr.</h2>
<!--more-->

<h3 id="what-is-text-mining-">What is text-mining ?</h3>
<p>At the crossroads of <strong>linguistics</strong>, <strong>computer science</strong> and <strong>statistics</strong>, text-mining is a data-mining technic used to analyze a corpus, in order to discover <strong>patterns</strong>, <strong>trends</strong> and <strong>singularities</strong> in a large number of texts. For example, you can analyse the Twitter description of your followers, or even get information from 5000 Facebook statuses, etc. Pretty cool, right?</p>

<p>The first ‚Äústep‚Äù is perhaps the simplest to understand : <strong>frequency analysis</strong>. As the name suggests, this technique calculates the recurrence of each word inside a corpus ‚Äî in other words‚Ä¶ their frequency. This allows you to compare several texts. As an example, let‚Äôs assume you‚Äôre analysing 2500 comments on the Facebook page of your favorite brand / city / star, and find that among the most frequent words are ‚Äúthank you‚Äù, ‚Äúbeautiful‚Äù, ‚Äúsuper‚Äù. If you take two competing brands / cities / stars, you come across ‚Äúyeurk‚Äù and ‚Äúhate‚Äù on one, and ‚Äúdisgusting‚Äù and ‚Äúcatastrophic‚Äù on the other‚Ä¶ pretty straightforward, isn‚Äôt it?</p>

<h3 id="gutenbergr">gutenbergr</h3>
<p>I‚Äôve chosen to analyse Lewis Caroll‚Äôs famous masterpiece, <em>Alice‚Äôs Adventures in Wonderland</em>. Why? I could have selected the last 1500 Tweets containing #Rennes ‚Ä¶ but:</p>
<ul>
 	<li>That has been done before</li>
 	<li>Good literature has never hurt anyone :)</li>
</ul>
<p><a href="https://cran.r-project.org/web/packages/gutenbergr/index.html">gutenbergr</a> is an R package you can use to dowload books from the <a href="https://www.gutenberg.org/">Gutenberg Project</a>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">gutenbergr</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">aliceref</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gutenberg_works</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Alice's Adventures in Wonderland"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>This function gives you a list with the following elements:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## [1] "gutenberg_id"        "title"               "author"             </span><span class="w">
</span><span class="c1">## [4] "gutenberg_author_id" "language"            "gutenberg_bookshelf"</span><span class="w">
</span><span class="c1">## [7] "rights"              "has_text"</span><span class="w">
</span></code></pre></div></div>
<p>The first column contains the reference of the book you‚Äôre looking for in the Gutenberg catalogue. You need this number to download the book:</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">
</span><span class="n">alice</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gutenberg_download</span><span class="p">(</span><span class="n">aliceref</span><span class="o">$</span><span class="n">gutenberg_id</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">gutenberg_strip</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>
<p>Here, <code class="highlighter-rouge">gutenberg_download</code> takes the ID of the book you want to download, and returns you a data.frame with the full text. <code class="highlighter-rouge">gutenberg_strip</code> removes all the metadata at the beginning of the book.</p>

<h3 id="alices-adventures-in-wonderland">Alice‚Äôs Adventures in Wonderland</h3>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p>To perform your data analysis, you‚Äôll need the <code class="highlighter-rouge">tidytext</code> package. Then :</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tidytext</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data_frame</span><span class="p">(</span><span class="n">line</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">alice</span><span class="p">),</span><span class="w"> </span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">alice</span><span class="o">$</span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
 </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
 </span><span class="n">anti_join</span><span class="p">(</span><span class="n">stop_words</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
 </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">sort</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">barplot</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="n">head</span><span class="p">(</span><span class="n">tidytext</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="o">$</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">names.arg</span><span class="o">=</span><span class="n">head</span><span class="p">(</span><span class="n">tidytext</span><span class="p">,</span><span class="m">10</span><span class="p">)</span><span class="o">$</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">xlab</span><span class="o">=</span><span class="s2">"Mots"</span><span class="p">,</span><span class="w"> </span><span class="n">ylab</span><span class="o">=</span><span class="s2">"Fr√©quence"</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="o">=</span><span class="s2">"#973232"</span><span class="p">,</span><span class="w"> </span><span class="n">main</span><span class="o">=</span><span class="s2">"Alice in Wonderland"</span><span class="p">)</span><span class="w">


</span></code></pre></div></div>

<p>Perfect! So‚Ä¶<em>drum rolls</em>‚Ä¶</p>

<p><a href="https://colinfay.github.io/wp-content/uploads/2016/05/alice-in-wonderland.png"><img class="aligncenter size-full wp-image-1663" src="https://colinfay.github.io/wp-content/uploads/2016/05/alice-in-wonderland.png" alt="" width="1200" height="600" /></a></p>

<p>Further reading (in french) :</p>

<p><a href="http://data-bzh.fr/text-mining-r-part-2/">Racinisation et lemmatisation avec R</a></p>

<p><a href="http://data-bzh.fr/text-mining-r-part-3/">Cr√©er un nuage de mots avec R</a></p>
<h3 id="read-more-">Read more :</h3>
<p><a href="https://www.amazon.fr/gp/product/1491981652/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=1491981652&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining With R: A Tidy Approach</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=1491981652" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/148336934X/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=148336934X&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining: A Guidebook for the Social Sciences</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=148336934X" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/1461432227/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=1461432227&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Mining Text Data</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=1461432227" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/3330006455/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=3330006455&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=3330006455" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/178355181X/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=178355181X&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Mastering Text Mining with R</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=178355181X" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/1119282012/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=1119282012&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining in Practice With R</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=1119282012" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/B00RZK7UCE/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=B00RZK7UCE&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining: From Ontology Learning to Automated Text Processing Applications</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=B00RZK7UCE" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/B008KZULQ0/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=B008KZULQ0&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining: Classification, Clustering, and Applications</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=B008KZULQ0" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/1627058982/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=1627058982&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Phrase Mining from Massive Text and Its Applications</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=1627058982" alt="" width="1" height="1" border="0" />
<a href="https://www.amazon.fr/gp/product/B005UQLIA0/ref=as_li_tl?ie=UTF8&amp;camp=1642&amp;creative=6746&amp;creativeASIN=B005UQLIA0&amp;linkCode=as2&amp;tag=dabz-21" rel="nofollow">Text Mining: Applications and Theory</a><img style="border: none !important; margin: 0px !important;" src="http://ir-fr.amazon-adsystem.com/e/ir?t=dabz-21&amp;l=as2&amp;o=8&amp;a=B005UQLIA0" alt="" width="1" height="1" border="0" /></p>
 </content>
 </item>
 

</channel>
</rss>
